{"version":3,"sources":["./src/forms-module/list/rounds-list/rounds-list.component.html","./src/forms-module/update/order-status-update/order-status-update.component.ts","./src/forms-module/view/order-details/order-details.component.ts","./src/forms-module/list/messages-list/messages-list.component.html","./src/forms-module/create/order-status-create/order-status-create.component.css","./src/forms-module/create/message-create/message-create.component.scss","./src/forms-module/create/client-create/client-create.component.html","./src/forms-module/reports-search/reports-search.component.html","./src/forms-module/view/order-details/order-details.component.css","./src/forms-module/update/employee-update/employee-update.component.css","./src/forms-module/create/area-create/area-create.component.css","./src/forms-module/list/client-list/client-list.component.ts","./src/forms-module/create/employee-create/employee-create.component.css","./src/forms-module/list/postponed-orders/postponed-orders.component.css","./src/forms-module/view/city-details/city-details.component.html","./src/forms-module/update/area-update/area-update.component.html","./src/forms-module/create/order-status-create/order-status-create.component.html","./src/forms-module/list/messages-list/messages-list.component.ts","./src/forms-module/move-orders-dialog/move-orders-dialog.component.html","./src/forms-module/list/areagroup-list/areagroup-list.component.html","./src/forms-module/update/order-update/order-update.component.html","./src/forms-module/forms.routing.ts","./src/forms-module/list/area-list/area-list.component.css","./src/forms-module/create/order-create/order-create.component.ts","./src/forms-module/reports-search/reports-search.component.ts","./src/forms-module/view/driver-details/driver-details.component.ts","./src/forms-module/list/endusers-list/endusers-list.component.css","./src/forms-module/create/client-brand-create/client-brand-create.component.ts","./src/forms-module/update/postponed-order-update/postponed-order-update.component.ts","./src/forms-module/create/driver-create/driver-create.component.html","./src/forms-module/list/order-list/order-list.component.html","./src/forms-module/view/driver-details/driver-details.component.html","./src/forms-module/create/city-create/city-create.component.html","./src/forms-module/list/driver-list/driver-list.component.ts","./src/forms-module/list/client-list/client-list.component.css","./src/forms-module/create/message-create/message-create.component.ts","./src/forms-module/update/client-update/client-update.component.html","./src/forms-module/update/driver-update/driver-update.component.html","./src/forms-module/list/record-list/record-list.component.ts","./src/forms-module/view/enduser-details/enduser-details.component.ts","./src/forms-module/move-orders-dialog/move-orders-dialog.component.css","./src/forms-module/create/areagroup-create/areagroup-create.component.html","./src/forms-module/list/endusers-list/endusers-list.component.ts","./src/forms-module/view/area-details/area-details.component.html","./src/forms-module/forms.module.ts","./src/forms-module/view/employee-details/employee-details.component.html","./src/forms-module/create/enduser-create/enduser-create.component.ts","./src/forms-module/view/area-details/area-details.component.css","./src/forms-module/create/area-create/area-create.component.html","./src/forms-module/list/client-brand-list/client-brand-list.component.html","./src/forms-module/list/area-list/area-list.component.ts","./src/forms-module/update/enduser-update/enduser-update.component.css","./src/forms-module/update/order-status-update/order-status-update.component.css","./src/forms-module/list/order-list/order-list.component.css","./src/forms-module/update/area-update/area-update.component.ts","./src/forms-module/create/area-create/area-create.component.ts","./src/forms-module/update/order-update/order-update.component.css","./src/forms-module/view/area-details/area-details.component.ts","./src/forms-module/list/client-brand-list/client-brand-list.component.ts","./src/forms-module/list/employee-list/employee-list.component.ts","./src/forms-module/create/client-create/client-create.component.css","./src/forms-module/view/enduser-details/enduser-details.component.html","./src/forms-module/list/city-list/city-list.component.ts","./src/forms-module/update/driver-update/driver-update.component.ts","./src/forms-module/push-notifications/push-notifications.component.ts","./src/forms-module/company-revenue/company-revenue.component.html","./src/forms-module/update/enduser-update/enduser-update.component.ts","./src/forms-module/view/areagroup-details/areagroup-details.component.html","./src/forms-module/create/city-create/city-create.component.ts","./src/forms-module/view/order-status-details/order-status-details.component.ts","./src/forms-module/list/city-list/city-list.component.css","./src/forms-module/create/client-brand-create/client-brand-create.component.html","./src/forms-module/list/city-list/city-list.component.html","./src/forms-module/view/round-details/round-details.component.html","./src/forms-module/list/record-list/record-list.component.html","./src/forms-module/list/rounds-list/rounds-list.component.ts","./src/forms-module/list/order-status-list/order-status-list.component.css","./src/forms-module/view/employee-details/employee-details.component.css","./src/forms-module/list/order-list-admin/order-list-admin.component.css","./src/forms-module/view/record-details/record-details.component.css","./src/forms-module/update/employee-update/employee-update.component.html","./src/forms-module/create/city-create/city-create.component.css","./src/forms-module/update/enduser-update/enduser-update.component.html","./src/forms-module/company-revenue/company-revenue.component.ts","./src/forms-module/list/client-brand-list/client-brand-list.component.css","./src/forms-module/create/employee-create/employee-create.component.html","./src/forms-module/list/employee-list/employee-list.component.html","./src/forms-module/list/promo-code-list/promo-code-list.component.html","./src/forms-module/update/promo-code-update/promo-code-update.component.css","./src/forms-module/update/employee-update/employee-update.component.ts","./src/forms-module/list/promo-code-list/promo-code-list.component.ts","./src/forms-module/update/postponed-order-update/postponed-order-update.component.html","./src/forms-module/list/employee-list/employee-list.component.css","./src/forms-module/view/client-details/client-details.component.ts","./src/forms-module/create/enduser-create/enduser-create.component.html","./src/forms-module/create/promo-code-create/promo-code-create.component.html","./src/shared/models/date-picker-adapter.ts","./src/forms-module/create/driver-create/driver-create.component.css","./src/forms-module/view/client-details/client-details.component.css","./src/forms-module/update/areagroup-update/areagroup-update.component.ts","./src/forms-module/list/record-list/record-list.component.css","./node_modules/@ng-select/ng-select/__ivy_ngcc__/fesm2015/ng-select-ng-select.js","./src/forms-module/create/order-status-create/order-status-create.component.ts","./src/forms-module/list/area-list/area-list.component.html","./src/forms-module/create/order-create/order-create.component.html","./src/forms-module/list/messages-list/messages-list.component.css","./src/forms-module/create/areagroup-create/areagroup-create.component.ts","./src/forms-module/company-revenue/company-revenue.component.css","./src/forms-module/list/order-status-list/order-status-list.component.ts","./src/forms-module/update/postponed-order-update/postponed-order-update.component.css","./src/forms-module/reports-search/reports-search.component.css","./src/forms-module/update/areagroup-update/areagroup-update.component.css","./src/forms-module/list/order-list/order-list.component.ts","./src/forms-module/update/order-update/order-update.component.ts","./src/forms-module/update/promo-code-update/promo-code-update.component.ts","./src/forms-module/update/areagroup-update/areagroup-update.component.html","./src/forms-module/create/client-brand-create/client-brand-create.component.css","./src/forms-module/list/promo-code-list/promo-code-list.component.css","./src/forms-module/update/area-update/area-update.component.css","./src/forms-module/list/driver-list/driver-list.component.css","./src/forms-module/list/order-status-list/order-status-list.component.html","./src/forms-module/push-notifications/push-notifications.component.html","./src/forms-module/view/record-details/record-details.component.ts","./src/forms-module/list/postponed-orders/postponed-orders.component.ts","./src/forms-module/push-notifications/push-notifications.component.scss","./src/forms-module/view/promo-code-details/promo-code-details.component.html","./src/forms-module/view/employee-details/employee-details.component.ts","./src/forms-module/update/client-update/client-update.component.css","./src/forms-module/update/city-update/city-update.component.css","./src/forms-module/view/areagroup-details/areagroup-details.component.css","./src/forms-module/view/city-details/city-details.component.ts","./src/forms-module/create/areagroup-create/areagroup-create.component.css","./src/forms-module/move-orders-dialog/move-orders-dialog.component.ts","./src/forms-module/view/round-details/round-details.component.ts","./src/forms-module/list/postponed-orders/postponed-orders.component.html","./src/forms-module/view/client-details/client-details.component.html","./src/forms-module/view/record-details/record-details.component.html","./src/forms-module/view/city-details/city-details.component.css","./src/forms-module/create/message-create/message-create.component.html","./src/forms-module/view/areagroup-details/areagroup-details.component.ts","./src/forms-module/view/order-status-details/order-status-details.component.css","./src/forms-module/view/enduser-details/enduser-details.component.css","./src/forms-module/list/endusers-list/endusers-list.component.html","./src/forms-module/update/order-status-update/order-status-update.component.html","./src/forms-module/create/promo-code-create/promo-code-create.component.ts","./src/forms-module/list/order-list-admin/order-list-admin.component.html","./src/forms-module/update/driver-update/driver-update.component.css","./src/forms-module/view/order-details/order-details.component.html","./src/forms-module/create/driver-create/driver-create.component.ts","./src/forms-module/view/round-details/round-details.component.css","./src/forms-module/update/city-update/city-update.component.html","./src/forms-module/update/city-update/city-update.component.ts","./src/forms-module/update/client-update/client-update.component.ts","./src/forms-module/create/enduser-create/enduser-create.component.css","./src/forms-module/view/order-status-details/order-status-details.component.html","./src/forms-module/view/driver-details/driver-details.component.css","./src/forms-module/create/employee-create/employee-create.component.ts","./src/forms-module/list/areagroup-list/areagroup-list.component.css","./src/forms-module/create/promo-code-create/promo-code-create.component.css","./src/forms-module/update/promo-code-update/promo-code-update.component.html","./src/forms-module/list/driver-list/driver-list.component.html","./src/forms-module/view/promo-code-details/promo-code-details.component.ts","./src/forms-module/list/rounds-list/rounds-list.component.css","./src/forms-module/list/areagroup-list/areagroup-list.component.ts","./src/forms-module/list/client-list/client-list.component.html","./src/forms-module/list/order-list-admin/order-list-admin.component.ts","./src/forms-module/view/promo-code-details/promo-code-details.component.css","./src/forms-module/create/order-create/order-create.component.css","./src/forms-module/create/client-create/client-create.component.ts"],"names":[],"mappings":"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,QAAQ,EAAE;;AAExE;AACA;AACA;AACA;AACA;AACA,0DAA0D,oCAAoC;AAC9F,uBAAuB,wEAAkB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;AACpK,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,eAAe,EAAE;;AAEtcAAc,QAAQ;AACtvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B,GAAG,MAAM;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,4CAA4C;AACtH,+BAA+B,gEAAyB,EAAE,sEAAsE;AAChI,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;;AAE5C;AACA;AACA,wEAAwE,4DAAuB,GAAG,kDAAa;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C,6BAA6B,4CAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,cAAc;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAS;AACrB,sBAAsB,gEAAS,kBAAkB,gEAAS;AAC1D;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAK,CAAC,sDAAS,gCAAgC,gBAAgB,GAAG,sDAAS,+BAA+B,gBAAgB,QAAQ,gEAAS;AACvJ;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,iBAAiB;AAC5E;AACA;AACA,8BAA8B,qCAAqC;AACnE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,aAAa;AACzE;AACA,mDAAmD,gCAAgC;AACnF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,cAAc;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,4CAA4C,+DAAwB,CAAC,uDAAgB,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,0BAA0B,+DAAwB,CAAC,wDAAiB,GAA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AACA,6BAA6B,0DAAY;AACzC,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C,6BAA6B,0DAAY;AACzC,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C,8BAA8B,0DAAY;AAC1C,4BAA4B,0DAAY;AACxC,+BAA+B,0DAAY;AAC3C,0BAA0B,0DAAY;AACtC,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC,8BAA8B,4CAAO;AACrC,iCAAiC;AACjC,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wFAAwF;AACpH;AACA;AACA;AACA;AACA;AACA,oBAAoB,wCAAwC;AAC5D;AACA,oBAAoB,oEAAoE;AACxuDAAuD;AACvD;AACA;AACA;AACA,wEAAwE,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAA8D;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"forms-module-forms-module-es2015.js","sourcesContent":["export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'listRounds'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'financialRoundsManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        \\r\\n                        <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                            (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\"\\r\\n                                [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                            </app-dynamic-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { OrderStatusUpdateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-order-status-update',\r\n  templateUrl: './order-status-update.component.html',\r\n  styleUrls: ['./order-status-update.component.css'],\r\n})\r\nexport class OrderStatusUpdateComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dynamicService: DynamicDataService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  ngOnDestroy(): void {\r\n    this.dynamicFormInput = new DynamicFormInput();\r\n  }\r\n  public Id: number;\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe((params) => {\r\n      this.Id = params.id;\r\n      this.getAsync(this.Id);\r\n    });\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.OrderStatus, id).subscribe((res) => {\r\n      this.getFieldsData(res);\r\n    });\r\n  }\r\n\r\n  public getFieldsData(orderStatus: any) {\r\n    this.dynamicFormInput = OrderStatusUpdateForm;\r\n    this.dynamicFormInput.formFields.forEach((field) => {\r\n      field.value = orderStatus[field.fieldId];\r\n    });\r\n    this.spinner.hide();\r\n    this.isLoading = false;\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.Id);\r\n\r\n    let formData = new FormData();\r\n    Object.entries(event.data).forEach((element) => {\r\n      console.log(element);\r\n      var file;\r\n      if (element[0] == 'icon') {\r\n        file = element[1] as Blob;\r\n        formData.append(element[0], file);\r\n      } else {\r\n        formData.append(element[0], element[1] as string);\r\n      }\r\n    });\r\n\r\n    this.baseService\r\n      .postFormItem(Controllers.OrderStatus, Actions.EditItem, formData)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(res, 'success');\r\n          this.router.navigate(['/forms/order-status-list']);\r\n        },\r\n        (error) => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          } else {\r\n            this.notification.showNotification('somethingWentWrong', 'danger');\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\nimport { ListActionTypeEnum } from '../../../shared/enums/enums';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-order-details',\r\n  templateUrl: './order-details.component.html',\r\n  styleUrls: ['./order-details.component.css']\r\n})\r\nexport class OrderDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dynamicService: DynamicDataService,\r\n    private notification: NotificationService,  private dialog: MatDialog,\r\n    private translate: TranslateService, private router: Router\r\n  ) { }\r\n  public orderNoteId: number;\r\n  public order: any;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public notes: any[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public pageSize = 10;\r\n  dataSource: MatTableDataSource<any>;\r\n  public pageNumber = 1;\r\n  public areasList: any[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe(params => {\r\n     this.orderNoteId = params.id;\r\n     this.getAsync(params.id); \r\n    \r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.Order, id).subscribe(res => {     \r\n      this.order = res;\r\n      console.log(res);\r\n      this.detailsInput.dataObject = this.order;   \r\n      this.isLoading = false;     \r\n      this.spinner.hide(); \r\n    }) \r\n  }\r\n   public getListSettings() {\r\n    this.dynamicService.getListSettings('OrderNotesList').subscribe(res => {\r\n      this.order = res;\r\n      this.dynamicListInput =this.order;\r\n   \r\n      this.getListData();\r\n      \r\n    });\r\n  }\r\n\r\n  public exportPdf(){ \r\n     let request = {\r\n       ordersId:1\r\n  }\r\n    this.baseService.downloadPdf(Controllers.Order, Actions.ExportPdf, request).subscribe(res => {\r\n     console.log(res);\r\n      // var a = document.createElement(\"a\");\r\n      // const blob = new Blob([res.body], { type:res.body.type });\r\n      // a.href = URL.createObjectURL(blob);\r\n      // a.download = 'OrderDetails.pdf';\r\n      // a.click();\r\n    });\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n      orderId :  this.orderNoteId\r\n    }\r\n    console.log('Request',request);\r\n    this.baseService.postItem(Controllers.OrderNotes, Actions.GetList, request).subscribe(res => {\r\n      console.log(res);\r\n      this.notes = res.entities;\r\n      this.dynamicListInput.data =this.notes;\r\n      this.dynamicListInput.totalCount = res.totalCount;\r\n \r\n      this.isLoading = false;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete:\r\n        {\r\n          const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n            width: '400px',\r\n            data: {\r\n              title: 'confirm',\r\n              content: 'confirmDeleteMessage'\r\n            }\r\n          })\r\n\r\n          dialogRef.afterClosed().subscribe(res => {\r\n            if (res) {\r\n              this.spinner.show();\r\n        \r\n              this.baseService.removeItemById(Controllers.Order, event.entityId).subscribe(res => {\r\n                this.getListData(this.pageSize, this.pageNumber);\r\n                this.isLoading = false;\r\n                this.spinner.hide();\r\n                this.notification.showNotification(res, 'success')\r\n              }, error => {\r\n                if (error.status === 400) {\r\n                  this.notification.showNotification(error.error, 'danger');\r\n                }\r\n                else {\r\n                  this.notification.showNotification('somethingWentWrong', 'danger');\r\n                }\r\n                this.spinner.hide();\r\n              });\r\n            }\r\n          })\r\n\r\n          break;\r\n        }\r\n      case ListActionTypeEnum.Edit:\r\n        {\r\n          this.router.navigate([`/forms/order-update/${event.entityId}`]);\r\n          break;\r\n        }\r\n      case ListActionTypeEnum.View:\r\n        {\r\n          this.router.navigate([`/forms/order-details/${event.entityId}`]);\r\n          break;\r\n        }\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n \r\n}\r\n\r\n\r\n\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'messagesList'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'employeeMessages' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                            <ul class=\\\"flash_msg\\\">\\r\\n                                <li class=\\\"msg s_base\\\" *ngFor=\\\"let message of messagesList\\\">\\r\\n                                    <span class=\\\"icon-circle\\\"><mat-icon>email</mat-icon></span>\\r\\n                                    <div class=\\\"text\\\">\\r\\n                                        <div class=\\\"title\\\">{{message.createdBy}}</div>\\r\\n                                        <div class=\\\"content\\\">{{message.messageText}}</div>\\r\\n                                    </div>\\r\\n                                    <span >{{message.createdAt}}</span>\\r\\n                                </li>\\r\\n                            </ul>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9vcmRlci1zdGF0dXMtY3JlYXRlL29yZGVyLXN0YXR1cy1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9tZXNzYWdlLWNyZWF0ZS9tZXNzYWdlLWNyZWF0ZS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'clientCreate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'clientsManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'reports'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'reportsManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"px-6 py-4\\\" fxLayout=\\\"column\\\">\\r\\n                            <form [formGroup]=\\\"filterForm\\\">\\r\\n                              <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"25px\\\" fxLayoutGap.lt-sm=\\\"0\\\">\\r\\n                                <mat-radio-group aria-label=\\\"Select an option\\\"  formControlName=\\\"userType\\\" (change)=\\\"changeRadio()\\\">\\r\\n                                  <mat-radio-button [value]=\\\"2\\\" style=\\\"margin: 10px;\\\" *ngIf=\\\"isTracker || isAdmin\\\">{{'driver' | translate}}</mat-radio-button>\\r\\n                                  <mat-radio-button [value]=\\\"3\\\" style=\\\"margin: 10px;\\\" *ngIf=\\\"isAdmin\\\">{{'page' | translate}}</mat-radio-button>\\r\\n                                  <mat-radio-button [value]=\\\"4\\\" style=\\\"margin: 10px;\\\" *ngIf=\\\"isAdmin\\\">{{'pageDetails' | translate}}</mat-radio-button>\\r\\n                                  <mat-radio-button [value]=\\\"5\\\" *ngIf=\\\"isAdmin || isDataEntry\\\">{{'dailyDriversDetails' | translate}}</mat-radio-button>\\r\\n                                </mat-radio-group>\\r\\n                              </div>  \\r\\n                              <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"25px\\\" fxLayoutGap.lt-sm=\\\"0\\\" *ngIf=\\\"userType.value == 3\\\">\\r\\n                                <mat-form-field class=\\\"w-100\\\"  appearance=\\\"outline\\\">\\r\\n                                  <mat-label>{{ 'filterMerchants' | translate }}</mat-label>\\r\\n                                  <input autocomplete=\\\"filterMerchantsOff\\\" matInput  [formControl]=\\\"merchantsControl\\\"\\r\\n                                    [placeholder]=\\\"'filterMerchants' | translate\\\" [matAutocomplete]=\\\"filterMerchants\\\">\\r\\n                                  <mat-autocomplete autocomplete=\\\"filterMerchantsf2f\\\" [displayWith]=\\\"displayMerchantFn\\\" #filterMerchants=\\\"matAutocomplete\\\"\\r\\n                                    (optionSelected)=\\\"merchantSelected($event)\\\">\\r\\n                                    <mat-option *ngFor=\\\"let option of filteredMerchantsOptions | async\\\" [value]=\\\"option\\\">\\r\\n                                      {{languageService.getCurrentLanguage()=='ar'? (option.viewValueAr |translate) :\\r\\n                                      (option.viewValueEn |translate)}}\\r\\n                                    </mat-option>\\r\\n                                  </mat-autocomplete>\\r\\n                                </mat-form-field>\\r\\n                              </div>  \\r\\n                              <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"25px\\\" fxLayoutGap.lt-sm=\\\"0\\\" *ngIf=\\\"userType.value == 2\\\">\\r\\n                                <mat-form-field class=\\\"w-100\\\"  appearance=\\\"outline\\\">\\r\\n                                  <mat-label>{{ 'filterDrivers' | translate }}</mat-label>\\r\\n                                  <input autocomplete=\\\"filterDriversOff\\\" matInput  [formControl]=\\\"driversControl\\\"\\r\\n                                    [placeholder]=\\\"'filterDrivers' | translate\\\" [matAutocomplete]=\\\"filterDrivers\\\">\\r\\n                                  <mat-autocomplete autocomplete=\\\"filterDriversOf2f\\\" [displayWith]=\\\"displayDriverFn\\\" #filterDrivers=\\\"matAutocomplete\\\"\\r\\n                                    (optionSelected)=\\\"driverSelected($event)\\\">\\r\\n                                    <mat-option *ngFor=\\\"let option of filteredDriversOptions | async\\\" [value]=\\\"option\\\">\\r\\n                                      {{languageService.getCurrentLanguage()=='ar'? (option.viewValueAr |translate) :\\r\\n                                      (option.viewValueEn |translate)}}\\r\\n                                    </mat-option>\\r\\n                                  </mat-autocomplete>\\r\\n                                </mat-form-field>\\r\\n                              \\r\\n                              </div>\\r\\n                              <div *ngIf=\\\"!isWithoutDates\\\" fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"25px\\\" fxLayoutGap.lt-sm=\\\"0\\\">\\r\\n                                <mat-form-field fxFlex=\\\"auto\\\" appearance=\\\"outline\\\">\\r\\n                                  <mat-label>{{'fromDate' | translate}} </mat-label>\\r\\n                                  <input [matDatepicker]=\\\"fromDatePicker\\\" (dateChange)=\\\"changeDate(dateFrom.value,0)\\\" #dateFrom formControlName=\\\"ordersDateFrom\\\"  matInput>\\r\\n                                  <mat-datepicker-toggle [for]=\\\"fromDatePicker\\\"  matSuffix></mat-datepicker-toggle>\\r\\n                                  <mat-datepicker #fromDatePicker></mat-datepicker>\\r\\n                                </mat-form-field>\\r\\n                              </div>\\r\\n                              <div *ngIf=\\\"!isWithoutDates\\\" fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"25px\\\" fxLayoutGap.lt-sm=\\\"0\\\">\\r\\n                                <mat-form-field fxFlex=\\\"auto\\\" appearance=\\\"outline\\\">\\r\\n                                  <mat-label> {{'toDate' | translate}}</mat-label>\\r\\n                                  <input [matDatepicker]=\\\"toDatePicker\\\"  (dateChange)=\\\"changeDate(dateTo.value,1)\\\" #dateTo  formControlName=\\\"ordersDateTo\\\" matInput>\\r\\n                                  <mat-datepicker-toggle [for]=\\\"toDatePicker\\\" matSuffix></mat-datepicker-toggle>\\r\\n                                  <mat-datepicker #toDatePicker></mat-datepicker>\\r\\n                                </mat-form-field>\\r\\n                              </div>\\r\\n                              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\r\\n                                <button class=\\\"btn btn-primary btn-start\\\" (click)=\\\"submit();\\\" color=\\\"primary\\\" [disabled]=\\\"disabled\\\"  mat-raised-button type=\\\"button\\\">{{'search' | translate}}</button>\\r\\n                                <button class=\\\"btn btn-primary btn-start\\\" (click)=\\\"filterForm.reset(); validateForm();\\\" color=\\\"primary\\\" mat-raised-button type=\\\"button\\\">{{'clear' | translate}}</button>\\r\\n                              </div>\\r\\n                            </form>\\r\\n                          </div>\\r\\n                      \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvb3JkZXItZGV0YWlscy9vcmRlci1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3VwZGF0ZS9lbXBsb3llZS11cGRhdGUvZW1wbG95ZWUtdXBkYXRlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9hcmVhLWNyZWF0ZS9hcmVhLWNyZWF0ZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport {\r\n  FieldListData,\r\n  UserResponseModel,\r\n} from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport {\r\n  DynamicListColumn,\r\n  DynamicListInput,\r\n} from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport {\r\n  ActionTypeEnum,\r\n  FieldTypeEnum,\r\n  ListActionTypeEnum,\r\n  RoleTypes,\r\n} from '../../../shared/enums/enums';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-client-list',\r\n  templateUrl: './client-list.component.html',\r\n  styleUrls: ['./client-list.component.css'],\r\n})\r\nexport class ClientListComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public clients: FieldListData[] = [];\r\n  public clientList: any[] = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private router: Router,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) {}\r\n  public baseStatuses = [];\r\n\r\n  ngOnInit(): void {\r\n    this.baseStatuses = [\r\n      { value: true, viewValueEn: 'Active', viewValueAr: 'نشط' },\r\n      { value: false, viewValueEn: 'Not Active', viewValueAr: 'غير نشط' },\r\n    ];\r\n    this.spinner.show();\r\n    this.getFormData();\r\n  }\r\n  public getFormData() {\r\n    this.baseService\r\n      .getItemsByKey(\r\n        Controllers.User,\r\n        Actions.GetAllItems,\r\n        'role',\r\n        this.userRolesEnum.Merchant\r\n      )\r\n      .subscribe((res) => {\r\n        this.clients = res;\r\n        this.dynamicFormInput = {\r\n          actions: [\r\n            {\r\n              actionName: 'search',\r\n              actionType: ActionTypeEnum.Submit,\r\n              isDisableAllowed: false,\r\n            },\r\n            {\r\n              actionName: 'Reset',\r\n              actionType: ActionTypeEnum.Reset,\r\n              isDisableAllowed: false,\r\n            },\r\n          ],\r\n          formFields: [\r\n            {\r\n              fieldId: 'searchValue',\r\n              fieldType: FieldTypeEnum.Input,\r\n              label: 'searchValue',\r\n              fieldOrder: 1,\r\n              placeholder: 'searchValue',\r\n              options: { disabled: false, required: true, size: 3 },\r\n            },\r\n            {\r\n              fieldId: 'userId',\r\n              fieldType: FieldTypeEnum.DropDownList,\r\n              label: 'userId',\r\n              fieldOrder: 1,\r\n              placeholder: 'userId',\r\n              options: { disabled: false, required: true, size: 3 },\r\n            },\r\n            {\r\n              fieldId: 'isActive',\r\n              fieldType: FieldTypeEnum.DropDownList,\r\n              label: 'isActive',\r\n              fieldOrder: 1,\r\n              placeholder: 'isActive',\r\n              options: { disabled: false, required: true, size: 3 },\r\n            },\r\n          ],\r\n        };\r\n        let userIdField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'userId'\r\n        );\r\n        let statusField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'isActive'\r\n        );\r\n        userIdField.data = this.clients;\r\n        statusField.data = this.baseStatuses;\r\n      });\r\n    this.getListSettings();\r\n    this.getListData();\r\n  }\r\n  public getListSettings() {\r\n    const columns: DynamicListColumn[] = [\r\n      {\r\n        columnId: 'phoneNumber',\r\n        columnValue: 'phoneNumber',\r\n        columnName: 'phoneNumber',\r\n        actions: [],\r\n      },\r\n      {\r\n        columnId: 'fullName',\r\n        columnValue: 'fullName',\r\n        columnName: 'fullName',\r\n        actions: [],\r\n      },\r\n      {\r\n        columnId: 'email',\r\n        columnValue: 'email',\r\n        columnName: 'email',\r\n        actions: [],\r\n      },\r\n      {\r\n        columnId: 'statusEn',\r\n        columnValue: 'statusEn',\r\n        columnName: 'statusEn',\r\n        actions: [],\r\n      },\r\n      {\r\n        columnId: 'actions',\r\n        columnValue: 'actions',\r\n        columnName: 'actions',\r\n        actions: [\r\n          { actionName: 'view', actionType: 3 },\r\n          { actionName: 'delete', actionType: 2 },\r\n          { actionName: 'edit', actionType: 1 },\r\n          { actionName: 'activate', actionType: 4 },\r\n        ],\r\n      },\r\n    ];\r\n    this.dynamicListInput.columns = columns;\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n      role: this.userRolesEnum.Merchant,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.User, Actions.GetList, request)\r\n      .subscribe((res) => {\r\n        this.clientList = res.entities;\r\n        this.dynamicListInput.data = this.clientList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    console.log(event);\r\n\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    event.data.role = this.userRolesEnum.Merchant;\r\n    this.baseService\r\n      .postItem(Controllers.User, Actions.GetList, event.data)\r\n      .subscribe((res) => {\r\n        this.clientList = res.entities;\r\n        this.dynamicListInput.data = this.clientList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n          width: '400px',\r\n          data: {\r\n            title: 'confirm',\r\n            content: 'confirmDeleteMessage',\r\n          },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((res) => {\r\n          if (res) {\r\n            this.spinner.show();\r\n            this.baseService\r\n              .removeItemById(Controllers.User, event.entityId)\r\n              .subscribe(\r\n                (res) => {\r\n                  this.getListData(this.pageSize, this.pageNumber);\r\n                  this.spinner.hide();\r\n                  console.log(res);\r\n                  this.notification.showNotification(res, 'success');\r\n                },\r\n                (error) => {\r\n                  if (error.status === 400) {\r\n                    this.notification.showNotification(error.error, 'danger');\r\n                  } else {\r\n                    this.notification.showNotification(\r\n                      'somethingWentWrong',\r\n                      'danger'\r\n                    );\r\n                  }\r\n                  this.spinner.hide();\r\n                }\r\n              );\r\n          }\r\n        });\r\n\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([`/forms/client-update/${event.entityId}`]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/client-details/${event.entityId}/0`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9lbXBsb3llZS1jcmVhdGUvZW1wbG95ZWUtY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \".upload-btn-wrapper {\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  \\r\\n  .upload-btn-wrapper input[type=file] {\\r\\n    font-size: 100px;\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    opacity: 0;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mb3Jtcy1tb2R1bGUvbGlzdC9wb3N0cG9uZWQtb3JkZXJzL3Bvc3Rwb25lZC1vcmRlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIscUJBQXFCO0VBQ3ZCOzs7O0VBSUE7SUFDRSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxNQUFNO0lBQ04sVUFBVTtFQUNaIiwiZmlsZSI6InNyYy9mb3Jtcy1tb2R1bGUvbGlzdC9wb3N0cG9uZWQtb3JkZXJzL3Bvc3Rwb25lZC1vcmRlcnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51cGxvYWQtYnRuLXdyYXBwZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9XHJcbiAgXHJcbiAgXHJcbiAgXHJcbiAgLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcclxuICAgIGZvbnQtc2l6ZTogMTAwcHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9Il19 */\";","export default \"\\r\\n<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'cityDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'citiesManagement' | translate}}</p>\\r\\n                    </div> \\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-details [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'areaUpdate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'areasManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [isUpdate]=\\\"true\\\" [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'orderstatusCreate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'orderstatusManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionTypeEnum } from '../../../shared/enums/enums';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-messages-list',\r\n  templateUrl: './messages-list.component.html',\r\n  styleUrls: ['./messages-list.component.css']\r\n})\r\nexport class MessagesListComponent implements OnInit {\r\n\r\n  constructor(private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) { }\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public messagesList: any[] = [];\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getList();\r\n\r\n  }\r\n\r\n  public getList() {\r\n    this.baseService.getAll(Controllers.Message).subscribe(res => {\r\n      this.messagesList = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","export default \"<div mat-dialog-content [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>{{'recordDate' |translate }}</mat-label>\\r\\n          <input [matDatepicker]=\\\"fromDatePicker\\\" formControlName=\\\"recordDate\\\" matInput (dateChange)=\\\"getRecords()\\\">\\r\\n          <mat-datepicker-toggle [for]=\\\"fromDatePicker\\\" matSuffix></mat-datepicker-toggle>\\r\\n          <mat-datepicker #fromDatePicker></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>{{'areaGroup' |translate }}</mat-label>\\r\\n          <mat-select formControlName=\\\"areaGroupId\\\">\\r\\n            <mat-option *ngFor=\\\"let option of areaGroups; let i = index\\\" [value]=\\\"option.id\\\">\\r\\n              {{languageService.getCurrentLanguage()=='ar'? (option.nameAr |translate) :\\r\\n              (option.nameEn |translate)}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <mat-radio-group  formControlName=\\\"type\\\" (change)=\\\"changeRadio()\\\">\\r\\n          <mat-radio-button [value]=\\\"1\\\" style=\\\"margin: 10px;\\\">{{'newRecord' |translate}}</mat-radio-button>\\r\\n          <mat-radio-button [value]=\\\"2\\\">{{'existingRecord' | translate}}</mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"type.value == 2\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <mat-form-field  class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>{{'records' | translate}}</mat-label>\\r\\n          <mat-select formControlName=\\\"recordId\\\">\\r\\n            <mat-option *ngFor=\\\"let record of recordList; let i = index\\\" [value]=\\\"record.id\\\">{{languageService.getCurrentLanguage()=='ar'? (record.areaGroupNameAr |translate) :\\r\\n              (record.areaGroupNameEn |translate) + ' ' + (i + 1)}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div mat-dialog-actions>\\r\\n    <button mat-raised-button class=\\\"btn btn-accent m-2\\\" (click)=\\\"onNoClick()\\\">{{'cancel' | translate}}</button>\\r\\n    <button mat-raised-button class=\\\"btn btn-primary m-2\\\" [mat-dialog-close]=\\\"form.value\\\" [disabled]=\\\"form.invalid\\\">{{'submit' | translate}}</button>\\r\\n  </div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'areagroupList'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'areagroupManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n                            <button routerLink=\\\"/forms/areagroup-create\\\" class=\\\"btn btn-primary\\\" color=\\\"primary\\\"\\r\\n                                mat-raised-button type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' |\\r\\n                                translate}} \\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                            (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\"\\r\\n                                [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                            </app-dynamic-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'orderUpdate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'ordersManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [isUpdate]=\\\"true\\\" [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Routes } from '@angular/router';\r\nimport { AreaCreateComponent } from './create/area-create/area-create.component';\r\nimport { CityCreateComponent } from './create/city-create/city-create.component';\r\nimport { AreaListComponent } from './list/area-list/area-list.component';\r\nimport { CityListComponent } from './list/city-list/city-list.component';\r\nimport { AreaUpdateComponent } from './update/area-update/area-update.component';\r\nimport { AreaDetailsComponent } from './view/area-details/area-details.component';\r\nimport { CityUpdateComponent } from './update/city-update/city-update.component';\r\nimport { CityDetailsComponent } from './view/city-details/city-details.component';\r\nimport { OrderStatusCreateComponent } from './create/order-status-create/order-status-create.component';\r\nimport { OrderStatusListComponent } from './list/order-status-list/order-status-list.component';\r\nimport { OrderStatusUpdateComponent } from './update/order-status-update/order-status-update.component';\r\nimport { OrderStatusDetailsComponent } from './view/order-status-details/order-status-details.component';\r\nimport { AreaGroupCreateComponent } from './create/areagroup-create/areagroup-create.component';\r\nimport { AreaGroupListComponent } from './list/areagroup-list/areagroup-list.component';\r\nimport { AreaGroupUpdateComponent } from './update/areagroup-update/areagroup-update.component';\r\nimport { AreaGroupDetailsComponent } from './view/areagroup-details/areagroup-details.component';\r\nimport { ClientListComponent } from './list/client-list/client-list.component';\r\nimport { ClientCreateComponent } from './create/client-create/client-create.component';\r\nimport { ClientUpdateComponent } from './update/client-update/client-update.component';\r\nimport { ClientDetailsComponent } from './view/client-details/client-details.component';\r\nimport { DriverListComponent } from './list/driver-list/driver-list.component';\r\nimport { DriverCreateComponent } from './create/driver-create/driver-create.component';\r\nimport { DriverUpdateComponent } from './update/driver-update/driver-update.component';\r\nimport { DriverDetailsComponent } from './view/driver-details/driver-details.component';\r\nimport { EmployeeCreateComponent } from './create/employee-create/employee-create.component';\r\nimport { EmployeeListComponent } from './list/employee-list/employee-list.component';\r\nimport { EmployeeUpdateComponent } from './update/employee-update/employee-update.component';\r\nimport { EmployeeDetailsComponent } from './view/employee-details/employee-details.component';\r\nimport { RecordListComponent } from './list/record-list/record-list.component';\r\nimport { RecordDetailsComponent } from './view/record-details/record-details.component';\r\nimport { PromoCodeCreateComponent } from './create/promo-code-create/promo-code-create.component';\r\nimport { PromoCodeListComponent } from './list/promo-code-list/promo-code-list.component';\r\nimport { OrderUpdateComponent } from './update/order-update/order-update.component';\r\nimport { OrderListComponent } from './list/order-list/order-list.component';\r\nimport { OrderCreateComponent } from './create/order-create/order-create.component';\r\nimport { OrderDetailsComponent } from './view/order-details/order-details.component';\r\nimport { PromoCodeDetailsComponent } from './view/promo-code-details/promo-code-details.component';\r\nimport { PromoCodeUpdateComponent } from './update/promo-code-update/promo-code-update.component';\r\nimport { OrderListAdminComponent } from './list/order-list-admin/order-list-admin.component';\r\nimport { ReportsSearchComponent } from './reports-search/reports-search.component';\r\nimport { CompanyRevenueComponent } from './company-revenue/company-revenue.component';\r\nimport { MessageCreateComponent } from './create/message-create/message-create.component';\r\nimport { RoundListComponent } from './list/rounds-list/rounds-list.component';\r\nimport { RoundDetailsComponent } from './view/round-details/round-details.component';\r\nimport { PostponedOrdersComponent } from './list/postponed-orders/postponed-orders.component';\r\nimport { ClientBrandCreateComponent } from './create/client-brand-create/client-brand-create.component';\r\nimport { PushNotificationsComponent } from './push-notifications/push-notifications.component';\r\nimport { EndUserCreateComponent } from './create/enduser-create/enduser-create.component';\r\nimport { EndUsersListComponent } from './list/endusers-list/endusers-list.component';\r\nimport { EndUserUpdateComponent } from './update/enduser-update/enduser-update.component';\r\nimport { EndUserDetailsComponent } from './view/enduser-details/enduser-details.component';\r\nimport { RoleGuard } from '../auth/role.guard';\r\nimport { MessagesListComponent } from './list/messages-list/messages-list.component';\r\nimport { PostponedOrderUpdateComponent } from './update/postponed-order-update/postponed-order-update.component';\r\n\r\nexport const FormsRoutes: Routes = [\r\n    { component: AreaCreateComponent, path: 'area-create', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant'] } },\r\n    { component: AreaListComponent, path: 'area-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: AreaUpdateComponent, path: 'area-update/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: AreaDetailsComponent, path: 'area-details/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: CityDetailsComponent, path: 'city-details/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: CityCreateComponent, path: 'city-create', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: CityListComponent, path: 'city-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: CityUpdateComponent, path: 'city-update/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: OrderStatusCreateComponent, path: 'order-status-create', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: OrderStatusListComponent, path: 'order-status-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: OrderStatusUpdateComponent, path: 'order-status-update/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: OrderStatusDetailsComponent, path: 'order-status-details/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: OrderCreateComponent, path: 'order-create', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: EndUserCreateComponent, path: 'enduser-create', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: EndUserUpdateComponent, path: 'enduser-update/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: EndUserDetailsComponent, path: 'enduser-details/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: EndUsersListComponent, path: 'endusers-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: OrderListComponent, path: 'order-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: PostponedOrdersComponent, path: 'postponed-orders', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: PostponedOrderUpdateComponent, path: 'postponed-order-update/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: OrderListAdminComponent, path: 'order-list-admin', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant'] } },\r\n    { component: OrderUpdateComponent, path: 'order-update/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: OrderDetailsComponent, path: 'order-details/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: AreaGroupCreateComponent, path: 'areagroup-create', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: AreaGroupListComponent, path: 'areagroup-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: MessageCreateComponent, path: 'message-create', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: AreaGroupUpdateComponent, path: 'areagroup-update/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: AreaGroupDetailsComponent, path: 'areagroup-details/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: ClientListComponent, path: 'client-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: CompanyRevenueComponent, path: 'company-revenue', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant'] } },\r\n    { component: ReportsSearchComponent, path: 'reports-search', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: ReportsSearchComponent, path: 'reports-search/:userType/:roundId', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: ClientCreateComponent, path: 'client-create', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: ClientUpdateComponent, path: 'client-update/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: ClientDetailsComponent, path: 'client-details/:id/:activeTab', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: DriverCreateComponent, path: 'driver-create', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: DriverUpdateComponent, path: 'driver-update/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: DriverDetailsComponent, path: 'driver-details/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: DriverListComponent, path: 'driver-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: EmployeeCreateComponent, path: 'employee-create', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: EmployeeListComponent, path: 'employees-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: EmployeeUpdateComponent, path: 'employee-update/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: EmployeeDetailsComponent, path: 'employee-details/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: RecordListComponent, path: 'records-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: RoundListComponent, path: 'rounds-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: RecordDetailsComponent, path: 'record-details/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: RoundDetailsComponent, path: 'round-details/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant'] } },\r\n    { component: PromoCodeCreateComponent, path: 'promo-code-create', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: ClientBrandCreateComponent, path: 'client-brand-create/:clientId', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: PromoCodeListComponent, path: 'promo-code-list', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: PromoCodeDetailsComponent, path: 'promo-code-details/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: PromoCodeUpdateComponent, path: 'promo-code-update/:id', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: PushNotificationsComponent, path: 'push-notifications', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n    { component: MessagesListComponent, path: 'messages', canActivate: [RoleGuard], data: { expectedRole: ['Admin', 'Accountant', 'Assistant', 'DataEntry'] } },\r\n];\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3QvYXJlYS1saXN0L2FyZWEtbGlzdC5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport {\r\n  Controllers,\r\n  Actions,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { RoleTypes } from '../../../shared/enums/enums';\r\nimport { deliveryFessOnOptions } from '../../../shared/global-variables/lookups';\r\nimport { Router } from '@angular/router';\r\nimport { OrderForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-order-create',\r\n  templateUrl: './order-create.component.html',\r\n  styleUrls: ['./order-create.component.css'],\r\n})\r\nexport class OrderCreateComponent implements OnInit {\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public areas: FieldListData[] = [];\r\n  public orderStatuses: FieldListData[] = [];\r\n  public clients: FieldListData[] = [];\r\n  public orderTasks: FieldListData[] = [];\r\n  public deliveryFeesOn: FieldListData[] = [];\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.orderTasks = [\r\n      {\r\n        value: 0,\r\n        viewValueEn: 'Get From Merchant',\r\n        viewValueAr: 'احضار من التاجر',\r\n      },\r\n      {\r\n        value: 1,\r\n        viewValueEn: 'Deliver To Merchant',\r\n        viewValueAr: 'توصيل للتاجر',\r\n      },\r\n      { value: 2, viewValueEn: 'Get And Submit', viewValueAr: 'احضار وتأكيد' },\r\n    ];\r\n    this.deliveryFeesOn = [\r\n      {\r\n        value: 1,\r\n        viewValueEn: 'Delivery on Merchant',\r\n        viewValueAr: 'توصيل على التاجر',\r\n      },\r\n      {\r\n        value: 2,\r\n        viewValueEn: 'Delivery on recipient',\r\n        viewValueAr: 'توصيل على المستلم',\r\n      },\r\n    ];\r\n    this.getFieldsData();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    console.log(event);\r\n    this.baseService\r\n      .postItemTextReponse(Controllers.Order, Actions.PostItem, event.data)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(res, 'success');\r\n          this.router.navigate(['/forms/order-list']);\r\n        },\r\n        (error) => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          } else {\r\n            this.notification.showNotification(\r\n              this.getTranslatableText('somethingWentWrong'),\r\n              'danger'\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n  public getFieldsData() {\r\n    this.baseService.getAllForList(Controllers.Area).subscribe((res) => {\r\n      this.areas = res;\r\n      console.log(this.areas);\r\n      this.baseService\r\n        .getItemsByKey(\r\n          Controllers.User,\r\n          Actions.GetAllItems,\r\n          'role',\r\n          this.userRolesEnum.Merchant\r\n        )\r\n        .subscribe((res) => {\r\n          this.clients = res;\r\n          this.baseService\r\n            .getAllForList(Controllers.OrderStatus)\r\n            .subscribe((res) => {\r\n              this.orderStatuses = res;\r\n              console.log(res);\r\n              this.dynamicFormInput = OrderForm;\r\n              let areaIdField = this.dynamicFormInput.formFields.find(\r\n                (x) => x.fieldId == 'areaId'\r\n              );\r\n              areaIdField.data = this.areas;\r\n              let clientIdField = this.dynamicFormInput.formFields.find(\r\n                (x) => x.fieldId == 'clientId'\r\n              );\r\n              clientIdField.data = this.clients;\r\n              let orderStatusIdField = this.dynamicFormInput.formFields.find(\r\n                (x) => x.fieldId == 'orderStatusId'\r\n              );\r\n              orderStatusIdField.data = this.orderStatuses;\r\n              let taskField = this.dynamicFormInput.formFields.find(\r\n                (x) => x.fieldId == 'orderTaskId'\r\n              );\r\n              taskField.data = this.orderTasks;\r\n\r\n              let deliveryFeesOn = this.dynamicFormInput.formFields.find(\r\n                (x) => x.fieldId == 'deliveryFeesOn'\r\n              );\r\n\r\n              deliveryFeesOn.data = this.deliveryFeesOn;\r\n\r\n              this.isLoading = false;\r\n              this.spinner.hide();\r\n            });\r\n        });\r\n    });\r\n  }\r\n\r\n  public getTranslatableText(key: string) {\r\n    var textValue = '';\r\n    this.translate.get(key).subscribe((text: string) => {\r\n      textValue = text;\r\n    });\r\n    return textValue;\r\n  }\r\n}\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\nimport * as _moment from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { BaseService } from '../../shared/services/base.service';\r\nimport { Actions, Controllers } from '../../shared/global-variables/api-config';\r\nimport { NotificationService } from '../../shared/services/notification.service';\r\nimport { RoleTypes } from '../../shared/enums/enums';\r\nimport { LanguageService } from '../../shared/services/language.service';\r\n\r\nconst moment = _moment;\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-reports-search',\r\n  templateUrl: './reports-search.component.html',\r\n  styleUrls: ['./reports-search.component.css'],\r\n  providers: [\r\n\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class ReportsSearchComponent implements OnInit {\r\n  merchants: any;\r\n  drivers: any;\r\n  layoutCtrl = new FormControl('fullWidth');\r\n  filteredDriversOptions: Observable<any>;\r\n  filteredMerchantsOptions: Observable<any>;\r\n  merchantsControl = new FormControl();\r\n  driversControl = new FormControl();\r\n  selectedClient: any;\r\n  selectedDriverId: any;\r\n  from: any = null;\r\n  to: any = null;\r\n  selectedDriver: any;\r\n  roundId: number;\r\n  public disabled: boolean = true;\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private notification: NotificationService,\r\n    public languageService: LanguageService,\r\n\r\n  ) {\r\n\r\n\r\n  }\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  changeRadio() {\r\n    this.validateForm();\r\n  }\r\n\r\n  isTracker = true;\r\n  isDataEntry = true;\r\n  isAdmin = true;\r\n  isWithoutDates = false;\r\n\r\n  filterForm = new FormGroup({\r\n    clientId: new FormControl(),\r\n    driverId: new FormControl(),\r\n    userType: new FormControl(),\r\n    ordersDateFrom: new FormControl(),\r\n    ordersDateTo: new FormControl(),\r\n    pageSize: new FormControl(),\r\n    pageNumber: new FormControl(),\r\n  })\r\n\r\n  get clientId() {\r\n    return this.filterForm.get('clientId') as FormControl;\r\n  }\r\n  get userType() {\r\n    return this.filterForm.get('userType') as FormControl;\r\n  }\r\n  get driverId() {\r\n    return this.filterForm.get('driverId') as FormControl;\r\n  }\r\n\r\n\r\n  get ordersDateFrom() {\r\n    return this.filterForm.get('ordersDateFrom') as FormControl;\r\n  }\r\n\r\n  get ordersDateTo() {\r\n    return this.filterForm.get('ordersDateTo') as FormControl;\r\n  }\r\n\r\n  get PageSize() {\r\n    return this.filterForm.get('pageSize') as FormControl;\r\n  }\r\n  get PageNumber() {\r\n    return this.filterForm.get('pageNumber') as FormControl;\r\n  }  public filteredOptionsWrapper = []; \r\npublic filteredOptions: Observable<any[]>[];\r\n  ngOnInit() {\r\n    var storedForm = JSON.parse(sessionStorage.getItem('recordForm'));\r\n    if (storedForm) {\r\n      console.log(storedForm);\r\n      this.filterForm.controls['ordersDateTo'].setValue(storedForm.ordersDateTo);\r\n      this.filterForm.controls['ordersDateFrom'].setValue(storedForm.ordersDateFrom);\r\n\r\n    }\r\n    this.route.params.subscribe(params => {\r\n      if (params.userType) {\r\n        this.userType.setValue(Number(params.userType));\r\n        this.roundId = params.roundId;\r\n        this.isWithoutDates = true;\r\n      }\r\n    })\r\n    this.getALlMerchants();\r\n    this.getAllDrivers();\r\n\r\n  }\r\n\r\n  getALlMerchants() {\r\n    this.baseService.getItemsByKey(Controllers.User, Actions.GetAllItems, 'role', this.userRolesEnum.Merchant).subscribe(res => {\r\n      this.merchants = res;\r\n      this.filteredMerchantsOptions = this.merchantsControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => (typeof value === 'string' ? value : (value.viewValueEn || value.viewValueAr))),\r\n        map(name => (name ? this.filterMerchantOptions(name, this.merchants) : this.merchants.slice()))\r\n      );\r\n    }, error => {\r\n      this.notification.showNotification(error.error, 'Failed');\r\n    });\r\n  }\r\n  displayDriverFn(selectedOption: any): string {\r\n    return selectedOption && (selectedOption.viewValueEn || selectedOption.viewValueAr) ? (selectedOption.viewValueEn || selectedOption.viewValueAr) : '';\r\n  } \r\n  displayMerchantFn(selectedOption: any): string {\r\n    return selectedOption && (selectedOption.viewValueEn || selectedOption.viewValueAr) ? (selectedOption.viewValueEn || selectedOption.viewValueAr) : '';\r\n  }\r\n\r\n  private filterDriverOptions(value: any, data: any): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return data.filter(option => option.viewValueEn.toLowerCase().includes(filterValue) || option.viewValueAr.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n  private filterMerchantOptions(value: any, data: any): any[] {\r\n    const filterValue = value.toLowerCase();\r\n    return data.filter(option => option.viewValueEn.toLowerCase().includes(filterValue) || option.viewValueAr.toLowerCase().includes(filterValue)\r\n    );\r\n  }\r\n  getAllDrivers() {\r\n    this.baseService.getItemsByKey(Controllers.User, Actions.GetAllItems, 'role', this.userRolesEnum.Driver).subscribe(res => {\r\n      this.drivers = res;\r\n      this.filteredDriversOptions = this.driversControl.valueChanges.pipe(\r\n        startWith(''),\r\n        map(value => (typeof value === 'string' ? value : (value.viewValueEn || value.viewValueAr))),\r\n        map(name => (name ? this.filterDriverOptions(name, this.drivers) : this.drivers.slice()))\r\n      );\r\n    }, error => {\r\n      this.notification.showNotification(error.error, 'Failed');\r\n    });\r\n  }\r\n\r\n\r\n\r\n  merchantSelected(event) {\r\n    this.selectedClient = this.merchants.find(x => x.value == event.option.value.value).value;\r\n    this.clientId.setValue(this.selectedClient);\r\n    this.validateForm();\r\n  }\r\n  driverSelected(event) {\r\n    this.selectedDriver = this.drivers.find(x => x.value == event.option.value.value).value;\r\n    this.driverId.setValue(this.selectedDriver);\r\n    this.validateForm();\r\n  }\r\n  changeDate(value, type) {\r\n    console.log('Date', value);\r\n    if (type == 0) {\r\n      this.from = value;\r\n\r\n    } else {\r\n      this.to = value;\r\n    }\r\n    this.validateForm();\r\n  }\r\n\r\n  validateForm() {\r\n    const form = this.filterForm.value;\r\n    if (form.ordersDateFrom == null || form.ordersDateTo == null) {\r\n      this.disabled = true;\r\n    }\r\n    else {\r\n      if (this.userType.value) {\r\n        this.disabled = false;\r\n\r\n      }\r\n      else {\r\n        this.disabled = true;\r\n      }\r\n    }\r\n\r\n  }\r\n  submit() {\r\n    const form = this.filterForm.value;\r\n    var storedForm = JSON.parse(sessionStorage.getItem('recordForm'));\r\n    if (this.from != null) {\r\n      this.filterForm.value.ordersDateFrom = this.getYear(this.from) + '-' + this.getMonth(this.from) + '-' + this.getDay(this.from) + 'T00:00:00.000Z';\r\n    }\r\n    else if (storedForm) {\r\n      this.filterForm.value.ordersDateFrom = storedForm.ordersDateFrom;\r\n    }\r\n    if (this.to != null) {\r\n      this.filterForm.value.ordersDateTo = this.getYear(this.to) + '-' + this.getMonth(this.to) + '-' + this.getDay(this.to) + 'T00:00:00.000Z';\r\n    }\r\n    else if (storedForm) {\r\n      this.filterForm.value.ordersDateTo = storedForm.ordersDateTo;\r\n    }\r\n\r\n\r\n\r\n    sessionStorage.setItem(\"recordsearchfilter\", JSON.stringify(form));\r\n    sessionStorage.setItem('recordForm', JSON.stringify(this.filterForm.value));\r\n    window.open('/#/reports-result', '_blank')\r\n  }\r\n  getDay(value) {\r\n    return value.substring(0, 2);\r\n  }\r\n  getMonth(value) {\r\n    return value.substring(3, 5);\r\n  }\r\n  getYear(value) {\r\n    return value.substring(6, 10);\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\n\r\n@Component({\r\n  selector: 'app-driver-details',\r\n  templateUrl: './driver-details.component.html',\r\n  styleUrls: ['./driver-details.component.css']\r\n})\r\nexport class DriverDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) { }\r\n  public driverId: number;\r\n  public driver: any;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.driverId = params.id;\r\n      this.getAsync(this.driverId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.User, id).subscribe(res => {\r\n      this.driver = res;\r\n      this.detailsInput.dataObject = this.driver;\r\n      this.isLoading = false;\r\n    }) \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3QvZW5kdXNlcnMtbGlzdC9lbmR1c2Vycy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { Controllers, Actions } from '../../../shared/global-variables/api-config';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { param } from 'jquery';\r\n\r\n@Component({\r\n  selector: 'app-client-brand-create',\r\n  templateUrl: './client-brand-create.component.html',\r\n  styleUrls: ['./client-brand-create.component.css']\r\n})\r\nexport class ClientBrandCreateComponent implements OnInit {\r\n\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n  public clientId: number;\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.clientId = params.clientId\r\n    })\r\n    this.spinner.show();\r\n    this.getFieldsData();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    console.log(event);\r\n    let formData = new FormData();\r\n    Object.entries(event.data).forEach(element => {\r\n      var file;\r\n      if (element[0] == 'brandImage') {\r\n        file = element[1] as Blob;\r\n        formData.append(element[0], file);\r\n      }\r\n      else {\r\n        formData.append(element[0], element[1] as string);\r\n      }\r\n      formData.append('clientId', this.clientId.toString());\r\n    });\r\n    this.baseService.postFormItem(Controllers.ClientBrand, Actions.PostItem, formData).subscribe(res => {\r\n      this.spinner.hide();\r\n      this.notification.showNotification(res, 'success');\r\n      this.router.navigate([`/forms/client-details/${this.clientId}/2`]);\r\n    }, error => {\r\n      if (error.status === 400) {\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n      else {\r\n        this.notification.showNotification(this.translate.instant('somethingWentWrong'), 'danger');\r\n      }\r\n      this.spinner.hide();\r\n    })\r\n  }\r\n  public getFieldsData() {\r\n    this.dynamicService.getFormSettings('ClientBrandForm').subscribe(res => {\r\n      this.dynamicFormInput = res;\r\n      console.log(this.dynamicFormInput);\r\n      this.isLoading = false;\r\n      this.spinner.hide();\r\n    });\r\n\r\n\r\n  }\r\n  public getTranslatableText(key: string) {\r\n    var textValue = \"\";\r\n    this.translate.get(key).subscribe((text: string) => {\r\n      textValue = text;\r\n    });\r\n    return textValue;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { RoleTypes } from '../../../shared/enums/enums';\r\n\r\n@Component({\r\n  selector: 'app-postponed-order-update',\r\n  templateUrl: './postponed-order-update.component.html',\r\n  styleUrls: ['./postponed-order-update.component.css']\r\n})\r\nexport class PostponedOrderUpdateComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dynamicService: DynamicDataService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) { }\r\n  public Id: number;\r\n  public baseStatuses = [];\r\n  public isLoading = true;\r\n  public areas: FieldListData[] = [];\r\n  public orderStatuses: FieldListData[] = [];\r\n  public clients: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = []; \r\n   public orderTasks : FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe(params => {\r\n      this.Id = params.id;\r\n       this.orderTasks = [\r\n        { value: 0, viewValueEn: 'Get From Merchant', viewValueAr: 'احضار من التاجر' },\r\n        { value: 1, viewValueEn: 'Deliver To Merchant', viewValueAr: 'توصيل للتاجر' },\r\n        { value: 2, viewValueEn: 'Get And Submit', viewValueAr: 'احضار وتأكيد' }\r\n      ];\r\n      this.getAsync(this.Id);\r\n    });\r\n\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getForUpdate(Controllers.Order, id).subscribe(res => {\r\n      this.getFieldsData(res);  console.log(res);\r\n    });\r\n\r\n  }\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  public getFieldsData(client: any) {\r\n    this.dynamicService.getFormSettings('OrderUpdateForm').subscribe(res => {\r\n      this.dynamicFormInput = res;\r\n      this.dynamicFormInput.formFields.forEach(field => {\r\n        field.value = client[field.fieldId];\r\n      });\r\n    });\r\n    this.baseService.getAllForList(Controllers.Area).subscribe(res => {\r\n      this.areas = res;\r\n      this.baseService.getItemsByKey(Controllers.User, Actions.GetAllItems, 'role', this.userRolesEnum.Merchant).subscribe(res => {\r\n        this.clients = res;\r\n        this.baseService.getAllForList(Controllers.OrderStatus).subscribe(res => {\r\n          this.orderStatuses = res;\r\n          let areaIdField = this.dynamicFormInput.formFields.find(x => x.fieldId == 'areaId');\r\n          areaIdField.data = this.areas;\r\n          let clientIdField = this.dynamicFormInput.formFields.find(x => x.fieldId == 'clientId');\r\n          clientIdField.data = this.clients;\r\n          let orderStatusIdField = this.dynamicFormInput.formFields.find(x => x.fieldId == 'orderStatusId');\r\n          orderStatusIdField.data = this.orderStatuses;\r\n            let taskIdField = this.dynamicFormInput.formFields.find(x => x.fieldId == 'orderTask');\r\n\r\n          taskIdField.data = this.orderTasks;\r\n          this.isLoading = false;\r\n          this.spinner.hide();\r\n        });\r\n\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.Id);\r\n    console.log(event.data);\r\n    this.baseService.editItem(Controllers.Order, event.data).subscribe(res => {\r\n      this.spinner.hide();\r\n\r\n      this.notification.showNotification(res, 'success');\r\n      this.router.navigate(['/forms/postponed-orders']);\r\n    }, error => {\r\n      if (error.status === 400) {\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n      else {\r\n        this.notification.showNotification('somethingWentWrong', 'danger');\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'driverCreate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'driversManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-header card-header-primary\\\">\\r\\n                      <h3 class=\\\"card-title \\\">{{'orderList'|translate}}</h3>\\r\\n                      <p class=\\\"card-category\\\"> {{'ordersManagement' | translate}}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n                        <button routerLink=\\\"/forms/order-create\\\" class=\\\"btn btn-primary\\\" color=\\\"primary\\\"\\r\\n                            mat-raised-button type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' |\\r\\n                            translate}} \\r\\n                        </button>\\r\\n                    </div>\\r\\n                      <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                          (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                          <div class=\\\"upload-btn-wrapper\\\">\\r\\n                            <button mat-raised-button class=\\\"btn btn-primary pull-right\\\"\\r\\n                                style=\\\"margin: 1px;\\\">{{'importFromExcel' | translate}}\\r\\n                            </button>\\r\\n                            <input (change)=\\\"readUrl($event)\\\" #excelImporterInput type=\\\"file\\\"\\r\\n                                name=\\\"myfile\\\" />\\r\\n                        </div>\\r\\n                      <div class=\\\"table-responsive\\\">\\r\\n                          <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\"\\r\\n                              [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                          </app-dynamic-list>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\";","export default \"\\r\\n<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'driverDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'driversManagement' | translate}}</p>\\r\\n                    </div> \\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-details [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'cityCreate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'citiesManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport {\r\n  FieldListData,\r\n  UserResponseModel,\r\n} from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport {\r\n  DynamicListColumn,\r\n  DynamicListInput,\r\n} from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport {\r\n  ActionTypeEnum,\r\n  FieldTypeEnum,\r\n  ListActionTypeEnum,\r\n  RoleTypes,\r\n} from '../../../shared/enums/enums';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UsersList } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-driver-list',\r\n  templateUrl: './driver-list.component.html',\r\n  styleUrls: ['./driver-list.component.css'],\r\n})\r\nexport class DriverListComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public drivers: FieldListData[] = [];\r\n  public driverList: any[] = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private router: Router,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) {}\r\n  public baseStatuses = [];\r\n\r\n  ngOnInit(): void {\r\n    this.baseStatuses = [\r\n      { value: true, viewValueEn: 'Active', viewValueAr: 'نشط' },\r\n      { value: false, viewValueEn: 'Not Active', viewValueAr: 'غير نشط' },\r\n    ];\r\n    this.spinner.show();\r\n    this.getFormData();\r\n  }\r\n  public getFormData() {\r\n    this.baseService\r\n      .getItemsByKey(\r\n        Controllers.User,\r\n        Actions.GetAllItems,\r\n        'role',\r\n        this.userRolesEnum.Driver\r\n      )\r\n      .subscribe((res) => {\r\n        this.drivers = res;\r\n        this.dynamicFormInput = {\r\n          actions: [\r\n            {\r\n              actionName: 'search',\r\n              actionType: ActionTypeEnum.Submit,\r\n              isDisableAllowed: false,\r\n            },\r\n            {\r\n              actionName: 'Reset',\r\n              actionType: ActionTypeEnum.Reset,\r\n              isDisableAllowed: false,\r\n            },\r\n          ],\r\n          formFields: [\r\n            {\r\n              fieldId: 'searchValue',\r\n              fieldType: FieldTypeEnum.Input,\r\n              label: 'searchValue',\r\n              fieldOrder: 1,\r\n              placeholder: 'searchValue',\r\n              options: { disabled: false, required: true, size: 3 },\r\n            },\r\n            {\r\n              fieldId: 'userId',\r\n              fieldType: FieldTypeEnum.DropDownList,\r\n              label: 'userId',\r\n              fieldOrder: 1,\r\n              placeholder: 'userId',\r\n              options: { disabled: false, required: true, size: 3 },\r\n            },\r\n            {\r\n              fieldId: 'isActive',\r\n              fieldType: FieldTypeEnum.DropDownList,\r\n              label: 'isActive',\r\n              fieldOrder: 1,\r\n              placeholder: 'isActive',\r\n              options: { disabled: false, required: true, size: 3 },\r\n            },\r\n          ],\r\n        };\r\n        let userIdField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'userId'\r\n        );\r\n        let statusField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'isActive'\r\n        );\r\n        userIdField.data = this.drivers;\r\n        statusField.data = this.baseStatuses;\r\n        this.getListSettings();\r\n      });\r\n  }\r\n  public getListSettings() {\r\n    this.dynamicListInput.columns = UsersList;\r\n    this.getListData();\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n      role: this.userRolesEnum.Driver,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.User, Actions.GetList, request)\r\n      .subscribe((res) => {\r\n        this.driverList = res.entities;\r\n        this.dynamicListInput.data = this.driverList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    event.data.role = this.userRolesEnum.Driver;\r\n    this.baseService\r\n      .postItem(Controllers.User, Actions.GetList, event.data)\r\n      .subscribe((res) => {\r\n        this.driverList = res.entities;\r\n        this.dynamicListInput.data = this.driverList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        const  dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n          width: '400px',\r\n          data: {\r\n            title: 'confirm',\r\n            content: 'confirmDeleteMessage',\r\n          },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((res) => {\r\n          if (res) {\r\n            this.spinner.show();\r\n            this.baseService\r\n              .removeItemById(Controllers.User, event.entityId)\r\n              .subscribe(\r\n                (res) => {\r\n                  this.getListData(this.pageSize, this.pageNumber);\r\n                  this.spinner.hide();\r\n                  console.log(res);\r\n                  this.notification.showNotification(res, 'success');\r\n                },\r\n                (error) => {\r\n                  if (error.status === 400) {\r\n                    this.notification.showNotification(error.error, 'danger');\r\n                  } else {\r\n                    this.notification.showNotification(\r\n                      'somethingWentWrong',\r\n                      'danger'\r\n                    );\r\n                  }\r\n                  this.spinner.hide();\r\n                }\r\n              );\r\n          }\r\n        });\r\n\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([`/forms/driver-update/${event.entityId}`]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/driver-details/${event.entityId}`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3QvY2xpZW50LWxpc3QvY2xpZW50LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport {\r\n  Controllers,\r\n  Actions,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { RoleTypes } from '../../../shared/enums/enums';\r\nimport { MsgCreateForm } from '../../dynamic-data';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-message-create.',\r\n  templateUrl: './message-create.component.html',\r\n  styleUrls: ['./message-create.component.scss'],\r\n})\r\nexport class MessageCreateComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public targets: FieldListData[] = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFieldsData();\r\n  }\r\n\r\n  public serveAction(event: DynamicFormOutput) {\r\n    this.baseService\r\n      .postItemTextReponse(Controllers.Message, Actions.PostItem, event.data)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner.hide();\r\n\r\n          this.notification.showNotification(res, 'success');\r\n          this.router.navigate(['/forms/messages']);\r\n        },\r\n        (error) => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          } else {\r\n            this.notification.showNotification(\r\n              this.translate.instant('somethingWentWrong'),\r\n              'danger'\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  public getFieldsData() {\r\n    this.baseService.getRoles().subscribe((response) => {\r\n      this.dynamicFormInput = MsgCreateForm;\r\n      let target = this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == 'sentTo'\r\n      );\r\n      target.data = response;\r\n      this.isLoading = false;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'clientUpdate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'clientsManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [isUpdate]=\\\"true\\\" [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'driverUpdate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'driversManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [isUpdate]=\\\"true\\\" [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { ListActionTypeEnum, RoleTypes } from '../../../shared/enums/enums';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { RecordList, RecordSearchForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-record-list',\r\n  templateUrl: './record-list.component.html',\r\n  styleUrls: ['./record-list.component.css'],\r\n})\r\nexport class RecordListComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public areaGroups: FieldListData[] = [];\r\n  public recordList: any[] = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private router: Router,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFormData();\r\n  }\r\n  public getFormData() {\r\n    this.baseService.getAllForList(Controllers.AreaGroup).subscribe((res) => {\r\n      this.areaGroups = res;\r\n      this.dynamicFormInput = RecordSearchForm;\r\n      let areaGroupIdField = this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == 'areaGroupId'\r\n      );\r\n      areaGroupIdField.data = this.areaGroups;\r\n      this.getListSettings();\r\n    });\r\n  }\r\n  public getListSettings() {\r\n    this.dynamicListInput.columns = RecordList;\r\n    this.getListData();\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.Record, Actions.GetList, request)\r\n      .subscribe((res) => {\r\n        this.recordList = res.result.entities;\r\n        this.dynamicListInput.data = this.recordList;\r\n        this.dynamicListInput.totalCount = res.result.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    this.baseService\r\n      .postItem(Controllers.Record, Actions.GetList, event.data)\r\n      .subscribe((res) => {\r\n        this.recordList = res.result.entities;\r\n        this.dynamicListInput.data = this.recordList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.spinner.hide();\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([`/forms/record-update/${event.entityId}`]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/record-details/${event.entityId}`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\n\r\n@Component({\r\n  selector: 'app-enduser-details',\r\n  templateUrl: './enduser-details.component.html',\r\n  styleUrls: ['./enduser-details.component.css']\r\n})\r\nexport class EndUserDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) { }\r\n  public driverId: number;\r\n  public driver: any;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.driverId = params.id;\r\n      this.getAsync(this.driverId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.User, id).subscribe(res => {\r\n      console.log(res);\r\n      this.driver = res;\r\n      this.detailsInput.dataObject = this.driver;\r\n      this.isLoading = false;\r\n    }) \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL21vdmUtb3JkZXJzLWRpYWxvZy9tb3ZlLW9yZGVycy1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'areagroupCreate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'areagroupManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport {\r\n  FieldListData,\r\n  UserResponseModel,\r\n} from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { ListActionTypeEnum, RoleTypes } from '../../../shared/enums/enums';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserSearchForm, UsersList } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-endusers-list',\r\n  templateUrl: './endusers-list.component.html',\r\n  styleUrls: ['./endusers-list.component.css'],\r\n})\r\nexport class EndUsersListComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public endusers: FieldListData[] = [];\r\n  public endusersList: any[] = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private router: Router,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) {}\r\n  public baseStatuses = [];\r\n\r\n  ngOnInit(): void {\r\n    this.baseStatuses = [\r\n      { value: true, viewValueEn: 'Active', viewValueAr: 'نشط' },\r\n      { value: false, viewValueEn: 'Not Active', viewValueAr: 'غير نشط' },\r\n    ];\r\n    this.spinner.show();\r\n    this.getFormData();\r\n  }\r\n  public getFormData() {\r\n    this.baseService\r\n      .getItemsByKey(\r\n        Controllers.User,\r\n        Actions.GetAllItems,\r\n        'role',\r\n        this.userRolesEnum.EndUser\r\n      )\r\n      .subscribe((res) => {\r\n        this.endusers = res;\r\n        this.dynamicFormInput = UserSearchForm;\r\n        let userIdField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'userId'\r\n        );\r\n        let statusField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'isActive'\r\n        );\r\n        userIdField.data = this.endusers;\r\n        statusField.data = this.baseStatuses;\r\n        this.getListSettings();\r\n      });\r\n  }\r\n  public getListSettings() {\r\n    this.dynamicListInput.columns = UsersList;\r\n    this.getListData();\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n      role: this.userRolesEnum.EndUser,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.User, Actions.GetList, request)\r\n      .subscribe((res) => {\r\n        console.log(res);\r\n        this.endusers = res.entities;\r\n        this.dynamicListInput.data = this.endusers;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    event.data.role = this.userRolesEnum.EndUser;\r\n    this.baseService\r\n      .postItem(Controllers.User, Actions.GetList, event.data)\r\n      .subscribe((res) => {\r\n        this.endusers = res.entities;\r\n        this.dynamicListInput.data = this.endusers;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n          width: '400px',\r\n          data: {\r\n            title: 'confirm',\r\n            content: 'confirmDeleteMessage',\r\n          },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((res) => {\r\n          if (res) {\r\n            this.spinner.show();\r\n            this.baseService\r\n              .removeItemById(Controllers.User, event.entityId)\r\n              .subscribe(\r\n                (res) => {\r\n                  this.getListData(this.pageSize, this.pageNumber);\r\n                  this.spinner.hide();\r\n                  console.log(res);\r\n                  this.notification.showNotification(res, 'success');\r\n                },\r\n                (error) => {\r\n                  if (error.status === 400) {\r\n                    this.notification.showNotification(error.error, 'danger');\r\n                  } else {\r\n                    this.notification.showNotification(\r\n                      'somethingWentWrong',\r\n                      'danger'\r\n                    );\r\n                  }\r\n                  this.spinner.hide();\r\n                }\r\n              );\r\n          }\r\n        });\r\n\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([`/forms/enduser-update/${event.entityId}`]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/enduser-details/${event.entityId}`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","export default \"\\r\\n<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'areaDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'areasManagement' | translate}}</p>\\r\\n                    </div> \\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-details [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AreaCreateComponent } from './create/area-create/area-create.component';\r\nimport { FormsRoutes } from './forms.routing';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AreaListComponent } from './list/area-list/area-list.component';\r\nimport { DynamicDataService } from '../shared/services/dynamic-form.service';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { AreaUpdateComponent } from './update/area-update/area-update.component';\r\nimport { AreaDetailsComponent } from './view/area-details/area-details.component';\r\nimport { CityCreateComponent } from './create/city-create/city-create.component';\r\nimport { CityListComponent } from './list/city-list/city-list.component';\r\nimport { CityUpdateComponent } from './update/city-update/city-update.component';\r\nimport { CityDetailsComponent } from './view/city-details/city-details.component';\r\nimport { OrderStatusCreateComponent } from './create/order-status-create/order-status-create.component';\r\nimport { OrderStatusListComponent } from './list/order-status-list/order-status-list.component';\r\nimport { OrderStatusUpdateComponent } from './update/order-status-update/order-status-update.component';\r\nimport { OrderStatusDetailsComponent } from './view/order-status-details/order-status-details.component';\r\nimport { AreaGroupCreateComponent } from './create/areagroup-create/areagroup-create.component';\r\nimport { AreaGroupListComponent } from './list/areagroup-list/areagroup-list.component';\r\nimport { AreaGroupDetailsComponent } from './view/areagroup-details/areagroup-details.component';\r\nimport { AreaGroupUpdateComponent } from './update/areagroup-update/areagroup-update.component';\r\nimport { ClientListComponent } from './list/client-list/client-list.component';\r\nimport { ClientCreateComponent } from './create/client-create/client-create.component';\r\nimport { ClientUpdateComponent } from './update/client-update/client-update.component';\r\nimport { ClientDetailsComponent } from './view/client-details/client-details.component';\r\nimport { DriverListComponent } from './list/driver-list/driver-list.component';\r\nimport { DriverCreateComponent } from './create/driver-create/driver-create.component';\r\nimport { DriverUpdateComponent } from './update/driver-update/driver-update.component';\r\nimport { DriverDetailsComponent } from './view/driver-details/driver-details.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { EmployeeCreateComponent } from './create/employee-create/employee-create.component';\r\nimport { EmployeeListComponent } from './list/employee-list/employee-list.component';\r\nimport { EmployeeUpdateComponent } from './update/employee-update/employee-update.component';\r\nimport { EmployeeDetailsComponent } from './view/employee-details/employee-details.component';\r\nimport { RecordListComponent } from './list/record-list/record-list.component';\r\nimport { RecordDetailsComponent } from './view/record-details/record-details.component';\r\nimport { PromoCodeCreateComponent } from './create/promo-code-create/promo-code-create.component';\r\nimport { PromoCodeListComponent } from './list/promo-code-list/promo-code-list.component';\r\nimport { OrderCreateComponent } from './create/order-create/order-create.component';\r\nimport { OrderListComponent } from './list/order-list/order-list.component';\r\nimport { OrderUpdateComponent } from './update/order-update/order-update.component';\r\nimport { OrderDetailsComponent } from './view/order-details/order-details.component';\r\nimport { OrderListAdminComponent } from './list/order-list-admin/order-list-admin.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MoveOrdersDialogComponent } from './move-orders-dialog/move-orders-dialog.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { DateAdapter, MatNativeDateModule, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ReportsSearchComponent } from './reports-search/reports-search.component';\r\nimport { CompanyRevenueComponent } from './company-revenue/company-revenue.component';\r\nimport { MessageCreateComponent } from './create/message-create/message-create.component';\r\nimport { PromoCodeUpdateComponent } from './update/promo-code-update/promo-code-update.component';\r\nimport { PromoCodeDetailsComponent } from './view/promo-code-details/promo-code-details.component';\r\nimport { RoundListComponent } from './list/rounds-list/rounds-list.component';\r\nimport { RoundDetailsComponent } from './view/round-details/round-details.component';\r\nimport { PostponedOrdersComponent } from './list/postponed-orders/postponed-orders.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { ClientBrandListComponent } from './list/client-brand-list/client-brand-list.component';\r\nimport { ClientBrandCreateComponent } from './create/client-brand-create/client-brand-create.component';\r\nimport { PushNotificationsComponent } from './push-notifications/push-notifications.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { EndUserCreateComponent } from './create/enduser-create/enduser-create.component';\r\nimport { EndUsersListComponent } from './list/endusers-list/endusers-list.component';\r\nimport { EndUserUpdateComponent } from './update/enduser-update/enduser-update.component';\r\nimport { EndUserDetailsComponent } from './view/enduser-details/enduser-details.component';\r\nimport { MessagesListComponent } from './list/messages-list/messages-list.component';\r\nimport { MatPaginatorIntl, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatPaginationIntlService } from '../shared/services/mat-paginator-translate.service';\r\nimport { MAT_MOMENT_DATE_FORMATS } from '@angular/material-moment-adapter';\r\nimport { MomentUtcDateAdapter } from '../shared/models/date-picker-adapter';\r\nimport { PostponedOrderUpdateComponent } from './update/postponed-order-update/postponed-order-update.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AreaCreateComponent,\r\n    AreaListComponent,\r\n    AreaDetailsComponent,\r\n    AreaUpdateComponent,\r\n    AreaGroupCreateComponent,\r\n    AreaGroupListComponent,\r\n    AreaGroupDetailsComponent,\r\n    AreaGroupUpdateComponent,\r\n    CityCreateComponent,\r\n    CityListComponent,\r\n    CityUpdateComponent,\r\n    CityDetailsComponent,\r\n    OrderStatusCreateComponent,\r\n    OrderStatusListComponent,\r\n    OrderStatusUpdateComponent,\r\n    OrderStatusDetailsComponent,\r\n    OrderListAdminComponent,\r\n    OrderCreateComponent,\r\n    OrderListComponent,\r\n    OrderUpdateComponent,\r\n    OrderDetailsComponent,\r\n    PostponedOrdersComponent,\r\n    PostponedOrderUpdateComponent,\r\n    CompanyRevenueComponent,\r\n    ClientListComponent,\r\n    ClientCreateComponent,\r\n    ClientUpdateComponent,\r\n    ClientDetailsComponent,\r\n    DriverListComponent,\r\n    DriverCreateComponent,\r\n    DriverUpdateComponent,\r\n    DriverDetailsComponent,\r\n    EndUserCreateComponent,\r\n    EndUsersListComponent,\r\n    EndUserUpdateComponent,\r\n    EndUserDetailsComponent,\r\n    EmployeeCreateComponent,\r\n    EmployeeListComponent,\r\n    EmployeeUpdateComponent,\r\n    EmployeeDetailsComponent,\r\n    RecordListComponent,\r\n    RecordDetailsComponent,\r\n    PromoCodeCreateComponent,\r\n    PromoCodeListComponent,\r\n    ReportsSearchComponent,\r\n    MessageCreateComponent,\r\n    MoveOrdersDialogComponent,\r\n    PromoCodeUpdateComponent,\r\n    PromoCodeDetailsComponent,\r\n    RoundListComponent,\r\n    RoundDetailsComponent,\r\n    ClientBrandListComponent,\r\n    ClientBrandCreateComponent,\r\n    PushNotificationsComponent,\r\n    MessagesListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule, FormsModule, MatSelectModule, MatFormFieldModule, MatAutocompleteModule,\r\n    MatInputModule, MatFormFieldModule, ReactiveFormsModule, MatNativeDateModule,\r\n    MatDatepickerModule, MatRadioModule, MatDialogModule,\r\n    MatTabsModule, SharedModule,\r\n    RouterModule.forChild(FormsRoutes),\r\n    TranslateModule, MatTableModule, MatCheckboxModule, MatIconModule,\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule, MatCheckboxModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    NgSelectModule,\r\n    MatPaginatorModule\r\n  ],\r\n  exports: [\r\n\r\n  ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  providers: [\r\n    DynamicDataService, DatePipe,\r\n    {\r\n      provide: MatPaginatorIntl,\r\n      useClass: MatPaginationIntlService,\r\n    },\r\n    { provide: MAT_DATE_LOCALE, useValue: 'en-GB' },\r\n    { provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS },\r\n    { provide: DateAdapter, useClass: MomentUtcDateAdapter },\r\n  ]\r\n})\r\nexport class DynamicFormsModule { }\r\n","export default \"\\r\\n<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'employeeDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'employeesManagement' | translate}}</p>\\r\\n                    </div> \\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <mat-tab-group color=\\\"primary\\\" [(selectedIndex)]=\\\"activeTab\\\">\\r\\n                            <mat-tab label=\\\"{{'employeeDetails' | translate}}\\\">\\r\\n                                <app-dynamic-details [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n                            </mat-tab>\\r\\n                            <mat-tab label=\\\"{{'employeeRoles'| translate}}\\\">\\r\\n                                <ng-template matTabContent>\\r\\n                                    <app-user-roles [userId]=\\\"employeeId\\\"></app-user-roles>\\r\\n                                </ng-template>\\r\\n                            </mat-tab> \\r\\n                        </mat-tab-group> \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { Controllers, Actions } from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { RoleTypes } from '../../../shared/enums/enums';\r\nimport { Router } from '@angular/router';\r\nimport { UserCreateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-enduser-create',\r\n  templateUrl: './enduser-create.component.html',\r\n  styleUrls: ['./enduser-create.component.css']\r\n})\r\nexport class EndUserCreateComponent implements OnInit {\r\n\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public roles: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router : Router\r\n  ) { }\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFieldsData();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data['role'] = this.userRolesEnum.EndUser;\r\n    this.baseService.postItemTextReponse(Controllers.User, Actions.CreateUser, event.data).subscribe(res => {\r\n      this.spinner.hide();\r\n      this.notification.showNotification(res, 'success');\r\n      this.router.navigate(['/forms/endusers-list']);\r\n    }, error => {\r\n      if (error.status === 400) {\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n      else {\r\n        this.notification.showNotification(this.translate.instant('somethingWentWrong'), 'danger');\r\n      }\r\n      this.spinner.hide();\r\n    })\r\n  }\r\n\r\n  public getFieldsData() {\r\n    this.dynamicFormInput = UserCreateForm;\r\n    this.isLoading = false;\r\n    this.spinner.hide();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvYXJlYS1kZXRhaWxzL2FyZWEtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'areaCreate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'areasManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n    <button [routerLink]=\\\"'/forms/client-brand-create/'+clientId\\\" class=\\\"btn btn-primary\\\" color=\\\"primary\\\" mat-raised-button\\r\\n        type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' |\\r\\n        translate}}\\r\\n    </button>\\r\\n</div>\\r\\n<app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n    (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n<div class=\\\"table-responsive\\\">\\r\\n    <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\"\\r\\n        [pageSize]=\\\"pageSize\\\" [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n    </app-dynamic-list>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { ListActionTypeEnum } from '../../../shared/enums/enums';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { AreaList, AreaSearchForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-area-list',\r\n  templateUrl: './area-list.component.html',\r\n  styleUrls: ['./area-list.component.css'],\r\n})\r\nexport class AreaListComponent implements OnInit {\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private router: Router,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService\r\n  ) {}\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public cities: FieldListData[] = [];\r\n  public areasList: any[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFormData();\r\n    this.getListSettings();\r\n  }\r\n  public getFormData() {\r\n    this.baseService.getAllForList(Controllers.City).subscribe((res) => {\r\n      this.cities = res;\r\n      this.baseService.getAllForList(Controllers.AreaGroup).subscribe((res) => {\r\n        this.areaGroups = res;\r\n        this.dynamicFormInput = AreaSearchForm;\r\n        let cityIdField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'cityId'\r\n        );\r\n        cityIdField.data = this.cities;\r\n        let areaGroupIdField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'areaGroupId'\r\n        );\r\n        areaGroupIdField.data = this.areaGroups;\r\n      });\r\n    });\r\n  }\r\n  public getListSettings() {\r\n    this.baseService.getAllForList(Controllers.City).subscribe((res) => {\r\n      this.cities = res;\r\n      this.baseService.getAllForList(Controllers.AreaGroup).subscribe((res) => {\r\n        this.areaGroups = res;\r\n        this.dynamicListInput.columns = AreaList;\r\n        this.getListData();\r\n      });\r\n    });\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.Area, Actions.GetList, request)\r\n      .subscribe((res) => {\r\n        console.log(res);\r\n        this.areasList = res.entities;\r\n\r\n        this.dynamicListInput.data = this.areasList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    this.baseService\r\n      .postItem(Controllers.Area, Actions.GetList, event.data)\r\n      .subscribe((res) => {\r\n        this.areasList = res.entities;\r\n        this.dynamicListInput.data = this.areasList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n          width: '400px',\r\n          data: {\r\n            title: 'confirm',\r\n            content: 'confirmDeleteMessage',\r\n          },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((res) => {\r\n          if (res) {\r\n            this.spinner.show();\r\n            this.baseService\r\n              .removeItemById(Controllers.Area, event.entityId)\r\n              .subscribe(\r\n                (res) => {\r\n                  this.getListData(this.pageSize, this.pageNumber);\r\n                  this.isLoading = false;\r\n                  this.spinner.hide();\r\n                  this.notification.showNotification(res, 'success');\r\n                },\r\n                (error) => {\r\n                  if (error.status === 400) {\r\n                    this.notification.showNotification(error.error, 'danger');\r\n                  } else {\r\n                    this.notification.showNotification(\r\n                      'somethingWentWrong',\r\n                      'danger'\r\n                    );\r\n                  }\r\n                  this.spinner.hide();\r\n                }\r\n              );\r\n          }\r\n        });\r\n\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([`/forms/area-update/${event.entityId}`]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/area-details/${event.entityId}`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3VwZGF0ZS9lbmR1c2VyLXVwZGF0ZS9lbmR1c2VyLXVwZGF0ZS5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3VwZGF0ZS9vcmRlci1zdGF0dXMtdXBkYXRlL29yZGVyLXN0YXR1cy11cGRhdGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \".upload-btn-wrapper {\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n    display: inline-block;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  \\r\\n  .upload-btn-wrapper input[type=file] {\\r\\n    font-size: 100px;\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n    opacity: 0;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mb3Jtcy1tb2R1bGUvbGlzdC9vcmRlci1saXN0L29yZGVyLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIscUJBQXFCO0VBQ3ZCOzs7O0VBSUE7SUFDRSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxNQUFNO0lBQ04sVUFBVTtFQUNaIiwiZmlsZSI6InNyYy9mb3Jtcy1tb2R1bGUvbGlzdC9vcmRlci1saXN0L29yZGVyLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51cGxvYWQtYnRuLXdyYXBwZXIge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9XHJcbiAgXHJcbiAgXHJcbiAgXHJcbiAgLnVwbG9hZC1idG4td3JhcHBlciBpbnB1dFt0eXBlPWZpbGVdIHtcclxuICAgIGZvbnQtc2l6ZTogMTAwcHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9Il19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AreaUpdateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-area-update',\r\n  templateUrl: './area-update.component.html',\r\n  styleUrls: ['./area-update.component.css'],\r\n})\r\nexport class AreaUpdateComponent implements OnInit {\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dynamicService: DynamicDataService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public areaId: number;\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((params) => {\r\n      this.areaId = params.id;\r\n      this.getAsync(this.areaId);\r\n    });\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.Area, id).subscribe((res) => {\r\n      this.getFieldsData(res);\r\n    });\r\n  }\r\n  public getFieldsData(area: any) {\r\n    this.baseService.getAllForList(Controllers.City).subscribe((res) => {\r\n      this.cities = res;\r\n      this.baseService.getAllForList(Controllers.AreaGroup).subscribe((res) => {\r\n        this.areaGroups = res;\r\n        this.dynamicFormInput = AreaUpdateForm;\r\n        let cityIdField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'cityId'\r\n        );\r\n        cityIdField.data = this.cities;\r\n        let areaGroupIdField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'areaGroupId'\r\n        );\r\n        areaGroupIdField.data = this.areaGroups;\r\n        this.dynamicFormInput.formFields.forEach((field) => {\r\n          field.value = area[field.fieldId];\r\n        });\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n    });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.areaId);\r\n    this.baseService.editItem(Controllers.Area, event.data).subscribe(\r\n      (res) => {\r\n        this.spinner.hide();\r\n        this.notification.showNotification(res, 'success');\r\n        this.router.navigate(['/forms/area-list']);\r\n      },\r\n      (error) => {\r\n        if (error.status === 400) {\r\n          this.notification.showNotification(error.error, 'danger');\r\n        } else {\r\n          this.notification.showNotification('somethingWentWrong', 'danger');\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport {\r\n  Controllers,\r\n  Actions,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { AreaCreateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-area-create',\r\n  templateUrl: './area-create.component.html',\r\n  styleUrls: ['./area-create.component.css'],\r\n})\r\nexport class AreaCreateComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n\r\n  constructor(\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFieldsData();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    this.baseService\r\n      .postItemTextReponse(Controllers.Area, Actions.PostItem, event.data)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(res, 'success');\r\n          this.router.navigate(['/forms/area-list']);\r\n        },\r\n        (error) => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          } else {\r\n            this.notification.showNotification(\r\n              this.translate.instant('somethingWentWrong'),\r\n              'danger'\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  public getFieldsData() {\r\n    this.baseService.getAllForList(Controllers.City).subscribe((res) => {\r\n      this.cities = res;\r\n      this.baseService.getAllForList(Controllers.AreaGroup).subscribe((res) => {\r\n        this.areaGroups = res;\r\n        this.dynamicFormInput = AreaCreateForm;\r\n        let cityIdField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'cityId'\r\n        );\r\n        cityIdField.data = this.cities;\r\n        let areaGroupIdField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'areaGroupId'\r\n        );\r\n        areaGroupIdField.data = this.areaGroups;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3VwZGF0ZS9vcmRlci11cGRhdGUvb3JkZXItdXBkYXRlLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\n\r\n@Component({\r\n  selector: 'app-area-details',\r\n  templateUrl: './area-details.component.html',\r\n  styleUrls: ['./area-details.component.css']\r\n})\r\nexport class AreaDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dynamicService: DynamicDataService,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) { }\r\n  public areaId: number;\r\n  public area: any;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.areaId = params.id;\r\n      this.getAsync(this.areaId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.Area, id).subscribe(res => {\r\n      console.log(res);\r\n      this.area = res;\r\n      this.detailsInput.dataObject = this.area;\r\n      this.isLoading = false;\r\n    }) \r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.areaId);\r\n    this.baseService.editItem(Controllers.Area, event.data).subscribe(res => {\r\n      this.spinner.hide();\r\n      console.log(this.translate.getDefaultLang());\r\n\r\n      this.notification.showNotification('areaUpdatedSuccess', 'success');\r\n    }, error => {\r\n      if (error.status === 400) {\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n      else {\r\n        this.notification.showNotification('somethingWentWrong', 'danger');\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionTypeEnum } from '../../../shared/enums/enums';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-client-brand-list',\r\n  templateUrl: './client-brand-list.component.html',\r\n  styleUrls: ['./client-brand-list.component.css']\r\n})\r\nexport class ClientBrandListComponent implements OnInit {\r\n\r\n  constructor(private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) { }\r\n  @Input() clientId: number;\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public brands: FieldListData[] = [];\r\n  public areasList: any[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFormData();\r\n\r\n  }\r\n  public getFormData() {\r\n    this.dynamicService.getFormSettings('ClientBrandSearchForm').subscribe(res => {\r\n      this.dynamicFormInput = res;\r\n      this.getListSettings();\r\n    });\r\n  }\r\n  public getListSettings() {\r\n    this.dynamicService.getListSettings('ClientBrandsList').subscribe(res => {\r\n      this.dynamicListInput = res;\r\n      this.getListData();\r\n    });\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n      clientId: Number(this.clientId)\r\n    }\r\n    this.baseService.postItem(Controllers.ClientBrand, Actions.GetList, request).subscribe(res => {\r\n      this.brands = res.entities;\r\n      this.dynamicListInput.data = this.brands;\r\n      this.dynamicListInput.totalCount = res.totalCount;\r\n      this.isLoading = false;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    event.data.clientId = Number(this.clientId);\r\n    this.baseService.postItem(Controllers.ClientBrand, Actions.GetList, event.data).subscribe(res => {\r\n      this.areasList = res.entities;\r\n      this.dynamicListInput.data = this.areasList;\r\n      this.dynamicListInput.totalCount = res.totalCount;\r\n      this.isLoading = false;\r\n      this.spinner.hide();\r\n    })\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete:\r\n        {\r\n          const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n            width: '400px',\r\n            data: {\r\n              title: 'confirm',\r\n              content: 'confirmDeleteMessage'\r\n            }\r\n          })\r\n\r\n          dialogRef.afterClosed().subscribe(res => {\r\n            if (res) {\r\n              this.spinner.show();\r\n\r\n              this.baseService.removeItemById(Controllers.ClientBrand, event.entityId).subscribe(res => {\r\n                this.getListData(this.pageSize, this.pageNumber);\r\n                this.isLoading = false;\r\n                this.spinner.hide();\r\n                console.log(res);\r\n                this.notification.showNotification(res, 'success')\r\n              }, error => {\r\n                if (error.status === 400) {\r\n                  this.notification.showNotification(error.error, 'danger');\r\n                }\r\n                else {\r\n                  this.notification.showNotification('somethingWentWrong', 'danger');\r\n                }\r\n                this.spinner.hide();\r\n              });\r\n            }\r\n          })\r\n\r\n          break;\r\n        }\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { ListActionTypeEnum, RoleTypes } from '../../../shared/enums/enums';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UserSearchForm, UsersList } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-employee-list',\r\n  templateUrl: './employee-list.component.html',\r\n  styleUrls: ['./employee-list.component.css']\r\n})\r\nexport class EmployeeListComponent implements OnInit {\r\n\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public employees: FieldListData[] = [];\r\n  public employeeList: any[] = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(private dynamicService: DynamicDataService,\r\n    private router: Router,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService,\r\n  ) { }\r\n   public baseStatuses=[]; \r\n\r\n  ngOnInit(): void {\r\n    this.baseStatuses=[\r\n      {value:true,viewValueEn:'Active',viewValueAr:'نشط'},\r\n      {value:false,viewValueEn:'Not Active',viewValueAr:'غير نشط'}\r\n    ];\r\n    this.spinner.show();\r\n    this.getFormData();\r\n\r\n  }\r\n  public getFormData() {\r\n    this.baseService.getItemsByKey(Controllers.User, Actions.GetAllItems, 'role', this.userRolesEnum.Employee).subscribe(res => {\r\n      this.employees = res;\r\n      this.dynamicFormInput = UserSearchForm;\r\n      let userIdField = this.dynamicFormInput.formFields.find(x => x.fieldId == 'userId');\r\n      let statusField = this.dynamicFormInput.formFields.find(x => x.fieldId == 'isActive');\r\n      userIdField.data = this.employees;\r\n      statusField.data = this.baseStatuses;\r\n      this.getListSettings();\r\n    });\r\n  }\r\n  public getListSettings() {\r\n    this.dynamicListInput.columns = UsersList;\r\n    this.getListData();\r\n    console.log(this.dynamicFormInput);\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n      role:this.userRolesEnum.Employee\r\n    }\r\n    this.baseService.postItem(Controllers.User, Actions.GetList, request).subscribe(res => {\r\n      this.employeeList = res.entities;\r\n      this.dynamicListInput.data = this.employeeList;\r\n      this.dynamicListInput.totalCount = res.totalCount;\r\n      this.isLoading = false;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    event.data.role = this.userRolesEnum.Employee;\r\n    this.baseService.postItem(Controllers.User, Actions.GetList, event.data).subscribe(res => {\r\n      this.employeeList = res.entities;\r\n      this.dynamicListInput.data = this.employeeList;\r\n      this.dynamicListInput.totalCount = res.totalCount;\r\n      this.spinner.hide();\r\n      console.log(res);\r\n    })\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete:\r\n        {\r\n          const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n            width: '400px',\r\n            data: {\r\n              title: 'confirm',\r\n              content: 'confirmDeleteMessage'\r\n            }\r\n          })\r\n\r\n          dialogRef.afterClosed().subscribe(res => {\r\n            if (res) {\r\n              this.spinner.show();\r\n              this.baseService.removeItemById(Controllers.User, event.entityId).subscribe(res => {\r\n                this.getListData(this.pageSize, this.pageNumber);\r\n                this.spinner.hide();\r\n                console.log(res);\r\n                this.notification.showNotification(res, 'success')\r\n              }, error => {\r\n                if (error.status === 400) {\r\n                  this.notification.showNotification(error.error, 'danger');\r\n                }\r\n                else {\r\n                  this.notification.showNotification('somethingWentWrong', 'danger');\r\n                }\r\n                this.spinner.hide();\r\n              });\r\n            }\r\n          })\r\n\r\n          break;\r\n        }\r\n      case ListActionTypeEnum.Edit:\r\n        {\r\n          this.router.navigate([`/forms/employee-update/${event.entityId}`]);\r\n          break;\r\n        } \r\n      case ListActionTypeEnum.View:\r\n        {\r\n          this.router.navigate([`/forms/employee-details/${event.entityId}`]);\r\n          break;\r\n        }\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9jbGllbnQtY3JlYXRlL2NsaWVudC1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\r\\n<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'enduserDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'endUsersManagement' | translate}}</p>\\r\\n                    </div> \\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-details [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport {\r\n  DynamicFormField,\r\n  FieldListData,\r\n} from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport {\r\n  DynamicListColumn,\r\n  DynamicListInput,\r\n} from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport {\r\n  ActionTypeEnum,\r\n  FieldTypeEnum,\r\n  ListActionTypeEnum,\r\n} from '../../../shared/enums/enums';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { CityList, CitySearchForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-city-list',\r\n  templateUrl: './city-list.component.html',\r\n  styleUrls: ['./city-list.component.css'],\r\n})\r\nexport class CityListComponent implements OnInit {\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public cities: FieldListData[] = [];\r\n  public areasList: any[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    // this.getFormData();\r\n    this.getListSettings();\r\n  }\r\n  public getFormData() {\r\n    this.dynamicService.getFormSettings('CitySearchForm').subscribe((res) => {\r\n      this.dynamicFormInput = res;\r\n    });\r\n  }\r\n  public getListSettings() {\r\n    this.baseService.getAllForList(Controllers.City).subscribe((res) => {\r\n      this.cities = res;\r\n      this.dynamicListInput.columns = CityList;\r\n      this.dynamicFormInput = CitySearchForm;\r\n      this.getListData();\r\n    });\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.City, Actions.GetList, request)\r\n      .subscribe((res) => {\r\n        this.cities = res.entities;\r\n        this.dynamicListInput.data = this.cities;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n      });\r\n    this.spinner.hide();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    this.baseService\r\n      .postItem(Controllers.City, Actions.GetList, event.data)\r\n      .subscribe((res) => {\r\n        this.areasList = res.entities;\r\n        this.dynamicListInput.data = this.areasList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n          width: '400px',\r\n          data: {\r\n            title: 'confirm',\r\n            content: 'confirmDeleteMessage',\r\n          },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((res) => {\r\n          if (res) {\r\n            this.spinner.show();\r\n            this.baseService\r\n              .removeItemById(Controllers.City, event.entityId)\r\n              .subscribe(\r\n                (res) => {\r\n                  this.getListData(this.pageSize, this.pageNumber);\r\n                  this.isLoading = false;\r\n                  this.spinner.hide();\r\n                  this.notification.showNotification(res, 'success');\r\n                },\r\n                (error) => {\r\n                  if (error.status === 400) {\r\n                    this.notification.showNotification(error.error, 'danger');\r\n                  } else {\r\n                    this.notification.showNotification(\r\n                      'somethingWentWrong',\r\n                      'danger'\r\n                    );\r\n                  }\r\n                  this.spinner.hide();\r\n                }\r\n              );\r\n          }\r\n        });\r\n\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([`/forms/city-update/${event.entityId}`]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/city-details/${event.entityId}`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormOutput } from \"../../../shared/models/dynamic-form-output.model\";\r\nimport { DynamicFormInput } from \"../../../shared/models/dynamic-form-input\";\r\nimport { DynamicDataService } from \"../../../shared/services/dynamic-form.service\";\r\nimport { BaseService } from \"../../../shared/services/base.service\";\r\nimport { Controllers } from \"../../../shared/global-variables/api-config\";\r\nimport { FieldListData } from \"../../../shared/models/dynamic-form-field\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { NotificationService } from \"../../../shared/services/notification.service\";\r\nimport { RoleTypes } from \"../../../shared/enums/enums\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { UpdateUserForm, UserCreateForm } from \"../../dynamic-data\";\r\n\r\n@Component({\r\n  selector: \"app-driver-update\",\r\n  templateUrl: \"./driver-update.component.html\",\r\n  styleUrls: [\"./driver-update.component.css\"],\r\n})\r\nexport class DriverUpdateComponent implements OnInit {\r\n  public baseStatuses = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public roles: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public clientId: number;\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe((params) => {\r\n      this.clientId = params.id;\r\n      this.baseStatuses = [\r\n        { value: true, viewValueEn: \"Active\", viewValueAr: \"نشط\" },\r\n        { value: false, viewValueEn: \"Not Active\", viewValueAr: \"غير نشط\" },\r\n      ];\r\n      this.getAsync(this.clientId);\r\n    });\r\n    this.spinner.hide();\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.User, id).subscribe((res) => {\r\n      console.log(\r\n        \"🚀 ~ DriverUpdateComponent ~ this.baseService.getById ~ res:\",\r\n        res\r\n      );\r\n      this.getFieldsData(res);\r\n    });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data[\"role\"] = this.userRolesEnum.Merchant;\r\n    event.data.id = Number(this.clientId);\r\n    this.baseService.editItem(Controllers.User, event.data).subscribe(\r\n      (res) => {\r\n        this.spinner.hide();\r\n        this.notification.showNotification(res, \"success\");\r\n        this.router.navigate([\"/forms/driver-list\"]);\r\n      },\r\n      (error) => {\r\n        this.spinner.hide();\r\n        this.notification.showNotification(error.error, \"danger\");\r\n      }\r\n    );\r\n  }\r\n\r\n  public getFieldsData(client: any) {\r\n    this.baseService.getAllForList(Controllers.AreaGroup).subscribe((res) => {\r\n      this.areaGroups = res;\r\n      this.dynamicFormInput = UpdateUserForm;\r\n      this.dynamicFormInput.formFields.forEach((field) => {\r\n        field.value = client[field.fieldId];\r\n      });\r\n      let statusField = this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == \"isActive\"\r\n      );\r\n      // let areaGroupIdField = this.dynamicFormInput.formFields.find(\r\n      //   (x) => x.fieldId == \"areaRegionId\"\r\n      // );\r\n      // areaGroupIdField.data = this.areaGroups;\r\n      statusField.data = this.baseStatuses;\r\n      this.isLoading = false;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { LanguageService } from '../../shared/services/language.service';\r\nimport { Controllers, Actions } from '../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../shared/services/base.service';\r\nimport { NotificationService } from '../../shared/services/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-push-notifications',\r\n  templateUrl: './push-notifications.component.html',\r\n  styleUrls: ['./push-notifications.component.scss']\r\n})\r\nexport class PushNotificationsComponent implements OnInit {\r\n  public user = new FormControl();\r\n  public filteredUsers: Observable<any[]>;\r\n  public usersList: any[];\r\n  public rolesList: any[];\r\n  public mappedUser: any[];\r\n  public usersToSendList: any[];\r\n  public selectedUser: number;\r\n  public tergetedAudience = 1;\r\n  public usersDropList = new FormControl();\r\n\r\n  public pushNotificationForm = new FormGroup({\r\n    title: new FormControl('',[Validators.required]),\r\n    body: new FormControl('',[Validators.required]),\r\n    userId: new FormControl(''),\r\n    usersIds: new FormControl(''),\r\n    role: new FormControl('')\r\n  });\r\n\r\n  public getFormControlByName(controlName: string): FormControl {\r\n    return this.pushNotificationForm.get(controlName) as FormControl;\r\n  }\r\n\r\n  constructor(\r\n    private baseService: BaseService,\r\n    public spinner: NgxSpinnerService,\r\n    public notification: NotificationService,\r\n    public translate: TranslateService,\r\n    public languageService: LanguageService,\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.getAllUsers();\r\n    this.getAllRoles();\r\n  }\r\n\r\n\r\n  public getAllUsers(): void {\r\n    this.spinner.show();\r\n    const Controller = Controllers.User;\r\n    this.baseService.getAllForList(Controller).subscribe(res => {\r\n      this.usersList = res;\r\n     // this.mappedUser = res.map(user => ({ display: user.fullName, value: user.id }))\r\n      this.filteredUsers = this.user.valueChanges\r\n        .pipe(\r\n          startWith(''),\r\n          map(value => this.filter(value))\r\n        );\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n  public getAllRoles(): void {\r\n    this.spinner.show();\r\n    const Controller = Controllers.User;\r\n    this.baseService.getItems(Controller,Actions.GetNonEmployeeRoles).subscribe(res => {\r\n      this.rolesList = res;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n  public userSelectionChange(value) {\r\n    console.log(value);\r\n\r\n    this.usersToSendList = value;\r\n    this.getFormControlByName('usersIds').setValue(value);\r\n  }\r\n  private filter(value: any) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.usersList.filter(option => option.fullName.toLowerCase().includes(filterValue));\r\n  }\r\n  userSelected(event) {\r\n    this.selectedUser = this.usersList.find(x => x.fullName == event.option.value).id;\r\n    this.getFormControlByName('userId').setValue(this.selectedUser);\r\n  }\r\n\r\n public submitMultiUserNotification(): void {\r\n    if (this.pushNotificationForm.invalid) {\r\n      this.pushNotificationForm.markAllAsTouched();\r\n      this.notification.showNotification(this.translate.instant('formValidationError'), 'warn');\r\n    }\r\n    else {\r\n      this.spinner.show();\r\n      const notificationForm = this.pushNotificationForm.value;\r\n      this.baseService\r\n        .postItemTextReponse(Controllers.Notification, Actions.SendNotificationToMultiUsers , notificationForm)\r\n        .subscribe(response => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(response, 'success');\r\n        },  error => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          }\r\n          else {\r\n            this.notification.showNotification(this.translate.instant('somethingWentWrong'), 'danger');\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n\r\n  public submitAllUsersNotifications(): void {\r\n    if (this.pushNotificationForm.invalid) {\r\n      this.pushNotificationForm.markAllAsTouched();\r\n      this.notification.showNotification(this.translate.instant('formValidationError'), 'warn');\r\n    }\r\n    else {\r\n      this.spinner.show();\r\n      const notificationForm = this.pushNotificationForm.value;\r\n      this.baseService\r\n        .postItemTextReponse(Controllers.Notification, Actions.PodcastAllUsersNotification, notificationForm)\r\n        .subscribe(response => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(response, 'success');\r\n        }, error => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          }\r\n          else {\r\n            this.notification.showNotification(this.translate.instant('somethingWentWrong'), 'danger');\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n  public submitSpecificRoleNotifications(): void {\r\n    if (this.pushNotificationForm.invalid) {\r\n      this.pushNotificationForm.markAllAsTouched();\r\n      this.notification.showNotification(this.translate.instant('formValidationError'), 'warn');\r\n    }\r\n    else {\r\n      this.spinner.show();\r\n      const notificationForm = this.pushNotificationForm.value;\r\n      this.baseService\r\n        .postItemTextReponse(Controllers.Notification, Actions.SendPushNotificationByRole, notificationForm)\r\n        .subscribe(response => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(response, 'success');\r\n        }, error => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          }\r\n          else {\r\n            this.notification.showNotification(this.translate.instant('somethingWentWrong'), 'danger');\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'statistics'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'companyRevenue' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <form [formGroup]=\\\"filterForm\\\">\\r\\n                            <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"25px\\\" fxLayoutGap.lt-sm=\\\"0\\\">\\r\\n                              <mat-form-field fxFlex=\\\"auto\\\">\\r\\n                                <mat-label>{{'fromDate' | translate}}</mat-label>\\r\\n                                <input [matDatepicker]=\\\"fromDatePicker\\\" formControlName=\\\"from\\\" matInput>\\r\\n                                <mat-datepicker-toggle [for]=\\\"fromDatePicker\\\" matSuffix></mat-datepicker-toggle>\\r\\n                                <mat-datepicker #fromDatePicker></mat-datepicker>\\r\\n                              </mat-form-field>\\r\\n                              <mat-form-field fxFlex=\\\"auto\\\">\\r\\n                                <mat-label>{{'toDate' | translate}}</mat-label>\\r\\n                                <input [matDatepicker]=\\\"toDatePicker\\\" formControlName=\\\"to\\\" matInput>\\r\\n                                <mat-datepicker-toggle [for]=\\\"toDatePicker\\\" matSuffix></mat-datepicker-toggle>\\r\\n                                <mat-datepicker #toDatePicker></mat-datepicker>\\r\\n                              </mat-form-field>\\r\\n                            </div>\\r\\n                            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" fxLayoutGap=\\\"8px\\\">\\r\\n                              <button class=\\\"btn btn-primary btn-start\\\" (click)=\\\"filterOrders()\\\" color=\\\"primary\\\" mat-raised-button type=\\\"button\\\">{{'search' | translate}}</button>\\r\\n                              <button class=\\\"btn btn-primary btn-start\\\" (click)=\\\"filterForm.reset(); filterOrders()\\\" color=\\\"primary\\\" mat-raised-button type=\\\"button\\\">{{'clear' | translate}}</button>\\r\\n                            </div>\\r\\n                          </form>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!isLoading\\\" class=\\\"container-fluid\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\" *ngFor=\\\"let card of cards\\\">\\r\\n                              <app-dynamic-card [price]=\\\"card.price\\\" [icon]=\\\"card.icon\\\" \\r\\n                                [color]=\\\"card.backgroundColor\\\" [label]=\\\"card.name\\\"\\r\\n                              ></app-dynamic-card>                            </div>\\r\\n                          </div>\\r\\n                     </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { Controllers } from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { RoleTypes } from '../../../shared/enums/enums';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UpdateUserForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-enduser-update',\r\n  templateUrl: './enduser-update.component.html',\r\n  styleUrls: ['./enduser-update.component.css'],\r\n})\r\nexport class EndUserUpdateComponent implements OnInit {\r\n  public baseStatuses = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public roles: FieldListData[] = [];\r\n  public clientId: number;\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe((params) => {\r\n      this.clientId = params.id;\r\n      this.baseStatuses = [\r\n        { value: true, viewValueEn: 'Active', viewValueAr: 'نشط' },\r\n        { value: false, viewValueEn: 'Not Active', viewValueAr: 'غير نشط' },\r\n      ];\r\n      this.getAsync(this.clientId);\r\n    });\r\n    this.spinner.show();\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.User, id).subscribe((res) => {\r\n      this.getFieldsData(res);\r\n    });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data['role'] = this.userRolesEnum.Merchant;\r\n    event.data.id = Number(this.clientId);\r\n    this.baseService.editItem(Controllers.User, event.data).subscribe(\r\n      (res) => {\r\n        this.spinner.hide();\r\n        this.notification.showNotification(res, 'success');\r\n        this.router.navigate(['/forms/endusers-list']);\r\n      },\r\n      (error) => {\r\n        this.spinner.hide();\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n    );\r\n  }\r\n\r\n  public getFieldsData(client: any) {\r\n    this.dynamicFormInput = UpdateUserForm;\r\n    this.dynamicFormInput.formFields.forEach((field) => {\r\n      field.value = client[field.fieldId];\r\n    });\r\n    let statusField = this.dynamicFormInput.formFields.find(\r\n      (x) => x.fieldId == 'isActive'\r\n    );\r\n\r\n    statusField.data = this.baseStatuses;\r\n    this.isLoading = false;\r\n    this.spinner.hide();\r\n  }\r\n}\r\n","export default \"\\r\\n<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'areagroupDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'areagroupManagement' | translate}}</p>\\r\\n                    </div> \\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-details [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport {\r\n  Controllers,\r\n  Actions,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { ActionTypeEnum, FieldTypeEnum } from '../../../shared/enums/enums';\r\nimport { CityCreateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-city-create',\r\n  templateUrl: './city-create.component.html',\r\n  styleUrls: ['./city-create.component.css'],\r\n})\r\nexport class CityCreateComponent implements OnInit {\r\n  constructor(\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFieldsData();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    this.baseService\r\n      .postItemTextReponse(Controllers.City, Actions.PostItem, event.data)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(res, 'success');\r\n          this.router.navigate(['/forms/city-list']);\r\n        },\r\n        (error) => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          } else {\r\n            this.notification.showNotification(\r\n              this.translate.instant('somethingWentWrong'),\r\n              'danger'\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  public getFieldsData() {\r\n    this.spinner.hide();\r\n\r\n    this.dynamicFormInput = CityCreateForm;\r\n    this.isLoading = false;\r\n  }\r\n  public getTranslatableText(key: string) {\r\n    var textValue = '';\r\n    this.translate.get(key).subscribe((text: string) => {\r\n      textValue = text;\r\n    });\r\n    return textValue;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\n\r\n@Component({\r\n  selector: 'app-order-status-details',\r\n  templateUrl: './order-status-details.component.html',\r\n  styleUrls: ['./order-status-details.component.css']\r\n})\r\nexport class OrderStatusDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dynamicService: DynamicDataService,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) { }\r\n  public orderStatusId: number;\r\n  public area: any;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe(params => {\r\n      this.orderStatusId = params.id;\r\n      this.getAsync(this.orderStatusId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.OrderStatus, id).subscribe(res => {\r\n     console.log(res);\r\n      this.area = res;\r\n      this.detailsInput.dataObject = this.area;\r\n      this.isLoading = false;\r\n      this.spinner.hide();\r\n    }) \r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.orderStatusId);\r\n    this.baseService.editItem(Controllers.OrderStatus, event.data).subscribe(res => {\r\n      this.spinner.hide();\r\n      console.log(this.translate.getDefaultLang());\r\n\r\n      this.notification.showNotification('orderStatusUpdatedSuccess', 'success');\r\n    }, error => {\r\n      if (error.status === 400) {\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n      else {\r\n        this.notification.showNotification('somethingWentWrong', 'danger');\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3QvY2l0eS1saXN0L2NpdHktbGlzdC5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'clientBrandCreate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'clientBrandsManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'citiesList'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'citiesManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n                            <button routerLink=\\\"/forms/city-create\\\" class=\\\"btn btn-primary\\\" color=\\\"primary\\\"\\r\\n                                mat-raised-button type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' |\\r\\n                                translate}}\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\"\\r\\n                            [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\"\\r\\n                                (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\" [pageNumber]=\\\"pageNumber\\\"\\r\\n                                *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                            </app-dynamic-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'financialRoundDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'financialRoundsManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <app-dynamic-details [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'ListRecords'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'recordsManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        \\r\\n                        <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                            (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\"\\r\\n                                [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                            </app-dynamic-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { ListActionTypeEnum, RoleTypes } from '../../../shared/enums/enums';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  FinancialRoundList,\r\n  FinancialRoundSearchForm,\r\n} from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-rounds-list',\r\n  templateUrl: './rounds-list.component.html',\r\n  styleUrls: ['./rounds-list.component.css'],\r\n})\r\nexport class RoundListComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public clients: FieldListData[] = [];\r\n  public roundList: any[] = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  public baseStatuses = [];\r\n\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private router: Router,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.baseStatuses = [\r\n      {\r\n        value: 1,\r\n        viewValueEn: 'Pending Approval',\r\n        viewValueAr: 'بإنتظار الموافقة',\r\n      },\r\n      { value: 2, viewValueEn: 'Approved', viewValueAr: 'موافق عليه' },\r\n    ];\r\n    this.spinner.show();\r\n    this.getFormData();\r\n  }\r\n  public getFormData() {\r\n    this.baseService\r\n      .getItemsByKey(\r\n        Controllers.User,\r\n        Actions.GetAllItems,\r\n        'role',\r\n        this.userRolesEnum.Merchant\r\n      )\r\n      .subscribe((res) => {\r\n        this.clients = res;\r\n        this.dynamicFormInput = FinancialRoundSearchForm;\r\n        let clientIdField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'clientId'\r\n        );\r\n        clientIdField.data = this.clients;\r\n        let statusField = this.dynamicFormInput.formFields.find(\r\n          (x) => x.fieldId == 'status'\r\n        );\r\n        statusField.data = this.baseStatuses;\r\n        this.getListSettings();\r\n      });\r\n  }\r\n  public getListSettings() {\r\n    this.dynamicListInput.columns = FinancialRoundList;\r\n    this.getListData();\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.FinancialRound, Actions.GetList, request)\r\n      .subscribe((res) => {\r\n        this.roundList = res.entities;\r\n        console.log(res);\r\n        this.dynamicListInput.data = this.roundList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    this.baseService\r\n      .postItem(Controllers.FinancialRound, Actions.GetList, event.data)\r\n      .subscribe((res) => {\r\n        this.roundList = res.entities;\r\n        this.dynamicListInput.data = this.roundList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.spinner.hide();\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([`/forms/round-update/${event.entityId}`]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/round-details/${event.entityId}`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3Qvb3JkZXItc3RhdHVzLWxpc3Qvb3JkZXItc3RhdHVzLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvZW1wbG95ZWUtZGV0YWlscy9lbXBsb3llZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"td.mat-cell {\\r\\n  border: 1px solid #000000;\\r\\n  text-align: center !important;\\r\\n  align-content: center !important;\\r\\n}\\r\\n\\r\\nth.mat-header-cell {\\r\\n  border: 1px solid #000000;\\r\\n  text-align: center !important;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mb3Jtcy1tb2R1bGUvbGlzdC9vcmRlci1saXN0LWFkbWluL29yZGVyLWxpc3QtYWRtaW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHlCQUF5QjtFQUN6Qiw2QkFBNkI7RUFDN0IsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDZCQUE2QjtBQUMvQiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3Qvb3JkZXItbGlzdC1hZG1pbi9vcmRlci1saXN0LWFkbWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0ZC5tYXQtY2VsbCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICBhbGlnbi1jb250ZW50OiBjZW50ZXIgIWltcG9ydGFudDtcclxufVxyXG5cclxudGgubWF0LWhlYWRlci1jZWxsIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvcmVjb3JkLWRldGFpbHMvcmVjb3JkLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'employeeUpdate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'employeesManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <mat-tab-group color=\\\"primary\\\" [(selectedIndex)]=\\\"activeTab\\\">\\r\\n                            <mat-tab label=\\\"{{'employeeDetails' | translate}}\\\">\\r\\n                                <ng-template matTabContent>\\r\\n                                    <app-dynamic-form class=\\\"mt-5\\\" [isUpdate]=\\\"true\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                                        (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                                </ng-template>\\r\\n                            </mat-tab>\\r\\n                            <mat-tab label=\\\"{{'employeeRoles'| translate}}\\\">\\r\\n                                <ng-template matTabContent>\\r\\n                                    <app-user-roles [userId]=\\\"employeeId\\\"></app-user-roles>\\r\\n                                </ng-template>\\r\\n                            </mat-tab>\\r\\n                        </mat-tab-group>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9jaXR5LWNyZWF0ZS9jaXR5LWNyZWF0ZS5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'enduserUpdate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'endUsersManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [isUpdate]=\\\"true\\\" [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { MoveOrdersDialogComponent } from './../move-orders-dialog/move-orders-dialog.component';\r\nimport { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport icTimer from '@iconify/icons-ic/twotone-timer';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { BaseService } from '../../shared/services/base.service';\r\nimport { NotificationService } from '../../shared/services/notification.service';\r\nimport { Actions, Controllers } from '../../shared/global-variables/api-config';\r\nimport { RevenueModel } from '../../shared/models/revenue-model';\r\n@Component({\r\n  selector: 'app-company-revenue',\r\n  templateUrl: './company-revenue.component.html',\r\n  styleUrls: ['./company-revenue.component.css'],\r\n  animations: [\r\n  \r\n  ]\r\n})\r\nexport class CompanyRevenueComponent implements OnInit {\r\n  layoutCtrl = new FormControl('fullWidth');\r\n  orders: any;\r\n  public cards: RevenueModel[]=[];\r\n  pageSize: any;\r\n  pageNumber: any;\r\n  totalRows: any;\r\n  services: any;\r\n  isLoading = true;\r\n  isRateLimitReached = false;\r\n  totalCompanyRevenue = 0;\r\n  totalDriverRevenue = 0;\r\n  totalOrderPrices = 0;\r\n\r\n  public companyHeader;\r\n  @Input()\r\n  displayedColumns: string[] = [\r\n    'orderDate',\r\n    'clientName',\r\n    'driverName',\r\n    'status',\r\n    'orderTotalPrice',\r\n    'coompanyRevenue',\r\n    'driverRevenue',\r\n  ];\r\n  icTimer = icTimer;\r\n  dataSource: MatTableDataSource<any>;\r\n  selection = new SelectionModel<any>(true, []);\r\n  searchCtrl = new FormControl();\r\n ;\r\n  inputType = 'password';\r\n  countries: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  stateCtrl = new FormControl();\r\n  filterForm = new FormGroup({\r\n    pageSize: new FormControl(),\r\n    pageNumber: new FormControl(),\r\n    from: new FormControl(),\r\n    to: new FormControl()\r\n  });\r\n\r\n  // ==---------===-----------=Icons declarations area==------------------=-=-=\r\n\r\n \r\n  constructor(\r\nprivate baseService : BaseService,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    private notification: NotificationService\r\n  ) {\r\n  }\r\n  ngOnInit() {\r\n    this.getAllOrders(10, 1);\r\n  }\r\n\r\n \r\n\r\n  get PageSize() {\r\n    return this.filterForm.get('pageSize') as FormControl;\r\n  }\r\n  get PageNumber() {\r\n    return this.filterForm.get('pageNumber') as FormControl;\r\n  }\r\n  convertToUTC(date: Date): Date {\r\n    if (date) {\r\n      date = new Date(date);\r\n      return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    } else { return null; }\r\n  }\r\n  getAllOrders(pageSize: number, pageNumber: number) {\r\n    this.isLoading= true;\r\n    this.PageSize.setValue(pageSize);\r\n    this.PageNumber.setValue(pageNumber);\r\n    this.pageSize = pageSize;\r\n    this.pageNumber = pageNumber;\r\n  \r\n   var from =  this.filterForm.get('from').value;\r\n   var to =  this.filterForm.get('to').value;\r\n   let request = {\r\npageNumber:pageNumber,\r\npageSize:pageSize,\r\nordersDateFrom :   from ,\r\nordersDateTo :  to\r\n    };\r\nconsole.log(request);\r\n    this.baseService.postItem(Controllers.Order,Actions.GetRevenue,request).subscribe(res => {\r\n    console.log(res);\r\n    let totalClientRevenue : RevenueModel = {\r\n        name: \"totalClientRevenue\",\r\n        price:res.totalClientRevenue,\r\n        backgroundColor:'primary',\r\n        icon : '61d30e86-ed85-4181-9ed3-00171b0faf3b.png'\r\n      };\r\n      let totalCompanyRevenue : RevenueModel = {\r\n        name: \"totalCompanyRevenue\",\r\n        price:res.totalCompanyRevenue,\r\n        backgroundColor:'#f542d4',    \r\n        icon : '61d30e86-ed85-4181-9ed3-00171b0faf3b.png'\r\n      }\r\n      let totalDriverRevenue : RevenueModel = {\r\n        name: \"totalDriverRevenue\",\r\n        price:res.totalDriverRevenue,\r\n        backgroundColor:'#f542d4',   \r\n        icon : '61d30e86-ed85-4181-9ed3-00171b0faf3b.png'\r\n      }\r\n      let totalOrderPrices : RevenueModel = {\r\n        name: \"totalOrderPrices\",\r\n        price:res.totalOrderPrices,\r\n        backgroundColor:'#f542d4',\r\n        icon : '61d30e86-ed85-4181-9ed3-00171b0faf3b.png'\r\n      }\r\n      let totalDeliveredPrices : RevenueModel = {\r\n        name: \"totalDeliveredPrices\",\r\n        price:res.totalDeliveredPrices,\r\n        backgroundColor:'#4287f5',  \r\n        icon : '61d30e86-ed85-4181-9ed3-00171b0faf3b.png'\r\n      }\r\n      this.cards=[];\r\n      this.cards.push(totalClientRevenue);\r\n      this.cards.push(totalCompanyRevenue);\r\n      this.cards.push(totalDriverRevenue);\r\n      this.cards.push(totalOrderPrices);\r\n      this.cards.push(totalDeliveredPrices);\r\n      this.isLoading=false;\r\n    }, error => {\r\n     \r\n      this.notification.showNotification(error.error,''); this.isLoading=false;\r\n    });\r\n\r\n  }\r\n  onPageChanged(page: PageEvent) {\r\n    this.pageSize = page.pageSize;\r\n    this.pageNumber = page.pageIndex + 1;\r\n    this.paginator.pageSize = page.pageSize;\r\n    this.getAllOrders(page.pageSize, page.pageIndex + 1);\r\n  }\r\n  filterOrders() {\r\n    this.getAllOrders(this.pageSize, this.pageNumber);\r\n  }\r\n\r\n\r\n\r\n\r\n  navigateToDetails(id) {\r\n    this.router.navigate([`/forms/order-details/${id}`]);\r\n  }\r\n  navigateToUpdate(id) {\r\n    this.router.navigate([`/forms/order-update/${id}`]);\r\n  }\r\n  navigateToCreate() {\r\n    this.router.navigate([`/forms/order-create`]);\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3QvY2xpZW50LWJyYW5kLWxpc3QvY2xpZW50LWJyYW5kLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'employeeCreate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'employeesManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'ListEmployees'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'employeesManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n                            <button routerLink=\\\"/forms/employee-create\\\" class=\\\"btn btn-primary\\\" color=\\\"primary\\\"\\r\\n                                mat-raised-button type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' |\\r\\n                                translate}} \\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                            (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\"\\r\\n                                [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                            </app-dynamic-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'promoCodesList'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'promoCodesManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n                            <button routerLink=\\\"/forms/promo-code-create\\\" class=\\\"btn btn-primary\\\" color=\\\"primary\\\"\\r\\n                                mat-raised-button type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' |\\r\\n                                translate}} \\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                            (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\"\\r\\n                                [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                            </app-dynamic-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3VwZGF0ZS9wcm9tby1jb2RlLXVwZGF0ZS9wcm9tby1jb2RlLXVwZGF0ZS5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { Controllers } from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { RoleTypes } from '../../../shared/enums/enums';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EmployeeUpdateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-employee-update',\r\n  templateUrl: './employee-update.component.html',\r\n  styleUrls: ['./employee-update.component.css'],\r\n})\r\nexport class EmployeeUpdateComponent implements OnInit {\r\n  public baseStatuses = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public roles: FieldListData[] = [];\r\n  public employeeId: number;\r\n  public activeTab = 0;\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((params) => {\r\n      this.employeeId = params.id;\r\n      this.baseStatuses = [\r\n        { value: true, viewValueEn: 'Active', viewValueAr: 'نشط' },\r\n        { value: false, viewValueEn: 'Not Active', viewValueAr: 'غير نشط' },\r\n      ];\r\n      this.getAsync(this.employeeId);\r\n    });\r\n    this.spinner.show();\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.User, id).subscribe((res) => {\r\n      console.log(res);\r\n      this.getFieldsData(res);\r\n    });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data['role'] = this.userRolesEnum.Merchant;\r\n    event.data.id = Number(this.employeeId);\r\n    this.baseService.editItem(Controllers.User, event.data).subscribe(\r\n      (res) => {\r\n        this.spinner.hide();\r\n        this.notification.showNotification(res, 'success');\r\n        this.router.navigate(['/forms/employee-list']);\r\n      },\r\n      (error) => {\r\n        this.spinner.hide();\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n    );\r\n  }\r\n\r\n  public getFieldsData(client: any) {\r\n    this.baseService.getEmployeeRoles().subscribe((res) => {\r\n      this.roles = res;\r\n      this.dynamicFormInput = EmployeeUpdateForm;\r\n\r\n      this.dynamicFormInput.formFields.forEach((field) => {\r\n        field.value = client[field.fieldId];\r\n      });\r\n      let statusField = this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == 'isActive'\r\n      );\r\n\r\n      statusField.data = this.baseStatuses;\r\n      this.isLoading = false;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { ListActionTypeEnum } from '../../../shared/enums/enums';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { PromoCodeList, PromoCodeSearchForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-promo-code-list',\r\n  templateUrl: './promo-code-list.component.html',\r\n  styleUrls: ['./promo-code-list.component.css'],\r\n})\r\nexport class PromoCodeListComponent implements OnInit {\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private router: Router,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService\r\n  ) {}\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public expiryTypes: FieldListData[] = [\r\n    { value: 1, viewValueEn: 'Date', viewValueAr: 'التاريخ' },\r\n    { value: 2, viewValueEn: 'Orders Limit', viewValueAr: 'عدد الطلبات' },\r\n  ];\r\n  public promoCodesList: any[] = [];\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFormData();\r\n    this.getListSettings();\r\n  }\r\n  public getFormData() {\r\n    this.dynamicFormInput = PromoCodeSearchForm;\r\n    let expiryTypeField = this.dynamicFormInput.formFields.find(\r\n      (x) => x.fieldId == 'expiryType'\r\n    );\r\n    expiryTypeField.data = this.expiryTypes;\r\n  }\r\n  public getListSettings() {\r\n    this.dynamicListInput.columns = PromoCodeList;\r\n    this.getListData();\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.PromoCode, Actions.GetList, request)\r\n      .subscribe((res) => {\r\n        this.promoCodesList = res.entities;\r\n        this.dynamicListInput.data = this.promoCodesList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    this.baseService\r\n      .postItem(Controllers.PromoCode, Actions.GetList, event.data)\r\n      .subscribe((res) => {\r\n        this.promoCodesList = res.entities;\r\n        this.dynamicListInput.data = this.promoCodesList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n          width: '400px',\r\n          data: {\r\n            title: 'confirm',\r\n            content: 'confirmDeleteMessage',\r\n          },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((res) => {\r\n          if (res) {\r\n            this.spinner.show();\r\n            this.baseService\r\n              .removeItemById(Controllers.PromoCode, event.entityId)\r\n              .subscribe(\r\n                (res) => {\r\n                  this.getListData(this.pageSize, this.pageNumber);\r\n                  this.isLoading = false;\r\n                  this.spinner.hide();\r\n                  this.notification.showNotification(\r\n                    'deletePromoCodeSuccess',\r\n                    'success'\r\n                  );\r\n                },\r\n                (error) => {\r\n                  if (error.status === 400) {\r\n                    this.notification.showNotification(error.error, 'danger');\r\n                  } else {\r\n                    this.notification.showNotification(\r\n                      'somethingWentWrong',\r\n                      'danger'\r\n                    );\r\n                  }\r\n                  this.spinner.hide();\r\n                }\r\n              );\r\n          }\r\n        });\r\n\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([`/forms/promo-code-update/${event.entityId}`]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/promo-code-details/${event.entityId}`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'postorderUpdate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'ordersManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [isUpdate]=\\\"true\\\" [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3QvZW1wbG95ZWUtbGlzdC9lbXBsb3llZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\n\r\n@Component({\r\n  selector: 'app-client-details',\r\n  templateUrl: './client-details.component.html',\r\n  styleUrls: ['./client-details.component.css']\r\n})\r\nexport class ClientDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) { }\r\n  public clientId: number;\r\n  public activeTab=0;\r\n  public client: any;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.clientId = params.id;\r\n      this.activeTab = params.activeTab;\r\n      this.getAsync(this.clientId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getClientById(Controllers.User, id).subscribe(res => {\r\n      console.log('Merchant',res);\r\n      this.client = res;\r\n      this.detailsInput.dataObject = this.client;\r\n      this.isLoading = false;\r\n    })\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'createEndUser' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'endUsersManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'promoCodeCreate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'promoCodesManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { Moment } from 'moment';\r\nimport * as moment from 'moment';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\n\r\n@Injectable()\r\nexport class MomentUtcDateAdapter extends MomentDateAdapter {\r\n\r\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) dateLocale: string) {\r\n    super(dateLocale);\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number): Moment {\r\n    // Moment.js will create an invalid date if any of the components are out of bounds, but we\r\n    // explicitly check each case so we can throw more descriptive errors.\r\n    if (month < 0 || month > 11) {\r\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    let result = moment.utc({ year, month, date }).locale(this.locale);\r\n\r\n    // If the result isn't valid, the date must have been out of bounds for this month.\r\n    if (!result.isValid()) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9kcml2ZXItY3JlYXRlL2RyaXZlci1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvY2xpZW50LWRldGFpbHMvY2xpZW50LWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { FieldListData } from \"../../../shared/models/dynamic-form-field\";\r\nimport { DynamicDataService } from \"../../../shared/services/dynamic-form.service\";\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from \"../../../shared/global-variables/api-config\";\r\nimport { BaseService } from \"../../../shared/services/base.service\";\r\nimport { DynamicFormInput } from \"../../../shared/models/dynamic-form-input\";\r\nimport { DynamicFormOutput } from \"../../../shared/models/dynamic-form-output.model\";\r\nimport { NotificationService } from \"../../../shared/services/notification.service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { AreaGroupFormUpdate } from \"../../dynamic-data\";\r\n\r\n@Component({\r\n  selector: \"app-areagroup-update\",\r\n  templateUrl: \"./areagroup-update.component.html\",\r\n  styleUrls: [\"./areagroup-update.component.css\"],\r\n})\r\nexport class AreaGroupUpdateComponent implements OnInit {\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dynamicService: DynamicDataService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public areagroupId: number;\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe((params) => {\r\n      this.areagroupId = params.id;\r\n\r\n      this.getAsync(this.areagroupId);\r\n    });\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.AreaGroup, id).subscribe((res) => {\r\n      this.getFieldsData(res);\r\n    });\r\n  }\r\n\r\n  public getFieldsData(city: any) {\r\n    this.dynamicFormInput = AreaGroupFormUpdate;\r\n    this.dynamicFormInput.formFields.forEach((field) => {\r\n      field.value = city[field.fieldId];\r\n    });\r\n    this.spinner.hide();\r\n    this.isLoading = false;\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.areagroupId);\r\n    this.baseService.editItem(Controllers.AreaGroup, event.data).subscribe(\r\n      (res) => {\r\n        this.spinner.hide();\r\n        this.notification.showNotification(res, \"success\");\r\n        this.router.navigate([\"/forms/areagroup-list\"]);\r\n      },\r\n      (error) => {\r\n        if (error.status === 400) {\r\n          this.notification.showNotification(error.error, \"danger\");\r\n        } else {\r\n          this.notification.showNotification(\"somethingWentWrong\", \"danger\");\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3QvcmVjb3JkLWxpc3QvcmVjb3JkLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { Directive, ElementRef, Input, TemplateRef, ɵɵdefineInjectable, Injectable, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, NgZone, Optional, Inject, Output, ViewChild, HostListener, InjectionToken, forwardRef, Attribute, ChangeDetectorRef, HostBinding, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { takeUntil, auditTime, startWith, tap, debounceTime, filter, map } from 'rxjs/operators';\nimport { animationFrameScheduler, asapScheduler, Subject, fromEvent, merge } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"content\"];\nconst _c1 = [\"scroll\"];\nconst _c2 = [\"padding\"];\nconst _c3 = function (a0) { return { searchTerm: a0 }; };\nfunction NgDropdownPanelComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵelementContainer(1, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.headerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r0.filterValue));\n} }\nfunction NgDropdownPanelComponent_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelementContainer(1, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.footerTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r4.filterValue));\n} }\nconst _c4 = [\"*\"];\nconst _c5 = [\"searchInput\"];\nfunction NgSelectComponent_ng_container_4_div_1_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function NgSelectComponent_ng_container_4_div_1_ng_template_1_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const item_r7 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.unselect(item_r7); });\n    ɵngcc0.ɵɵtext(1, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(2, \"span\", 16);\n} if (rf & 2) {\n    const item_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngItemLabel\", item_r7.label)(\"escape\", ctx_r9.escapeHTML);\n} }\nfunction NgSelectComponent_ng_container_4_div_1_ng_template_3_Template(rf, ctx) { }\nconst _c6 = function (a0, a1, a2) { return { item: a0, clear: a1, label: a2 }; };\nfunction NgSelectComponent_ng_container_4_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_container_4_div_1_ng_template_1_Template, 3, 2, \"ng-template\", null, 13, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_container_4_div_1_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    const _r8 = ɵngcc0.ɵɵreference(2);\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ng-value-disabled\", item_r7.disabled);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.labelTemplate || _r8)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(4, _c6, item_r7.value, ctx_r6.clearItem, item_r7.label));\n} }\nfunction NgSelectComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_container_4_div_1_Template, 4, 8, \"div\", 11);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.selectedItems)(\"ngForTrackBy\", ctx_r0.trackByOption);\n} }\nfunction NgSelectComponent_5_ng_template_0_Template(rf, ctx) { }\nconst _c7 = function (a0, a1) { return { items: a0, clear: a1 }; };\nfunction NgSelectComponent_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgSelectComponent_5_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.multiLabelTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c7, ctx_r1.selectedValues, ctx_r1.clearItem));\n} }\nfunction NgSelectComponent_ng_container_9_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 19);\n} }\nfunction NgSelectComponent_ng_container_9_ng_template_3_Template(rf, ctx) { }\nfunction NgSelectComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_container_9_ng_template_1_Template, 1, 0, \"ng-template\", null, 17, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_container_9_ng_template_3_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const _r16 = ɵngcc0.ɵɵreference(2);\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.loadingSpinnerTemplate || _r16);\n} }\nfunction NgSelectComponent_span_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 20);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 21);\n    ɵngcc0.ɵɵtext(2, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx_r4.clearAllText);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 27);\n} if (rf & 2) {\n    const item_r24 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r26 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngItemLabel\", item_r24.label)(\"escape\", ctx_r26.escapeHTML);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_3_Template(rf, ctx) { }\nconst _c8 = function (a0, a1, a2, a3) { return { item: a0, item$: a1, index: a2, searchTerm: a3 }; };\nfunction NgSelectComponent_ng_dropdown_panel_13_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25);\n    ɵngcc0.ɵɵlistener(\"click\", function NgSelectComponent_ng_dropdown_panel_13_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const item_r24 = ctx.$implicit; const ctx_r29 = ɵngcc0.ɵɵnextContext(2); return ctx_r29.toggleItem(item_r24); })(\"mouseover\", function NgSelectComponent_ng_dropdown_panel_13_div_2_Template_div_mouseover_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const item_r24 = ctx.$implicit; const ctx_r31 = ɵngcc0.ɵɵnextContext(2); return ctx_r31.onItemHover(item_r24); });\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_1_Template, 1, 2, \"ng-template\", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r24 = ctx.$implicit;\n    const _r25 = ɵngcc0.ɵɵreference(2);\n    const ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ng-option-disabled\", item_r24.disabled)(\"ng-option-selected\", item_r24.selected)(\"ng-optgroup\", item_r24.children)(\"ng-option\", !item_r24.children)(\"ng-option-child\", !!item_r24.parent)(\"ng-option-marked\", item_r24 === ctx_r19.itemsList.markedItem);\n    ɵngcc0.ɵɵattribute(\"role\", item_r24.children ? \"group\" : \"option\")(\"aria-selected\", item_r24.selected)(\"id\", item_r24 == null ? null : item_r24.htmlId);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", item_r24.children ? ctx_r19.optgroupTemplate || _r25 : ctx_r19.optionTemplate || _r25)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(17, _c8, item_r24.value, item_r24, item_r24.index, ctx_r19.searchTerm));\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵelementStart(1, \"span\", 30);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r33 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r33.addTagText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\\\"\", ctx_r33.searchTerm, \"\\\"\");\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_3_Template(rf, ctx) { }\nfunction NgSelectComponent_ng_dropdown_panel_13_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r36 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵlistener(\"mouseover\", function NgSelectComponent_ng_dropdown_panel_13_div_3_Template_div_mouseover_0_listener() { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r35 = ɵngcc0.ɵɵnextContext(2); return ctx_r35.itemsList.unmarkItem(); })(\"click\", function NgSelectComponent_ng_dropdown_panel_13_div_3_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r37 = ɵngcc0.ɵɵnextContext(2); return ctx_r37.selectTag(); });\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_1_Template, 4, 2, \"ng-template\", null, 29, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r32 = ɵngcc0.ɵɵreference(2);\n    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"ng-option-marked\", !ctx_r20.itemsList.markedItem);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r20.tagTemplate || _r32)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(4, _c3, ctx_r20.searchTerm));\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r39 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r39.notFoundText);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_3_Template(rf, ctx) { }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_1_Template, 2, 1, \"ng-template\", null, 31, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const _r38 = ɵngcc0.ɵɵreference(2);\n    const ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r21.notFoundTemplate || _r38)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r21.searchTerm));\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r42 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r42.typeToSearchText);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_3_Template(rf, ctx) { }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_1_Template, 2, 1, \"ng-template\", null, 33, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_3_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const _r41 = ɵngcc0.ɵɵreference(2);\n    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r22.typeToSearchTemplate || _r41);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r45 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r45.loadingText);\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_3_Template(rf, ctx) { }\nfunction NgSelectComponent_ng_dropdown_panel_13_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_1_Template, 2, 1, \"ng-template\", null, 34, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_3_Template, 0, 0, \"ng-template\", 14);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const _r44 = ɵngcc0.ɵɵreference(2);\n    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r23.loadingTextTemplate || _r44)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r23.searchTerm));\n} }\nfunction NgSelectComponent_ng_dropdown_panel_13_Template(rf, ctx) { if (rf & 1) {\n    const _r48 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"ng-dropdown-panel\", 22);\n    ɵngcc0.ɵɵlistener(\"update\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_update_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r48); const ctx_r47 = ɵngcc0.ɵɵnextContext(); return ctx_r47.viewPortItems = $event; })(\"scroll\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_scroll_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r48); const ctx_r49 = ɵngcc0.ɵɵnextContext(); return ctx_r49.scroll.emit($event); })(\"scrollToEnd\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_scrollToEnd_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r48); const ctx_r50 = ɵngcc0.ɵɵnextContext(); return ctx_r50.scrollToEnd.emit($event); })(\"outsideClick\", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_outsideClick_0_listener() { ɵngcc0.ɵɵrestoreView(_r48); const ctx_r51 = ɵngcc0.ɵɵnextContext(); return ctx_r51.close(); });\n    ɵngcc0.ɵɵelementContainerStart(1);\n    ɵngcc0.ɵɵtemplate(2, NgSelectComponent_ng_dropdown_panel_13_div_2_Template, 4, 22, \"div\", 23);\n    ɵngcc0.ɵɵtemplate(3, NgSelectComponent_ng_dropdown_panel_13_div_3_Template, 4, 6, \"div\", 24);\n    ɵngcc0.ɵɵelementContainerEnd();\n    ɵngcc0.ɵɵtemplate(4, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_Template, 4, 4, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(5, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_Template, 4, 1, \"ng-container\", 3);\n    ɵngcc0.ɵɵtemplate(6, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_Template, 4, 4, \"ng-container\", 3);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ng-select-multiple\", ctx_r5.multiple);\n    ɵngcc0.ɵɵproperty(\"virtualScroll\", ctx_r5.virtualScroll)(\"bufferAmount\", ctx_r5.bufferAmount)(\"appendTo\", ctx_r5.appendTo)(\"position\", ctx_r5.dropdownPosition)(\"headerTemplate\", ctx_r5.headerTemplate)(\"footerTemplate\", ctx_r5.footerTemplate)(\"filterValue\", ctx_r5.searchTerm)(\"items\", ctx_r5.itemsList.filteredItems)(\"markedItem\", ctx_r5.itemsList.markedItem)(\"ngClass\", ctx_r5.appendTo ? ctx_r5.classes : null)(\"id\", ctx_r5.dropdownId);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r5.viewPortItems)(\"ngForTrackBy\", ctx_r5.trackByOption);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.showAddTag);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.showNoItemsFound());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.showTypeToSearch());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.loading && ctx_r5.itemsList.filteredItems.length === 0);\n} }\nconst unescapedHTMLExp = /[&<>\"']/g;\nconst hasUnescapedHTMLExp = RegExp(unescapedHTMLExp.source);\nconst htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#39;'\n};\nfunction escapeHTML(string) {\n    return (string && hasUnescapedHTMLExp.test(string)) ?\n        string.replace(unescapedHTMLExp, chr => htmlEscapes[chr]) :\n        string;\n}\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\nfunction isObject(value) {\n    return typeof value === 'object' && isDefined(value);\n}\nfunction isPromise(value) {\n    return value instanceof Promise;\n}\nfunction isFunction(value) {\n    return value instanceof Function;\n}\n\nclass NgItemLabelDirective {\n    constructor(element) {\n        this.element = element;\n        this.escape = true;\n    }\n    ngOnChanges(changes) {\n        this.element.nativeElement.innerHTML = this.escape ?\n            escapeHTML(this.ngItemLabel) :\n            this.ngItemLabel;\n    }\n}\nNgItemLabelDirective.ɵfac = function NgItemLabelDirective_Factory(t) { return new (t || NgItemLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgItemLabelDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgItemLabelDirective, selectors: [[\"\", \"ngItemLabel\", \"\"]], inputs: { escape: \"escape\", ngItemLabel: \"ngItemLabel\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nNgItemLabelDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgItemLabelDirective.propDecorators = {\n    ngItemLabel: [{ type: Input }],\n    escape: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgItemLabelDirective, [{\n        type: Directive,\n        args: [{ selector: '[ngItemLabel]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { escape: [{\n            type: Input\n        }], ngItemLabel: [{\n            type: Input\n        }] }); })();\nclass NgOptionTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgOptionTemplateDirective.ɵfac = function NgOptionTemplateDirective_Factory(t) { return new (t || NgOptionTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgOptionTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgOptionTemplateDirective, selectors: [[\"\", \"ng-option-tmp\", \"\"]] });\nNgOptionTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOptionTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-option-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgOptgroupTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgOptgroupTemplateDirective.ɵfac = function NgOptgroupTemplateDirective_Factory(t) { return new (t || NgOptgroupTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgOptgroupTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgOptgroupTemplateDirective, selectors: [[\"\", \"ng-optgroup-tmp\", \"\"]] });\nNgOptgroupTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOptgroupTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-optgroup-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgLabelTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgLabelTemplateDirective.ɵfac = function NgLabelTemplateDirective_Factory(t) { return new (t || NgLabelTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgLabelTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgLabelTemplateDirective, selectors: [[\"\", \"ng-label-tmp\", \"\"]] });\nNgLabelTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgLabelTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-label-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgMultiLabelTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgMultiLabelTemplateDirective.ɵfac = function NgMultiLabelTemplateDirective_Factory(t) { return new (t || NgMultiLabelTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgMultiLabelTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgMultiLabelTemplateDirective, selectors: [[\"\", \"ng-multi-label-tmp\", \"\"]] });\nNgMultiLabelTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgMultiLabelTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-multi-label-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgHeaderTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgHeaderTemplateDirective.ɵfac = function NgHeaderTemplateDirective_Factory(t) { return new (t || NgHeaderTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgHeaderTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgHeaderTemplateDirective, selectors: [[\"\", \"ng-header-tmp\", \"\"]] });\nNgHeaderTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgHeaderTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-header-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgFooterTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgFooterTemplateDirective.ɵfac = function NgFooterTemplateDirective_Factory(t) { return new (t || NgFooterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgFooterTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgFooterTemplateDirective, selectors: [[\"\", \"ng-footer-tmp\", \"\"]] });\nNgFooterTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgFooterTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-footer-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgNotFoundTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgNotFoundTemplateDirective.ɵfac = function NgNotFoundTemplateDirective_Factory(t) { return new (t || NgNotFoundTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgNotFoundTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgNotFoundTemplateDirective, selectors: [[\"\", \"ng-notfound-tmp\", \"\"]] });\nNgNotFoundTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgNotFoundTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-notfound-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgTypeToSearchTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgTypeToSearchTemplateDirective.ɵfac = function NgTypeToSearchTemplateDirective_Factory(t) { return new (t || NgTypeToSearchTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgTypeToSearchTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgTypeToSearchTemplateDirective, selectors: [[\"\", \"ng-typetosearch-tmp\", \"\"]] });\nNgTypeToSearchTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgTypeToSearchTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-typetosearch-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgLoadingTextTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgLoadingTextTemplateDirective.ɵfac = function NgLoadingTextTemplateDirective_Factory(t) { return new (t || NgLoadingTextTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgLoadingTextTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgLoadingTextTemplateDirective, selectors: [[\"\", \"ng-loadingtext-tmp\", \"\"]] });\nNgLoadingTextTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgLoadingTextTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-loadingtext-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgTagTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgTagTemplateDirective.ɵfac = function NgTagTemplateDirective_Factory(t) { return new (t || NgTagTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgTagTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgTagTemplateDirective, selectors: [[\"\", \"ng-tag-tmp\", \"\"]] });\nNgTagTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgTagTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-tag-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nclass NgLoadingSpinnerTemplateDirective {\n    constructor(template) {\n        this.template = template;\n    }\n}\nNgLoadingSpinnerTemplateDirective.ɵfac = function NgLoadingSpinnerTemplateDirective_Factory(t) { return new (t || NgLoadingSpinnerTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNgLoadingSpinnerTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgLoadingSpinnerTemplateDirective, selectors: [[\"\", \"ng-loadingspinner-tmp\", \"\"]] });\nNgLoadingSpinnerTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgLoadingSpinnerTemplateDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng-loadingspinner-tmp]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\nclass ConsoleService {\n    warn(message) {\n        console.warn(message);\n    }\n}\nConsoleService.ɵfac = function ConsoleService_Factory(t) { return new (t || ConsoleService)(); };\nConsoleService.ɵprov = ɵɵdefineInjectable({ factory: function ConsoleService_Factory() { return new ConsoleService(); }, token: ConsoleService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ConsoleService, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\nfunction newId() {\n    // First character is an 'a', it's good practice to tag id to begin with a letter\n    return 'axxxxxxxxxxx'.replace(/[x]/g, function (_) {\n        // tslint:disable-next-line:no-bitwise\n        const val = Math.random() * 16 | 0;\n        return val.toString(16);\n    });\n}\n\nconst diacritics = {\n    '\\u24B6': 'A',\n    '\\uFF21': 'A',\n    '\\u00C0': 'A',\n    '\\u00C1': 'A',\n    '\\u00C2': 'A',\n    '\\u1EA6': 'A',\n    '\\u1EA4': 'A',\n    '\\u1EAA': 'A',\n    '\\u1EA8': 'A',\n    '\\u00C3': 'A',\n    '\\u0100': 'A',\n    '\\u0102': 'A',\n    '\\u1EB0': 'A',\n    '\\u1EAE': 'A',\n    '\\u1EB4': 'A',\n    '\\u1EB2': 'A',\n    '\\u0226': 'A',\n    '\\u01E0': 'A',\n    '\\u00C4': 'A',\n    '\\u01DE': 'A',\n    '\\u1EA2': 'A',\n    '\\u00C5': 'A',\n    '\\u01FA': 'A',\n    '\\u01CD': 'A',\n    '\\u0200': 'A',\n    '\\u0202': 'A',\n    '\\u1EA0': 'A',\n    '\\u1EAC': 'A',\n    '\\u1EB6': 'A',\n    '\\u1E00': 'A',\n    '\\u0104': 'A',\n    '\\u023A': 'A',\n    '\\u2C6F': 'A',\n    '\\uA732': 'AA',\n    '\\u00C6': 'AE',\n    '\\u01FC': 'AE',\n    '\\u01E2': 'AE',\n    '\\uA734': 'AO',\n    '\\uA736': 'AU',\n    '\\uA738': 'AV',\n    '\\uA73A': 'AV',\n    '\\uA73C': 'AY',\n    '\\u24B7': 'B',\n    '\\uFF22': 'B',\n    '\\u1E02': 'B',\n    '\\u1E04': 'B',\n    '\\u1E06': 'B',\n    '\\u0243': 'B',\n    '\\u0182': 'B',\n    '\\u0181': 'B',\n    '\\u24B8': 'C',\n    '\\uFF23': 'C',\n    '\\u0106': 'C',\n    '\\u0108': 'C',\n    '\\u010A': 'C',\n    '\\u010C': 'C',\n    '\\u00C7': 'C',\n    '\\u1E08': 'C',\n    '\\u0187': 'C',\n    '\\u023B': 'C',\n    '\\uA73E': 'C',\n    '\\u24B9': 'D',\n    '\\uFF24': 'D',\n    '\\u1E0A': 'D',\n    '\\u010E': 'D',\n    '\\u1E0C': 'D',\n    '\\u1E10': 'D',\n    '\\u1E12': 'D',\n    '\\u1E0E': 'D',\n    '\\u0110': 'D',\n    '\\u018B': 'D',\n    '\\u018A': 'D',\n    '\\u0189': 'D',\n    '\\uA779': 'D',\n    '\\u01F1': 'DZ',\n    '\\u01C4': 'DZ',\n    '\\u01F2': 'Dz',\n    '\\u01C5': 'Dz',\n    '\\u24BA': 'E',\n    '\\uFF25': 'E',\n    '\\u00C8': 'E',\n    '\\u00C9': 'E',\n    '\\u00CA': 'E',\n    '\\u1EC0': 'E',\n    '\\u1EBE': 'E',\n    '\\u1EC4': 'E',\n    '\\u1EC2': 'E',\n    '\\u1EBC': 'E',\n    '\\u0112': 'E',\n    '\\u1E14': 'E',\n    '\\u1E16': 'E',\n    '\\u0114': 'E',\n    '\\u0116': 'E',\n    '\\u00CB': 'E',\n    '\\u1EBA': 'E',\n    '\\u011A': 'E',\n    '\\u0204': 'E',\n    '\\u0206': 'E',\n    '\\u1EB8': 'E',\n    '\\u1EC6': 'E',\n    '\\u0228': 'E',\n    '\\u1E1C': 'E',\n    '\\u0118': 'E',\n    '\\u1E18': 'E',\n    '\\u1E1A': 'E',\n    '\\u0190': 'E',\n    '\\u018E': 'E',\n    '\\u24BB': 'F',\n    '\\uFF26': 'F',\n    '\\u1E1E': 'F',\n    '\\u0191': 'F',\n    '\\uA77B': 'F',\n    '\\u24BC': 'G',\n    '\\uFF27': 'G',\n    '\\u01F4': 'G',\n    '\\u011C': 'G',\n    '\\u1E20': 'G',\n    '\\u011E': 'G',\n    '\\u0120': 'G',\n    '\\u01E6': 'G',\n    '\\u0122': 'G',\n    '\\u01E4': 'G',\n    '\\u0193': 'G',\n    '\\uA7A0': 'G',\n    '\\uA77D': 'G',\n    '\\uA77E': 'G',\n    '\\u24BD': 'H',\n    '\\uFF28': 'H',\n    '\\u0124': 'H',\n    '\\u1E22': 'H',\n    '\\u1E26': 'H',\n    '\\u021E': 'H',\n    '\\u1E24': 'H',\n    '\\u1E28': 'H',\n    '\\u1E2A': 'H',\n    '\\u0126': 'H',\n    '\\u2C67': 'H',\n    '\\u2C75': 'H',\n    '\\uA78D': 'H',\n    '\\u24BE': 'I',\n    '\\uFF29': 'I',\n    '\\u00CC': 'I',\n    '\\u00CD': 'I',\n    '\\u00CE': 'I',\n    '\\u0128': 'I',\n    '\\u012A': 'I',\n    '\\u012C': 'I',\n    '\\u0130': 'I',\n    '\\u00CF': 'I',\n    '\\u1E2E': 'I',\n    '\\u1EC8': 'I',\n    '\\u01CF': 'I',\n    '\\u0208': 'I',\n    '\\u020A': 'I',\n    '\\u1ECA': 'I',\n    '\\u012E': 'I',\n    '\\u1E2C': 'I',\n    '\\u0197': 'I',\n    '\\u24BF': 'J',\n    '\\uFF2A': 'J',\n    '\\u0134': 'J',\n    '\\u0248': 'J',\n    '\\u24C0': 'K',\n    '\\uFF2B': 'K',\n    '\\u1E30': 'K',\n    '\\u01E8': 'K',\n    '\\u1E32': 'K',\n    '\\u0136': 'K',\n    '\\u1E34': 'K',\n    '\\u0198': 'K',\n    '\\u2C69': 'K',\n    '\\uA740': 'K',\n    '\\uA742': 'K',\n    '\\uA744': 'K',\n    '\\uA7A2': 'K',\n    '\\u24C1': 'L',\n    '\\uFF2C': 'L',\n    '\\u013F': 'L',\n    '\\u0139': 'L',\n    '\\u013D': 'L',\n    '\\u1E36': 'L',\n    '\\u1E38': 'L',\n    '\\u013B': 'L',\n    '\\u1E3C': 'L',\n    '\\u1E3A': 'L',\n    '\\u0141': 'L',\n    '\\u023D': 'L',\n    '\\u2C62': 'L',\n    '\\u2C60': 'L',\n    '\\uA748': 'L',\n    '\\uA746': 'L',\n    '\\uA780': 'L',\n    '\\u01C7': 'LJ',\n    '\\u01C8': 'Lj',\n    '\\u24C2': 'M',\n    '\\uFF2D': 'M',\n    '\\u1E3E': 'M',\n    '\\u1E40': 'M',\n    '\\u1E42': 'M',\n    '\\u2C6E': 'M',\n    '\\u019C': 'M',\n    '\\u24C3': 'N',\n    '\\uFF2E': 'N',\n    '\\u01F8': 'N',\n    '\\u0143': 'N',\n    '\\u00D1': 'N',\n    '\\u1E44': 'N',\n    '\\u0147': 'N',\n    '\\u1E46': 'N',\n    '\\u0145': 'N',\n    '\\u1E4A': 'N',\n    '\\u1E48': 'N',\n    '\\u0220': 'N',\n    '\\u019D': 'N',\n    '\\uA790': 'N',\n    '\\uA7A4': 'N',\n    '\\u01CA': 'NJ',\n    '\\u01CB': 'Nj',\n    '\\u24C4': 'O',\n    '\\uFF2F': 'O',\n    '\\u00D2': 'O',\n    '\\u00D3': 'O',\n    '\\u00D4': 'O',\n    '\\u1ED2': 'O',\n    '\\u1ED0': 'O',\n    '\\u1ED6': 'O',\n    '\\u1ED4': 'O',\n    '\\u00D5': 'O',\n    '\\u1E4C': 'O',\n    '\\u022C': 'O',\n    '\\u1E4E': 'O',\n    '\\u014C': 'O',\n    '\\u1E50': 'O',\n    '\\u1E52': 'O',\n    '\\u014E': 'O',\n    '\\u022E': 'O',\n    '\\u0230': 'O',\n    '\\u00D6': 'O',\n    '\\u022A': 'O',\n    '\\u1ECE': 'O',\n    '\\u0150': 'O',\n    '\\u01D1': 'O',\n    '\\u020C': 'O',\n    '\\u020E': 'O',\n    '\\u01A0': 'O',\n    '\\u1EDC': 'O',\n    '\\u1EDA': 'O',\n    '\\u1EE0': 'O',\n    '\\u1EDE': 'O',\n    '\\u1EE2': 'O',\n    '\\u1ECC': 'O',\n    '\\u1ED8': 'O',\n    '\\u01EA': 'O',\n    '\\u01EC': 'O',\n    '\\u00D8': 'O',\n    '\\u01FE': 'O',\n    '\\u0186': 'O',\n    '\\u019F': 'O',\n    '\\uA74A': 'O',\n    '\\uA74C': 'O',\n    '\\u01A2': 'OI',\n    '\\uA74E': 'OO',\n    '\\u0222': 'OU',\n    '\\u24C5': 'P',\n    '\\uFF30': 'P',\n    '\\u1E54': 'P',\n    '\\u1E56': 'P',\n    '\\u01A4': 'P',\n    '\\u2C63': 'P',\n    '\\uA750': 'P',\n    '\\uA752': 'P',\n    '\\uA754': 'P',\n    '\\u24C6': 'Q',\n    '\\uFF31': 'Q',\n    '\\uA756': 'Q',\n    '\\uA758': 'Q',\n    '\\u024A': 'Q',\n    '\\u24C7': 'R',\n    '\\uFF32': 'R',\n    '\\u0154': 'R',\n    '\\u1E58': 'R',\n    '\\u0158': 'R',\n    '\\u0210': 'R',\n    '\\u0212': 'R',\n    '\\u1E5A': 'R',\n    '\\u1E5C': 'R',\n    '\\u0156': 'R',\n    '\\u1E5E': 'R',\n    '\\u024C': 'R',\n    '\\u2C64': 'R',\n    '\\uA75A': 'R',\n    '\\uA7A6': 'R',\n    '\\uA782': 'R',\n    '\\u24C8': 'S',\n    '\\uFF33': 'S',\n    '\\u1E9E': 'S',\n    '\\u015A': 'S',\n    '\\u1E64': 'S',\n    '\\u015C': 'S',\n    '\\u1E60': 'S',\n    '\\u0160': 'S',\n    '\\u1E66': 'S',\n    '\\u1E62': 'S',\n    '\\u1E68': 'S',\n    '\\u0218': 'S',\n    '\\u015E': 'S',\n    '\\u2C7E': 'S',\n    '\\uA7A8': 'S',\n    '\\uA784': 'S',\n    '\\u24C9': 'T',\n    '\\uFF34': 'T',\n    '\\u1E6A': 'T',\n    '\\u0164': 'T',\n    '\\u1E6C': 'T',\n    '\\u021A': 'T',\n    '\\u0162': 'T',\n    '\\u1E70': 'T',\n    '\\u1E6E': 'T',\n    '\\u0166': 'T',\n    '\\u01AC': 'T',\n    '\\u01AE': 'T',\n    '\\u023E': 'T',\n    '\\uA786': 'T',\n    '\\uA728': 'TZ',\n    '\\u24CA': 'U',\n    '\\uFF35': 'U',\n    '\\u00D9': 'U',\n    '\\u00DA': 'U',\n    '\\u00DB': 'U',\n    '\\u0168': 'U',\n    '\\u1E78': 'U',\n    '\\u016A': 'U',\n    '\\u1E7A': 'U',\n    '\\u016C': 'U',\n    '\\u00DC': 'U',\n    '\\u01DB': 'U',\n    '\\u01D7': 'U',\n    '\\u01D5': 'U',\n    '\\u01D9': 'U',\n    '\\u1EE6': 'U',\n    '\\u016E': 'U',\n    '\\u0170': 'U',\n    '\\u01D3': 'U',\n    '\\u0214': 'U',\n    '\\u0216': 'U',\n    '\\u01AF': 'U',\n    '\\u1EEA': 'U',\n    '\\u1EE8': 'U',\n    '\\u1EEE': 'U',\n    '\\u1EEC': 'U',\n    '\\u1EF0': 'U',\n    '\\u1EE4': 'U',\n    '\\u1E72': 'U',\n    '\\u0172': 'U',\n    '\\u1E76': 'U',\n    '\\u1E74': 'U',\n    '\\u0244': 'U',\n    '\\u24CB': 'V',\n    '\\uFF36': 'V',\n    '\\u1E7C': 'V',\n    '\\u1E7E': 'V',\n    '\\u01B2': 'V',\n    '\\uA75E': 'V',\n    '\\u0245': 'V',\n    '\\uA760': 'VY',\n    '\\u24CC': 'W',\n    '\\uFF37': 'W',\n    '\\u1E80': 'W',\n    '\\u1E82': 'W',\n    '\\u0174': 'W',\n    '\\u1E86': 'W',\n    '\\u1E84': 'W',\n    '\\u1E88': 'W',\n    '\\u2C72': 'W',\n    '\\u24CD': 'X',\n    '\\uFF38': 'X',\n    '\\u1E8A': 'X',\n    '\\u1E8C': 'X',\n    '\\u24CE': 'Y',\n    '\\uFF39': 'Y',\n    '\\u1EF2': 'Y',\n    '\\u00DD': 'Y',\n    '\\u0176': 'Y',\n    '\\u1EF8': 'Y',\n    '\\u0232': 'Y',\n    '\\u1E8E': 'Y',\n    '\\u0178': 'Y',\n    '\\u1EF6': 'Y',\n    '\\u1EF4': 'Y',\n    '\\u01B3': 'Y',\n    '\\u024E': 'Y',\n    '\\u1EFE': 'Y',\n    '\\u24CF': 'Z',\n    '\\uFF3A': 'Z',\n    '\\u0179': 'Z',\n    '\\u1E90': 'Z',\n    '\\u017B': 'Z',\n    '\\u017D': 'Z',\n    '\\u1E92': 'Z',\n    '\\u1E94': 'Z',\n    '\\u01B5': 'Z',\n    '\\u0224': 'Z',\n    '\\u2C7F': 'Z',\n    '\\u2C6B': 'Z',\n    '\\uA762': 'Z',\n    '\\u24D0': 'a',\n    '\\uFF41': 'a',\n    '\\u1E9A': 'a',\n    '\\u00E0': 'a',\n    '\\u00E1': 'a',\n    '\\u00E2': 'a',\n    '\\u1EA7': 'a',\n    '\\u1EA5': 'a',\n    '\\u1EAB': 'a',\n    '\\u1EA9': 'a',\n    '\\u00E3': 'a',\n    '\\u0101': 'a',\n    '\\u0103': 'a',\n    '\\u1EB1': 'a',\n    '\\u1EAF': 'a',\n    '\\u1EB5': 'a',\n    '\\u1EB3': 'a',\n    '\\u0227': 'a',\n    '\\u01E1': 'a',\n    '\\u00E4': 'a',\n    '\\u01DF': 'a',\n    '\\u1EA3': 'a',\n    '\\u00E5': 'a',\n    '\\u01FB': 'a',\n    '\\u01CE': 'a',\n    '\\u0201': 'a',\n    '\\u0203': 'a',\n    '\\u1EA1': 'a',\n    '\\u1EAD': 'a',\n    '\\u1EB7': 'a',\n    '\\u1E01': 'a',\n    '\\u0105': 'a',\n    '\\u2C65': 'a',\n    '\\u0250': 'a',\n    '\\uA733': 'aa',\n    '\\u00E6': 'ae',\n    '\\u01FD': 'ae',\n    '\\u01E3': 'ae',\n    '\\uA735': 'ao',\n    '\\uA737': 'au',\n    '\\uA739': 'av',\n    '\\uA73B': 'av',\n    '\\uA73D': 'ay',\n    '\\u24D1': 'b',\n    '\\uFF42': 'b',\n    '\\u1E03': 'b',\n    '\\u1E05': 'b',\n    '\\u1E07': 'b',\n    '\\u0180': 'b',\n    '\\u0183': 'b',\n    '\\u0253': 'b',\n    '\\u24D2': 'c',\n    '\\uFF43': 'c',\n    '\\u0107': 'c',\n    '\\u0109': 'c',\n    '\\u010B': 'c',\n    '\\u010D': 'c',\n    '\\u00E7': 'c',\n    '\\u1E09': 'c',\n    '\\u0188': 'c',\n    '\\u023C': 'c',\n    '\\uA73F': 'c',\n    '\\u2184': 'c',\n    '\\u24D3': 'd',\n    '\\uFF44': 'd',\n    '\\u1E0B': 'd',\n    '\\u010F': 'd',\n    '\\u1E0D': 'd',\n    '\\u1E11': 'd',\n    '\\u1E13': 'd',\n    '\\u1E0F': 'd',\n    '\\u0111': 'd',\n    '\\u018C': 'd',\n    '\\u0256': 'd',\n    '\\u0257': 'd',\n    '\\uA77A': 'd',\n    '\\u01F3': 'dz',\n    '\\u01C6': 'dz',\n    '\\u24D4': 'e',\n    '\\uFF45': 'e',\n    '\\u00E8': 'e',\n    '\\u00E9': 'e',\n    '\\u00EA': 'e',\n    '\\u1EC1': 'e',\n    '\\u1EBF': 'e',\n    '\\u1EC5': 'e',\n    '\\u1EC3': 'e',\n    '\\u1EBD': 'e',\n    '\\u0113': 'e',\n    '\\u1E15': 'e',\n    '\\u1E17': 'e',\n    '\\u0115': 'e',\n    '\\u0117': 'e',\n    '\\u00EB': 'e',\n    '\\u1EBB': 'e',\n    '\\u011B': 'e',\n    '\\u0205': 'e',\n    '\\u0207': 'e',\n    '\\u1EB9': 'e',\n    '\\u1EC7': 'e',\n    '\\u0229': 'e',\n    '\\u1E1D': 'e',\n    '\\u0119': 'e',\n    '\\u1E19': 'e',\n    '\\u1E1B': 'e',\n    '\\u0247': 'e',\n    '\\u025B': 'e',\n    '\\u01DD': 'e',\n    '\\u24D5': 'f',\n    '\\uFF46': 'f',\n    '\\u1E1F': 'f',\n    '\\u0192': 'f',\n    '\\uA77C': 'f',\n    '\\u24D6': 'g',\n    '\\uFF47': 'g',\n    '\\u01F5': 'g',\n    '\\u011D': 'g',\n    '\\u1E21': 'g',\n    '\\u011F': 'g',\n    '\\u0121': 'g',\n    '\\u01E7': 'g',\n    '\\u0123': 'g',\n    '\\u01E5': 'g',\n    '\\u0260': 'g',\n    '\\uA7A1': 'g',\n    '\\u1D79': 'g',\n    '\\uA77F': 'g',\n    '\\u24D7': 'h',\n    '\\uFF48': 'h',\n    '\\u0125': 'h',\n    '\\u1E23': 'h',\n    '\\u1E27': 'h',\n    '\\u021F': 'h',\n    '\\u1E25': 'h',\n    '\\u1E29': 'h',\n    '\\u1E2B': 'h',\n    '\\u1E96': 'h',\n    '\\u0127': 'h',\n    '\\u2C68': 'h',\n    '\\u2C76': 'h',\n    '\\u0265': 'h',\n    '\\u0195': 'hv',\n    '\\u24D8': 'i',\n    '\\uFF49': 'i',\n    '\\u00EC': 'i',\n    '\\u00ED': 'i',\n    '\\u00EE': 'i',\n    '\\u0129': 'i',\n    '\\u012B': 'i',\n    '\\u012D': 'i',\n    '\\u00EF': 'i',\n    '\\u1E2F': 'i',\n    '\\u1EC9': 'i',\n    '\\u01D0': 'i',\n    '\\u0209': 'i',\n    '\\u020B': 'i',\n    '\\u1ECB': 'i',\n    '\\u012F': 'i',\n    '\\u1E2D': 'i',\n    '\\u0268': 'i',\n    '\\u0131': 'i',\n    '\\u24D9': 'j',\n    '\\uFF4A': 'j',\n    '\\u0135': 'j',\n    '\\u01F0': 'j',\n    '\\u0249': 'j',\n    '\\u24DA': 'k',\n    '\\uFF4B': 'k',\n    '\\u1E31': 'k',\n    '\\u01E9': 'k',\n    '\\u1E33': 'k',\n    '\\u0137': 'k',\n    '\\u1E35': 'k',\n    '\\u0199': 'k',\n    '\\u2C6A': 'k',\n    '\\uA741': 'k',\n    '\\uA743': 'k',\n    '\\uA745': 'k',\n    '\\uA7A3': 'k',\n    '\\u24DB': 'l',\n    '\\uFF4C': 'l',\n    '\\u0140': 'l',\n    '\\u013A': 'l',\n    '\\u013E': 'l',\n    '\\u1E37': 'l',\n    '\\u1E39': 'l',\n    '\\u013C': 'l',\n    '\\u1E3D': 'l',\n    '\\u1E3B': 'l',\n    '\\u017F': 'l',\n    '\\u0142': 'l',\n    '\\u019A': 'l',\n    '\\u026B': 'l',\n    '\\u2C61': 'l',\n    '\\uA749': 'l',\n    '\\uA781': 'l',\n    '\\uA747': 'l',\n    '\\u01C9': 'lj',\n    '\\u24DC': 'm',\n    '\\uFF4D': 'm',\n    '\\u1E3F': 'm',\n    '\\u1E41': 'm',\n    '\\u1E43': 'm',\n    '\\u0271': 'm',\n    '\\u026F': 'm',\n    '\\u24DD': 'n',\n    '\\uFF4E': 'n',\n    '\\u01F9': 'n',\n    '\\u0144': 'n',\n    '\\u00F1': 'n',\n    '\\u1E45': 'n',\n    '\\u0148': 'n',\n    '\\u1E47': 'n',\n    '\\u0146': 'n',\n    '\\u1E4B': 'n',\n    '\\u1E49': 'n',\n    '\\u019E': 'n',\n    '\\u0272': 'n',\n    '\\u0149': 'n',\n    '\\uA791': 'n',\n    '\\uA7A5': 'n',\n    '\\u01CC': 'nj',\n    '\\u24DE': 'o',\n    '\\uFF4F': 'o',\n    '\\u00F2': 'o',\n    '\\u00F3': 'o',\n    '\\u00F4': 'o',\n    '\\u1ED3': 'o',\n    '\\u1ED1': 'o',\n    '\\u1ED7': 'o',\n    '\\u1ED5': 'o',\n    '\\u00F5': 'o',\n    '\\u1E4D': 'o',\n    '\\u022D': 'o',\n    '\\u1E4F': 'o',\n    '\\u014D': 'o',\n    '\\u1E51': 'o',\n    '\\u1E53': 'o',\n    '\\u014F': 'o',\n    '\\u022F': 'o',\n    '\\u0231': 'o',\n    '\\u00F6': 'o',\n    '\\u022B': 'o',\n    '\\u1ECF': 'o',\n    '\\u0151': 'o',\n    '\\u01D2': 'o',\n    '\\u020D': 'o',\n    '\\u020F': 'o',\n    '\\u01A1': 'o',\n    '\\u1EDD': 'o',\n    '\\u1EDB': 'o',\n    '\\u1EE1': 'o',\n    '\\u1EDF': 'o',\n    '\\u1EE3': 'o',\n    '\\u1ECD': 'o',\n    '\\u1ED9': 'o',\n    '\\u01EB': 'o',\n    '\\u01ED': 'o',\n    '\\u00F8': 'o',\n    '\\u01FF': 'o',\n    '\\u0254': 'o',\n    '\\uA74B': 'o',\n    '\\uA74D': 'o',\n    '\\u0275': 'o',\n    '\\u01A3': 'oi',\n    '\\u0223': 'ou',\n    '\\uA74F': 'oo',\n    '\\u24DF': 'p',\n    '\\uFF50': 'p',\n    '\\u1E55': 'p',\n    '\\u1E57': 'p',\n    '\\u01A5': 'p',\n    '\\u1D7D': 'p',\n    '\\uA751': 'p',\n    '\\uA753': 'p',\n    '\\uA755': 'p',\n    '\\u24E0': 'q',\n    '\\uFF51': 'q',\n    '\\u024B': 'q',\n    '\\uA757': 'q',\n    '\\uA759': 'q',\n    '\\u24E1': 'r',\n    '\\uFF52': 'r',\n    '\\u0155': 'r',\n    '\\u1E59': 'r',\n    '\\u0159': 'r',\n    '\\u0211': 'r',\n    '\\u0213': 'r',\n    '\\u1E5B': 'r',\n    '\\u1E5D': 'r',\n    '\\u0157': 'r',\n    '\\u1E5F': 'r',\n    '\\u024D': 'r',\n    '\\u027D': 'r',\n    '\\uA75B': 'r',\n    '\\uA7A7': 'r',\n    '\\uA783': 'r',\n    '\\u24E2': 's',\n    '\\uFF53': 's',\n    '\\u00DF': 's',\n    '\\u015B': 's',\n    '\\u1E65': 's',\n    '\\u015D': 's',\n    '\\u1E61': 's',\n    '\\u0161': 's',\n    '\\u1E67': 's',\n    '\\u1E63': 's',\n    '\\u1E69': 's',\n    '\\u0219': 's',\n    '\\u015F': 's',\n    '\\u023F': 's',\n    '\\uA7A9': 's',\n    '\\uA785': 's',\n    '\\u1E9B': 's',\n    '\\u24E3': 't',\n    '\\uFF54': 't',\n    '\\u1E6B': 't',\n    '\\u1E97': 't',\n    '\\u0165': 't',\n    '\\u1E6D': 't',\n    '\\u021B': 't',\n    '\\u0163': 't',\n    '\\u1E71': 't',\n    '\\u1E6F': 't',\n    '\\u0167': 't',\n    '\\u01AD': 't',\n    '\\u0288': 't',\n    '\\u2C66': 't',\n    '\\uA787': 't',\n    '\\uA729': 'tz',\n    '\\u24E4': 'u',\n    '\\uFF55': 'u',\n    '\\u00F9': 'u',\n    '\\u00FA': 'u',\n    '\\u00FB': 'u',\n    '\\u0169': 'u',\n    '\\u1E79': 'u',\n    '\\u016B': 'u',\n    '\\u1E7B': 'u',\n    '\\u016D': 'u',\n    '\\u00FC': 'u',\n    '\\u01DC': 'u',\n    '\\u01D8': 'u',\n    '\\u01D6': 'u',\n    '\\u01DA': 'u',\n    '\\u1EE7': 'u',\n    '\\u016F': 'u',\n    '\\u0171': 'u',\n    '\\u01D4': 'u',\n    '\\u0215': 'u',\n    '\\u0217': 'u',\n    '\\u01B0': 'u',\n    '\\u1EEB': 'u',\n    '\\u1EE9': 'u',\n    '\\u1EEF': 'u',\n    '\\u1EED': 'u',\n    '\\u1EF1': 'u',\n    '\\u1EE5': 'u',\n    '\\u1E73': 'u',\n    '\\u0173': 'u',\n    '\\u1E77': 'u',\n    '\\u1E75': 'u',\n    '\\u0289': 'u',\n    '\\u24E5': 'v',\n    '\\uFF56': 'v',\n    '\\u1E7D': 'v',\n    '\\u1E7F': 'v',\n    '\\u028B': 'v',\n    '\\uA75F': 'v',\n    '\\u028C': 'v',\n    '\\uA761': 'vy',\n    '\\u24E6': 'w',\n    '\\uFF57': 'w',\n    '\\u1E81': 'w',\n    '\\u1E83': 'w',\n    '\\u0175': 'w',\n    '\\u1E87': 'w',\n    '\\u1E85': 'w',\n    '\\u1E98': 'w',\n    '\\u1E89': 'w',\n    '\\u2C73': 'w',\n    '\\u24E7': 'x',\n    '\\uFF58': 'x',\n    '\\u1E8B': 'x',\n    '\\u1E8D': 'x',\n    '\\u24E8': 'y',\n    '\\uFF59': 'y',\n    '\\u1EF3': 'y',\n    '\\u00FD': 'y',\n    '\\u0177': 'y',\n    '\\u1EF9': 'y',\n    '\\u0233': 'y',\n    '\\u1E8F': 'y',\n    '\\u00FF': 'y',\n    '\\u1EF7': 'y',\n    '\\u1E99': 'y',\n    '\\u1EF5': 'y',\n    '\\u01B4': 'y',\n    '\\u024F': 'y',\n    '\\u1EFF': 'y',\n    '\\u24E9': 'z',\n    '\\uFF5A': 'z',\n    '\\u017A': 'z',\n    '\\u1E91': 'z',\n    '\\u017C': 'z',\n    '\\u017E': 'z',\n    '\\u1E93': 'z',\n    '\\u1E95': 'z',\n    '\\u01B6': 'z',\n    '\\u0225': 'z',\n    '\\u0240': 'z',\n    '\\u2C6C': 'z',\n    '\\uA763': 'z',\n    '\\u0386': '\\u0391',\n    '\\u0388': '\\u0395',\n    '\\u0389': '\\u0397',\n    '\\u038A': '\\u0399',\n    '\\u03AA': '\\u0399',\n    '\\u038C': '\\u039F',\n    '\\u038E': '\\u03A5',\n    '\\u03AB': '\\u03A5',\n    '\\u038F': '\\u03A9',\n    '\\u03AC': '\\u03B1',\n    '\\u03AD': '\\u03B5',\n    '\\u03AE': '\\u03B7',\n    '\\u03AF': '\\u03B9',\n    '\\u03CA': '\\u03B9',\n    '\\u0390': '\\u03B9',\n    '\\u03CC': '\\u03BF',\n    '\\u03CD': '\\u03C5',\n    '\\u03CB': '\\u03C5',\n    '\\u03B0': '\\u03C5',\n    '\\u03C9': '\\u03C9',\n    '\\u03C2': '\\u03C3'\n};\nfunction stripSpecialChars(text) {\n    const match = (a) => {\n        return diacritics[a] || a;\n    };\n    return text.replace(/[^\\u0000-\\u007E]/g, match);\n}\n\nclass ItemsList {\n    constructor(_ngSelect, _selectionModel) {\n        this._ngSelect = _ngSelect;\n        this._selectionModel = _selectionModel;\n        this._items = [];\n        this._filteredItems = [];\n        this._markedIndex = -1;\n    }\n    get items() {\n        return this._items;\n    }\n    get filteredItems() {\n        return this._filteredItems;\n    }\n    get markedIndex() {\n        return this._markedIndex;\n    }\n    get selectedItems() {\n        return this._selectionModel.value;\n    }\n    get markedItem() {\n        return this._filteredItems[this._markedIndex];\n    }\n    get noItemsToSelect() {\n        return this._ngSelect.hideSelected && this._items.length === this.selectedItems.length;\n    }\n    get maxItemsSelected() {\n        return this._ngSelect.multiple && this._ngSelect.maxSelectedItems <= this.selectedItems.length;\n    }\n    get lastSelectedItem() {\n        let i = this.selectedItems.length - 1;\n        for (; i >= 0; i--) {\n            let item = this.selectedItems[i];\n            if (!item.disabled) {\n                return item;\n            }\n        }\n        return null;\n    }\n    setItems(items) {\n        this._items = items.map((item, index) => this.mapItem(item, index));\n        if (this._ngSelect.groupBy) {\n            this._groups = this._groupBy(this._items, this._ngSelect.groupBy);\n            this._items = this._flatten(this._groups);\n        }\n        else {\n            this._groups = new Map();\n            this._groups.set(undefined, this._items);\n        }\n        this._filteredItems = [...this._items];\n    }\n    select(item) {\n        if (item.selected || this.maxItemsSelected) {\n            return;\n        }\n        const multiple = this._ngSelect.multiple;\n        if (!multiple) {\n            this.clearSelected();\n        }\n        this._selectionModel.select(item, multiple, this._ngSelect.selectableGroupAsModel);\n        if (this._ngSelect.hideSelected) {\n            this._hideSelected(item);\n        }\n    }\n    unselect(item) {\n        if (!item.selected) {\n            return;\n        }\n        this._selectionModel.unselect(item, this._ngSelect.multiple);\n        if (this._ngSelect.hideSelected && isDefined(item.index) && this._ngSelect.multiple) {\n            this._showSelected(item);\n        }\n    }\n    findItem(value) {\n        let findBy;\n        if (this._ngSelect.compareWith) {\n            findBy = item => this._ngSelect.compareWith(item.value, value);\n        }\n        else if (this._ngSelect.bindValue) {\n            findBy = item => !item.children && this.resolveNested(item.value, this._ngSelect.bindValue) === value;\n        }\n        else {\n            findBy = item => item.value === value ||\n                !item.children && item.label && item.label === this.resolveNested(value, this._ngSelect.bindLabel);\n        }\n        return this._items.find(item => findBy(item));\n    }\n    addItem(item) {\n        const option = this.mapItem(item, this._items.length);\n        this._items.push(option);\n        this._filteredItems.push(option);\n        return option;\n    }\n    clearSelected(keepDisabled = false) {\n        this._selectionModel.clear(keepDisabled);\n        this._items.forEach(item => {\n            item.selected = keepDisabled && item.selected && item.disabled;\n            item.marked = false;\n        });\n        if (this._ngSelect.hideSelected) {\n            this.resetFilteredItems();\n        }\n    }\n    findByLabel(term) {\n        term = stripSpecialChars(term).toLocaleLowerCase();\n        return this.filteredItems.find(item => {\n            const label = stripSpecialChars(item.label).toLocaleLowerCase();\n            return label.substr(0, term.length) === term;\n        });\n    }\n    filter(term) {\n        if (!term) {\n            this.resetFilteredItems();\n            return;\n        }\n        this._filteredItems = [];\n        term = this._ngSelect.searchFn ? term : stripSpecialChars(term).toLocaleLowerCase();\n        const match = this._ngSelect.searchFn || this._defaultSearchFn;\n        const hideSelected = this._ngSelect.hideSelected;\n        for (const key of Array.from(this._groups.keys())) {\n            const matchedItems = [];\n            for (const item of this._groups.get(key)) {\n                if (hideSelected && (item.parent && item.parent.selected || item.selected)) {\n                    continue;\n                }\n                const searchItem = this._ngSelect.searchFn ? item.value : item;\n                if (match(term, searchItem)) {\n                    matchedItems.push(item);\n                }\n            }\n            if (matchedItems.length > 0) {\n                const [last] = matchedItems.slice(-1);\n                if (last.parent) {\n                    const head = this._items.find(x => x === last.parent);\n                    this._filteredItems.push(head);\n                }\n                this._filteredItems.push(...matchedItems);\n            }\n        }\n    }\n    resetFilteredItems() {\n        if (this._filteredItems.length === this._items.length) {\n            return;\n        }\n        if (this._ngSelect.hideSelected && this.selectedItems.length > 0) {\n            this._filteredItems = this._items.filter(x => !x.selected);\n        }\n        else {\n            this._filteredItems = this._items;\n        }\n    }\n    unmarkItem() {\n        this._markedIndex = -1;\n    }\n    markNextItem() {\n        this._stepToItem(+1);\n    }\n    markPreviousItem() {\n        this._stepToItem(-1);\n    }\n    markItem(item) {\n        this._markedIndex = this._filteredItems.indexOf(item);\n    }\n    markSelectedOrDefault(markDefault) {\n        if (this._filteredItems.length === 0) {\n            return;\n        }\n        const lastMarkedIndex = this._getLastMarkedIndex();\n        if (lastMarkedIndex > -1) {\n            this._markedIndex = lastMarkedIndex;\n        }\n        else {\n            this._markedIndex = markDefault ? this.filteredItems.findIndex(x => !x.disabled) : -1;\n        }\n    }\n    resolveNested(option, key) {\n        if (!isObject(option)) {\n            return option;\n        }\n        if (key.indexOf('.') === -1) {\n            return option[key];\n        }\n        else {\n            let keys = key.split('.');\n            let value = option;\n            for (let i = 0, len = keys.length; i < len; ++i) {\n                if (value == null) {\n                    return null;\n                }\n                value = value[keys[i]];\n            }\n            return value;\n        }\n    }\n    mapItem(item, index) {\n        const label = isDefined(item.$ngOptionLabel) ? item.$ngOptionLabel : this.resolveNested(item, this._ngSelect.bindLabel);\n        const value = isDefined(item.$ngOptionValue) ? item.$ngOptionValue : item;\n        return {\n            index: index,\n            label: isDefined(label) ? label.toString() : '',\n            value: value,\n            disabled: item.disabled,\n            htmlId: `${this._ngSelect.dropdownId}-${index}`,\n        };\n    }\n    mapSelectedItems() {\n        const multiple = this._ngSelect.multiple;\n        for (const selected of this.selectedItems) {\n            const value = this._ngSelect.bindValue ? this.resolveNested(selected.value, this._ngSelect.bindValue) : selected.value;\n            const item = isDefined(value) ? this.findItem(value) : null;\n            this._selectionModel.unselect(selected, multiple);\n            this._selectionModel.select(item || selected, multiple, this._ngSelect.selectableGroupAsModel);\n        }\n        if (this._ngSelect.hideSelected) {\n            this._filteredItems = this.filteredItems.filter(x => this.selectedItems.indexOf(x) === -1);\n        }\n    }\n    _showSelected(item) {\n        this._filteredItems.push(item);\n        if (item.parent) {\n            const parent = item.parent;\n            const parentExists = this._filteredItems.find(x => x === parent);\n            if (!parentExists) {\n                this._filteredItems.push(parent);\n            }\n        }\n        else if (item.children) {\n            for (const child of item.children) {\n                child.selected = false;\n                this._filteredItems.push(child);\n            }\n        }\n        this._filteredItems = [...this._filteredItems.sort((a, b) => (a.index - b.index))];\n    }\n    _hideSelected(item) {\n        this._filteredItems = this._filteredItems.filter(x => x !== item);\n        if (item.parent) {\n            const children = item.parent.children;\n            if (children.every(x => x.selected)) {\n                this._filteredItems = this._filteredItems.filter(x => x !== item.parent);\n            }\n        }\n        else if (item.children) {\n            this._filteredItems = this.filteredItems.filter(x => x.parent !== item);\n        }\n    }\n    _defaultSearchFn(search, opt) {\n        const label = stripSpecialChars(opt.label).toLocaleLowerCase();\n        return label.indexOf(search) > -1;\n    }\n    _getNextItemIndex(steps) {\n        if (steps > 0) {\n            return (this._markedIndex >= this._filteredItems.length - 1) ? 0 : (this._markedIndex + 1);\n        }\n        return (this._markedIndex <= 0) ? (this._filteredItems.length - 1) : (this._markedIndex - 1);\n    }\n    _stepToItem(steps) {\n        if (this._filteredItems.length === 0 || this._filteredItems.every(x => x.disabled)) {\n            return;\n        }\n        this._markedIndex = this._getNextItemIndex(steps);\n        if (this.markedItem.disabled) {\n            this._stepToItem(steps);\n        }\n    }\n    _getLastMarkedIndex() {\n        if (this._ngSelect.hideSelected) {\n            return -1;\n        }\n        if (this._markedIndex > -1 && this.markedItem === undefined) {\n            return -1;\n        }\n        const selectedIndex = this._filteredItems.indexOf(this.lastSelectedItem);\n        if (this.lastSelectedItem && selectedIndex < 0) {\n            return -1;\n        }\n        return Math.max(this.markedIndex, selectedIndex);\n    }\n    _groupBy(items, prop) {\n        const groups = new Map();\n        if (items.length === 0) {\n            return groups;\n        }\n        // Check if items are already grouped by given key.\n        if (Array.isArray(items[0].value[prop])) {\n            for (const item of items) {\n                const children = (item.value[prop] || []).map((x, index) => this.mapItem(x, index));\n                groups.set(item, children);\n            }\n            return groups;\n        }\n        const isFnKey = isFunction(this._ngSelect.groupBy);\n        const keyFn = (item) => {\n            let key = isFnKey ? prop(item.value) : item.value[prop];\n            return isDefined(key) ? key : undefined;\n        };\n        // Group items by key.\n        for (const item of items) {\n            let key = keyFn(item);\n            const group = groups.get(key);\n            if (group) {\n                group.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    _flatten(groups) {\n        const isGroupByFn = isFunction(this._ngSelect.groupBy);\n        const items = [];\n        for (const key of Array.from(groups.keys())) {\n            let i = items.length;\n            if (key === undefined) {\n                const withoutGroup = groups.get(undefined) || [];\n                items.push(...withoutGroup.map(x => {\n                    x.index = i++;\n                    return x;\n                }));\n                continue;\n            }\n            const isObjectKey = isObject(key);\n            const parent = {\n                label: isObjectKey ? '' : String(key),\n                children: undefined,\n                parent: null,\n                index: i++,\n                disabled: !this._ngSelect.selectableGroup,\n                htmlId: newId(),\n            };\n            const groupKey = isGroupByFn ? this._ngSelect.bindLabel : this._ngSelect.groupBy;\n            const groupValue = this._ngSelect.groupValue || (() => {\n                if (isObjectKey) {\n                    return key.value;\n                }\n                return { [groupKey]: key };\n            });\n            const children = groups.get(key).map(x => {\n                x.parent = parent;\n                x.children = undefined;\n                x.index = i++;\n                return x;\n            });\n            parent.children = children;\n            parent.value = groupValue(key, children.map(x => x.value));\n            items.push(parent);\n            items.push(...children);\n        }\n        return items;\n    }\n}\n\nvar KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"Tab\"] = 9] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 13] = \"Enter\";\n    KeyCode[KeyCode[\"Esc\"] = 27] = \"Esc\";\n    KeyCode[KeyCode[\"Space\"] = 32] = \"Space\";\n    KeyCode[KeyCode[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    KeyCode[KeyCode[\"ArrowDown\"] = 40] = \"ArrowDown\";\n    KeyCode[KeyCode[\"Backspace\"] = 8] = \"Backspace\";\n})(KeyCode || (KeyCode = {}));\n\nclass NgDropdownPanelService {\n    constructor() {\n        this._dimensions = {\n            itemHeight: 0,\n            panelHeight: 0,\n            itemsPerViewport: 0\n        };\n    }\n    get dimensions() {\n        return this._dimensions;\n    }\n    calculateItems(scrollPos, itemsLength, buffer) {\n        const d = this._dimensions;\n        const scrollHeight = d.itemHeight * itemsLength;\n        const scrollTop = Math.max(0, scrollPos);\n        const indexByScrollTop = scrollTop / scrollHeight * itemsLength;\n        let end = Math.min(itemsLength, Math.ceil(indexByScrollTop) + (d.itemsPerViewport + 1));\n        const maxStartEnd = end;\n        const maxStart = Math.max(0, maxStartEnd - d.itemsPerViewport);\n        let start = Math.min(maxStart, Math.floor(indexByScrollTop));\n        let topPadding = d.itemHeight * Math.ceil(start) - (d.itemHeight * Math.min(start, buffer));\n        topPadding = !isNaN(topPadding) ? topPadding : 0;\n        start = !isNaN(start) ? start : -1;\n        end = !isNaN(end) ? end : -1;\n        start -= buffer;\n        start = Math.max(0, start);\n        end += buffer;\n        end = Math.min(itemsLength, end);\n        return {\n            topPadding,\n            scrollHeight,\n            start,\n            end\n        };\n    }\n    setDimensions(itemHeight, panelHeight) {\n        const itemsPerViewport = Math.max(1, Math.floor(panelHeight / itemHeight));\n        this._dimensions = {\n            itemHeight,\n            panelHeight,\n            itemsPerViewport\n        };\n    }\n    getScrollTo(itemTop, itemHeight, lastScroll) {\n        const { panelHeight } = this.dimensions;\n        const itemBottom = itemTop + itemHeight;\n        const top = lastScroll;\n        const bottom = top + panelHeight;\n        if (panelHeight >= itemBottom && lastScroll === itemTop) {\n            return null;\n        }\n        if (itemBottom > bottom) {\n            return top + itemBottom - bottom;\n        }\n        else if (itemTop <= top) {\n            return itemTop;\n        }\n        return null;\n    }\n}\nNgDropdownPanelService.ɵfac = function NgDropdownPanelService_Factory(t) { return new (t || NgDropdownPanelService)(); };\nNgDropdownPanelService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgDropdownPanelService, factory: NgDropdownPanelService.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgDropdownPanelService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n\nconst TOP_CSS_CLASS = 'ng-select-top';\nconst BOTTOM_CSS_CLASS = 'ng-select-bottom';\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\nclass NgDropdownPanelComponent {\n    constructor(_renderer, _zone, _panelService, _elementRef, _document) {\n        this._renderer = _renderer;\n        this._zone = _zone;\n        this._panelService = _panelService;\n        this._document = _document;\n        this.items = [];\n        this.position = 'auto';\n        this.virtualScroll = false;\n        this.filterValue = null;\n        this.update = new EventEmitter();\n        this.scroll = new EventEmitter();\n        this.scrollToEnd = new EventEmitter();\n        this.outsideClick = new EventEmitter();\n        this._destroy$ = new Subject();\n        this._scrollToEndFired = false;\n        this._updateScrollHeight = false;\n        this._lastScrollPosition = 0;\n        this._dropdown = _elementRef.nativeElement;\n    }\n    get currentPosition() {\n        return this._currentPosition;\n    }\n    get itemsLength() {\n        return this._itemsLength;\n    }\n    set itemsLength(value) {\n        if (value !== this._itemsLength) {\n            this._itemsLength = value;\n            this._onItemsLengthChanged();\n        }\n    }\n    get _startOffset() {\n        if (this.markedItem) {\n            const { itemHeight, panelHeight } = this._panelService.dimensions;\n            const offset = this.markedItem.index * itemHeight;\n            return panelHeight > offset ? 0 : offset;\n        }\n        return 0;\n    }\n    handleMousedown($event) {\n        const target = $event.target;\n        if (target.tagName === 'INPUT') {\n            return;\n        }\n        $event.preventDefault();\n    }\n    ngOnInit() {\n        this._select = this._dropdown.parentElement;\n        this._virtualPadding = this.paddingElementRef.nativeElement;\n        this._scrollablePanel = this.scrollElementRef.nativeElement;\n        this._contentPanel = this.contentElementRef.nativeElement;\n        this._handleScroll();\n        this._handleOutsideClick();\n        this._appendDropdown();\n    }\n    ngOnChanges(changes) {\n        if (changes.items) {\n            const change = changes.items;\n            this._onItemsChange(change.currentValue, change.firstChange);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy$.next();\n        this._destroy$.complete();\n        this._destroy$.unsubscribe();\n        if (this.appendTo) {\n            this._renderer.removeChild(this._dropdown.parentNode, this._dropdown);\n        }\n    }\n    scrollTo(option, startFromOption = false) {\n        if (!option) {\n            return;\n        }\n        const index = this.items.indexOf(option);\n        if (index < 0 || index >= this.itemsLength) {\n            return;\n        }\n        let scrollTo;\n        if (this.virtualScroll) {\n            const itemHeight = this._panelService.dimensions.itemHeight;\n            scrollTo = this._panelService.getScrollTo(index * itemHeight, itemHeight, this._lastScrollPosition);\n        }\n        else {\n            const item = this._dropdown.querySelector(`#${option.htmlId}`);\n            const lastScroll = startFromOption ? item.offsetTop : this._lastScrollPosition;\n            scrollTo = this._panelService.getScrollTo(item.offsetTop, item.clientHeight, lastScroll);\n        }\n        if (isDefined(scrollTo)) {\n            this._scrollablePanel.scrollTop = scrollTo;\n        }\n    }\n    scrollToTag() {\n        const panel = this._scrollablePanel;\n        panel.scrollTop = panel.scrollHeight - panel.clientHeight;\n    }\n    adjustPosition() {\n        this._updateYPosition();\n    }\n    _handleDropdownPosition() {\n        this._currentPosition = this._calculateCurrentPosition(this._dropdown);\n        if (this._currentPosition === 'top') {\n            this._renderer.addClass(this._dropdown, TOP_CSS_CLASS);\n            this._renderer.removeClass(this._dropdown, BOTTOM_CSS_CLASS);\n            this._renderer.addClass(this._select, TOP_CSS_CLASS);\n            this._renderer.removeClass(this._select, BOTTOM_CSS_CLASS);\n        }\n        else {\n            this._renderer.addClass(this._dropdown, BOTTOM_CSS_CLASS);\n            this._renderer.removeClass(this._dropdown, TOP_CSS_CLASS);\n            this._renderer.addClass(this._select, BOTTOM_CSS_CLASS);\n            this._renderer.removeClass(this._select, TOP_CSS_CLASS);\n        }\n        if (this.appendTo) {\n            this._updateYPosition();\n        }\n        this._dropdown.style.opacity = '1';\n    }\n    _handleScroll() {\n        this._zone.runOutsideAngular(() => {\n            fromEvent(this.scrollElementRef.nativeElement, 'scroll')\n                .pipe(takeUntil(this._destroy$), auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((e) => {\n                const path = e.path || (e.composedPath && e.composedPath());\n                const scrollTop = !path || path.length === 0 ? e.target.scrollTop : path[0].scrollTop;\n                this._onContentScrolled(scrollTop);\n            });\n        });\n    }\n    _handleOutsideClick() {\n        if (!this._document) {\n            return;\n        }\n        this._zone.runOutsideAngular(() => {\n            merge(fromEvent(this._document, 'touchstart', { capture: true }), fromEvent(this._document, 'mousedown', { capture: true })).pipe(takeUntil(this._destroy$))\n                .subscribe($event => this._checkToClose($event));\n        });\n    }\n    _checkToClose($event) {\n        if (this._select.contains($event.target) || this._dropdown.contains($event.target)) {\n            return;\n        }\n        const path = $event.path || ($event.composedPath && $event.composedPath());\n        if ($event.target && $event.target.shadowRoot && path && path[0] && this._select.contains(path[0])) {\n            return;\n        }\n        this._zone.run(() => this.outsideClick.emit());\n    }\n    _onItemsChange(items, firstChange) {\n        this.items = items || [];\n        this._scrollToEndFired = false;\n        this.itemsLength = items.length;\n        if (this.virtualScroll) {\n            this._updateItemsRange(firstChange);\n        }\n        else {\n            this._setVirtualHeight();\n            this._updateItems(firstChange);\n        }\n    }\n    _updateItems(firstChange) {\n        this.update.emit(this.items);\n        if (firstChange === false) {\n            return;\n        }\n        this._zone.runOutsideAngular(() => {\n            Promise.resolve().then(() => {\n                const panelHeight = this._scrollablePanel.clientHeight;\n                this._panelService.setDimensions(0, panelHeight);\n                this._handleDropdownPosition();\n                this.scrollTo(this.markedItem, firstChange);\n            });\n        });\n    }\n    _updateItemsRange(firstChange) {\n        this._zone.runOutsideAngular(() => {\n            this._measureDimensions().then(() => {\n                if (firstChange) {\n                    this._renderItemsRange(this._startOffset);\n                    this._handleDropdownPosition();\n                }\n                else {\n                    this._renderItemsRange();\n                }\n            });\n        });\n    }\n    _onContentScrolled(scrollTop) {\n        if (this.virtualScroll) {\n            this._renderItemsRange(scrollTop);\n        }\n        this._lastScrollPosition = scrollTop;\n        this._fireScrollToEnd(scrollTop);\n    }\n    _updateVirtualHeight(height) {\n        if (this._updateScrollHeight) {\n            this._virtualPadding.style.height = `${height}px`;\n            this._updateScrollHeight = false;\n        }\n    }\n    _setVirtualHeight() {\n        if (!this._virtualPadding) {\n            return;\n        }\n        this._virtualPadding.style.height = `0px`;\n    }\n    _onItemsLengthChanged() {\n        this._updateScrollHeight = true;\n    }\n    _renderItemsRange(scrollTop = null) {\n        if (scrollTop && this._lastScrollPosition === scrollTop) {\n            return;\n        }\n        scrollTop = scrollTop || this._scrollablePanel.scrollTop;\n        const range = this._panelService.calculateItems(scrollTop, this.itemsLength, this.bufferAmount);\n        this._updateVirtualHeight(range.scrollHeight);\n        this._contentPanel.style.transform = `translateY(${range.topPadding}px)`;\n        this._zone.run(() => {\n            this.update.emit(this.items.slice(range.start, range.end));\n            this.scroll.emit({ start: range.start, end: range.end });\n        });\n        if (isDefined(scrollTop) && this._lastScrollPosition === 0) {\n            this._scrollablePanel.scrollTop = scrollTop;\n            this._lastScrollPosition = scrollTop;\n        }\n    }\n    _measureDimensions() {\n        if (this._panelService.dimensions.itemHeight > 0 || this.itemsLength === 0) {\n            return Promise.resolve(this._panelService.dimensions);\n        }\n        const [first] = this.items;\n        this.update.emit([first]);\n        return Promise.resolve().then(() => {\n            const option = this._dropdown.querySelector(`#${first.htmlId}`);\n            const optionHeight = option.clientHeight;\n            this._virtualPadding.style.height = `${optionHeight * this.itemsLength}px`;\n            const panelHeight = this._scrollablePanel.clientHeight;\n            this._panelService.setDimensions(optionHeight, panelHeight);\n            return this._panelService.dimensions;\n        });\n    }\n    _fireScrollToEnd(scrollTop) {\n        if (this._scrollToEndFired || scrollTop === 0) {\n            return;\n        }\n        const padding = this.virtualScroll ?\n            this._virtualPadding :\n            this._contentPanel;\n        if (scrollTop + this._dropdown.clientHeight >= padding.clientHeight) {\n            this._zone.run(() => this.scrollToEnd.emit());\n            this._scrollToEndFired = true;\n        }\n    }\n    _calculateCurrentPosition(dropdownEl) {\n        if (this.position !== 'auto') {\n            return this.position;\n        }\n        const selectRect = this._select.getBoundingClientRect();\n        const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n        const offsetTop = selectRect.top + window.pageYOffset;\n        const height = selectRect.height;\n        const dropdownHeight = dropdownEl.getBoundingClientRect().height;\n        if (offsetTop + height + dropdownHeight > scrollTop + document.documentElement.clientHeight) {\n            return 'top';\n        }\n        else {\n            return 'bottom';\n        }\n    }\n    _appendDropdown() {\n        if (!this.appendTo) {\n            return;\n        }\n        this._parent = document.querySelector(this.appendTo);\n        if (!this._parent) {\n            throw new Error(`appendTo selector ${this.appendTo} did not found any parent element`);\n        }\n        this._updateXPosition();\n        this._parent.appendChild(this._dropdown);\n    }\n    _updateXPosition() {\n        const select = this._select.getBoundingClientRect();\n        const parent = this._parent.getBoundingClientRect();\n        const offsetLeft = select.left - parent.left;\n        this._dropdown.style.left = offsetLeft + 'px';\n        this._dropdown.style.width = select.width + 'px';\n        this._dropdown.style.minWidth = select.width + 'px';\n    }\n    _updateYPosition() {\n        const select = this._select.getBoundingClientRect();\n        const parent = this._parent.getBoundingClientRect();\n        const delta = select.height;\n        if (this._currentPosition === 'top') {\n            const offsetBottom = parent.bottom - select.bottom;\n            this._dropdown.style.bottom = offsetBottom + delta + 'px';\n            this._dropdown.style.top = 'auto';\n        }\n        else if (this._currentPosition === 'bottom') {\n            const offsetTop = select.top - parent.top;\n            this._dropdown.style.top = offsetTop + delta + 'px';\n            this._dropdown.style.bottom = 'auto';\n        }\n    }\n}\nNgDropdownPanelComponent.ɵfac = function NgDropdownPanelComponent_Factory(t) { return new (t || NgDropdownPanelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(NgDropdownPanelService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nNgDropdownPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgDropdownPanelComponent, selectors: [[\"ng-dropdown-panel\"]], viewQuery: function NgDropdownPanelComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true, ElementRef);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true, ElementRef);\n        ɵngcc0.ɵɵstaticViewQuery(_c2, true, ElementRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentElementRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollElementRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.paddingElementRef = _t.first);\n    } }, hostBindings: function NgDropdownPanelComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NgDropdownPanelComponent_mousedown_HostBindingHandler($event) { return ctx.handleMousedown($event); });\n    } }, inputs: { items: \"items\", position: \"position\", virtualScroll: \"virtualScroll\", filterValue: \"filterValue\", markedItem: \"markedItem\", appendTo: \"appendTo\", bufferAmount: \"bufferAmount\", headerTemplate: \"headerTemplate\", footerTemplate: \"footerTemplate\" }, outputs: { update: \"update\", scroll: \"scroll\", scrollToEnd: \"scrollToEnd\", outsideClick: \"outsideClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 9, vars: 6, consts: [[\"class\", \"ng-dropdown-header\", 4, \"ngIf\"], [1, \"ng-dropdown-panel-items\", \"scroll-host\"], [\"scroll\", \"\"], [\"padding\", \"\"], [\"content\", \"\"], [\"class\", \"ng-dropdown-footer\", 4, \"ngIf\"], [1, \"ng-dropdown-header\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"ng-dropdown-footer\"]], template: function NgDropdownPanelComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, NgDropdownPanelComponent_div_0_Template, 2, 4, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵelement(3, \"div\", null, 3);\n        ɵngcc0.ɵɵelementStart(5, \"div\", null, 4);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, NgDropdownPanelComponent_div_8_Template, 2, 4, \"div\", 5);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.headerTemplate);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵclassProp(\"total-padding\", ctx.virtualScroll);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"scrollable-content\", ctx.virtualScroll && ctx.items.length);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.footerTemplate);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });\nNgDropdownPanelComponent.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: NgDropdownPanelService },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nNgDropdownPanelComponent.propDecorators = {\n    items: [{ type: Input }],\n    markedItem: [{ type: Input }],\n    position: [{ type: Input }],\n    appendTo: [{ type: Input }],\n    bufferAmount: [{ type: Input }],\n    virtualScroll: [{ type: Input }],\n    headerTemplate: [{ type: Input }],\n    footerTemplate: [{ type: Input }],\n    filterValue: [{ type: Input }],\n    update: [{ type: Output }],\n    scroll: [{ type: Output }],\n    scrollToEnd: [{ type: Output }],\n    outsideClick: [{ type: Output }],\n    contentElementRef: [{ type: ViewChild, args: ['content', { read: ElementRef, static: true },] }],\n    scrollElementRef: [{ type: ViewChild, args: ['scroll', { read: ElementRef, static: true },] }],\n    paddingElementRef: [{ type: ViewChild, args: ['padding', { read: ElementRef, static: true },] }],\n    handleMousedown: [{ type: HostListener, args: ['mousedown', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgDropdownPanelComponent, [{\n        type: Component,\n        args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                selector: 'ng-dropdown-panel',\n                template: `\n        <div *ngIf=\"headerTemplate\" class=\"ng-dropdown-header\">\n            <ng-container [ngTemplateOutlet]=\"headerTemplate\" [ngTemplateOutletContext]=\"{ searchTerm: filterValue }\"></ng-container>\n        </div>\n        <div #scroll class=\"ng-dropdown-panel-items scroll-host\">\n            <div #padding [class.total-padding]=\"virtualScroll\"></div>\n            <div #content [class.scrollable-content]=\"virtualScroll && items.length\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n        <div *ngIf=\"footerTemplate\" class=\"ng-dropdown-footer\">\n            <ng-container [ngTemplateOutlet]=\"footerTemplate\" [ngTemplateOutletContext]=\"{ searchTerm: filterValue }\"></ng-container>\n        </div>\n    `\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: NgDropdownPanelService }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { items: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], virtualScroll: [{\n            type: Input\n        }], filterValue: [{\n            type: Input\n        }], update: [{\n            type: Output\n        }], scroll: [{\n            type: Output\n        }], scrollToEnd: [{\n            type: Output\n        }], outsideClick: [{\n            type: Output\n        }], handleMousedown: [{\n            type: HostListener,\n            args: ['mousedown', ['$event']]\n        }], markedItem: [{\n            type: Input\n        }], appendTo: [{\n            type: Input\n        }], bufferAmount: [{\n            type: Input\n        }], headerTemplate: [{\n            type: Input\n        }], footerTemplate: [{\n            type: Input\n        }], contentElementRef: [{\n            type: ViewChild,\n            args: ['content', { read: ElementRef, static: true }]\n        }], scrollElementRef: [{\n            type: ViewChild,\n            args: ['scroll', { read: ElementRef, static: true }]\n        }], paddingElementRef: [{\n            type: ViewChild,\n            args: ['padding', { read: ElementRef, static: true }]\n        }] }); })();\n\nclass NgOptionComponent {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this.stateChange$ = new Subject();\n        this._disabled = false;\n    }\n    get disabled() { return this._disabled; }\n    set disabled(value) { this._disabled = this._isDisabled(value); }\n    get label() {\n        return (this.elementRef.nativeElement.textContent || '').trim();\n    }\n    ngOnChanges(changes) {\n        if (changes.disabled) {\n            this.stateChange$.next({\n                value: this.value,\n                disabled: this._disabled\n            });\n        }\n    }\n    ngAfterViewChecked() {\n        if (this.label !== this._previousLabel) {\n            this._previousLabel = this.label;\n            this.stateChange$.next({\n                value: this.value,\n                disabled: this._disabled,\n                label: this.elementRef.nativeElement.innerHTML\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.stateChange$.complete();\n    }\n    _isDisabled(value) {\n        return value != null && `${value}` !== 'false';\n    }\n}\nNgOptionComponent.ɵfac = function NgOptionComponent_Factory(t) { return new (t || NgOptionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgOptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOptionComponent, selectors: [[\"ng-option\"]], inputs: { disabled: \"disabled\", value: \"value\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c4, decls: 1, vars: 0, template: function NgOptionComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nNgOptionComponent.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgOptionComponent.propDecorators = {\n    value: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOptionComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-option',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `<ng-content></ng-content>`\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n\nclass NgSelectConfig {\n    constructor() {\n        this.notFoundText = 'No items found';\n        this.typeToSearchText = 'Type to search';\n        this.addTagText = 'Add item';\n        this.loadingText = 'Loading...';\n        this.clearAllText = 'Clear all';\n        this.disableVirtualScroll = true;\n        this.openOnEnter = true;\n        this.appearance = 'underline';\n    }\n}\nNgSelectConfig.ɵfac = function NgSelectConfig_Factory(t) { return new (t || NgSelectConfig)(); };\nNgSelectConfig.ɵprov = ɵɵdefineInjectable({ factory: function NgSelectConfig_Factory() { return new NgSelectConfig(); }, token: NgSelectConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\nconst SELECTION_MODEL_FACTORY = new InjectionToken('ng-select-selection-model');\nclass NgSelectComponent {\n    constructor(classes, autoFocus, config, newSelectionModel, _elementRef, _cd, _console) {\n        this.classes = classes;\n        this.autoFocus = autoFocus;\n        this._cd = _cd;\n        this._console = _console;\n        this.markFirst = true;\n        this.dropdownPosition = 'auto';\n        this.loading = false;\n        this.closeOnSelect = true;\n        this.hideSelected = false;\n        this.selectOnTab = false;\n        this.bufferAmount = 4;\n        this.selectableGroup = false;\n        this.selectableGroupAsModel = true;\n        this.searchFn = null;\n        this.trackByFn = null;\n        this.clearOnBackspace = true;\n        this.labelForId = null;\n        this.inputAttrs = {};\n        this.readonly = false;\n        this.searchWhileComposing = true;\n        this.minTermLength = 0;\n        this.editableSearchTerm = false;\n        this.keyDownFn = (_) => true;\n        this.multiple = false;\n        this.addTag = false;\n        this.searchable = true;\n        this.clearable = true;\n        this.isOpen = false;\n        // output events\n        this.blurEvent = new EventEmitter();\n        this.focusEvent = new EventEmitter();\n        this.changeEvent = new EventEmitter();\n        this.openEvent = new EventEmitter();\n        this.closeEvent = new EventEmitter();\n        this.searchEvent = new EventEmitter();\n        this.clearEvent = new EventEmitter();\n        this.addEvent = new EventEmitter();\n        this.removeEvent = new EventEmitter();\n        this.scroll = new EventEmitter();\n        this.scrollToEnd = new EventEmitter();\n        this.viewPortItems = [];\n        this.searchTerm = null;\n        this.dropdownId = newId();\n        this.escapeHTML = true;\n        this.useDefaultClass = true;\n        this._items = [];\n        this._defaultLabel = 'label';\n        this._pressedKeys = [];\n        this._isComposing = false;\n        this._destroy$ = new Subject();\n        this._keyPress$ = new Subject();\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this.clearItem = (item) => {\n            const option = this.selectedItems.find(x => x.value === item);\n            this.unselect(option);\n        };\n        this.trackByOption = (_, item) => {\n            if (this.trackByFn) {\n                return this.trackByFn(item.value);\n            }\n            return item;\n        };\n        this._mergeGlobalConfig(config);\n        this.itemsList = new ItemsList(this, newSelectionModel());\n        this.element = _elementRef.nativeElement;\n    }\n    get items() { return this._items; }\n    ;\n    set items(value) {\n        this._itemsAreUsed = true;\n        this._items = value;\n    }\n    ;\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (fn !== undefined && fn !== null && !isFunction(fn)) {\n            throw Error('`compareWith` must be a function.');\n        }\n        this._compareWith = fn;\n    }\n    get clearSearchOnAdd() { return isDefined(this._clearSearchOnAdd) ? this._clearSearchOnAdd : this.closeOnSelect; }\n    ;\n    set clearSearchOnAdd(value) {\n        this._clearSearchOnAdd = value;\n    }\n    ;\n    get disabled() { return this.readonly || this._disabled; }\n    ;\n    get filtered() { return (!!this.searchTerm && this.searchable || this._isComposing); }\n    ;\n    get _editableSearchTerm() {\n        return this.editableSearchTerm && !this.multiple;\n    }\n    get selectedItems() {\n        return this.itemsList.selectedItems;\n    }\n    get selectedValues() {\n        return this.selectedItems.map(x => x.value);\n    }\n    get hasValue() {\n        return this.selectedItems.length > 0;\n    }\n    get currentPanelPosition() {\n        if (this.dropdownPanel) {\n            return this.dropdownPanel.currentPosition;\n        }\n        return undefined;\n    }\n    ngOnInit() {\n        this._handleKeyPresses();\n        this._setInputAttributes();\n    }\n    ngOnChanges(changes) {\n        if (changes.multiple) {\n            this.itemsList.clearSelected();\n        }\n        if (changes.items) {\n            this._setItems(changes.items.currentValue || []);\n        }\n        if (changes.isOpen) {\n            this._manualOpen = isDefined(changes.isOpen.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        if (!this._itemsAreUsed) {\n            this.escapeHTML = false;\n            this._setItemsFromNgOptions();\n        }\n        if (isDefined(this.autoFocus)) {\n            this.focus();\n        }\n    }\n    ngOnDestroy() {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n    handleKeyDown($event) {\n        const keyCode = KeyCode[$event.which];\n        if (keyCode) {\n            if (this.keyDownFn($event) === false) {\n                return;\n            }\n            this.handleKeyCode($event);\n        }\n        else if ($event.key && $event.key.length === 1) {\n            this._keyPress$.next($event.key.toLocaleLowerCase());\n        }\n    }\n    handleKeyCode($event) {\n        switch ($event.which) {\n            case KeyCode.ArrowDown:\n                this._handleArrowDown($event);\n                break;\n            case KeyCode.ArrowUp:\n                this._handleArrowUp($event);\n                break;\n            case KeyCode.Space:\n                this._handleSpace($event);\n                break;\n            case KeyCode.Enter:\n                this._handleEnter($event);\n                break;\n            case KeyCode.Tab:\n                this._handleTab($event);\n                break;\n            case KeyCode.Esc:\n                this.close();\n                $event.preventDefault();\n                break;\n            case KeyCode.Backspace:\n                this._handleBackspace();\n                break;\n        }\n    }\n    handleMousedown($event) {\n        const target = $event.target;\n        if (target.tagName !== 'INPUT') {\n            $event.preventDefault();\n        }\n        if (target.classList.contains('ng-clear-wrapper')) {\n            this.handleClearClick();\n            return;\n        }\n        if (target.classList.contains('ng-arrow-wrapper')) {\n            this.handleArrowClick();\n            return;\n        }\n        if (target.classList.contains('ng-value-icon')) {\n            return;\n        }\n        if (!this.focused) {\n            this.focus();\n        }\n        if (this.searchable) {\n            this.open();\n        }\n        else {\n            this.toggle();\n        }\n    }\n    handleArrowClick() {\n        if (this.isOpen) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    handleClearClick() {\n        if (this.hasValue) {\n            this.itemsList.clearSelected(true);\n            this._updateNgModel();\n        }\n        this._clearSearch();\n        this.focus();\n        this.clearEvent.emit();\n        this._onSelectionChanged();\n    }\n    clearModel() {\n        if (!this.clearable) {\n            return;\n        }\n        this.itemsList.clearSelected();\n        this._updateNgModel();\n    }\n    writeValue(value) {\n        this.itemsList.clearSelected();\n        this._handleWriteValue(value);\n        this._cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    setDisabledState(state) {\n        this._disabled = state;\n        this._cd.markForCheck();\n    }\n    toggle() {\n        if (!this.isOpen) {\n            this.open();\n        }\n        else {\n            this.close();\n        }\n    }\n    open() {\n        if (this.disabled || this.isOpen || this.itemsList.maxItemsSelected || this._manualOpen) {\n            return;\n        }\n        if (!this._isTypeahead && !this.addTag && this.itemsList.noItemsToSelect) {\n            return;\n        }\n        this.isOpen = true;\n        this.itemsList.markSelectedOrDefault(this.markFirst);\n        this.openEvent.emit();\n        if (!this.searchTerm) {\n            this.focus();\n        }\n        this.detectChanges();\n    }\n    close() {\n        if (!this.isOpen || this._manualOpen) {\n            return;\n        }\n        this.isOpen = false;\n        this._isComposing = false;\n        if (!this._editableSearchTerm) {\n            this._clearSearch();\n        }\n        else {\n            this.itemsList.resetFilteredItems();\n        }\n        this.itemsList.unmarkItem();\n        this._onTouched();\n        this.closeEvent.emit();\n        this._cd.markForCheck();\n    }\n    toggleItem(item) {\n        if (!item || item.disabled || this.disabled) {\n            return;\n        }\n        if (this.multiple && item.selected) {\n            this.unselect(item);\n        }\n        else {\n            this.select(item);\n        }\n        if (this._editableSearchTerm) {\n            this._setSearchTermFromItems();\n        }\n        this._onSelectionChanged();\n    }\n    select(item) {\n        if (!item.selected) {\n            this.itemsList.select(item);\n            if (this.clearSearchOnAdd && !this._editableSearchTerm) {\n                this._clearSearch();\n            }\n            this._updateNgModel();\n            if (this.multiple) {\n                this.addEvent.emit(item.value);\n            }\n        }\n        if (this.closeOnSelect || this.itemsList.noItemsToSelect) {\n            this.close();\n        }\n    }\n    focus() {\n        this.searchInput.nativeElement.focus();\n    }\n    blur() {\n        this.searchInput.nativeElement.blur();\n    }\n    unselect(item) {\n        if (!item) {\n            return;\n        }\n        this.itemsList.unselect(item);\n        this.focus();\n        this._updateNgModel();\n        this.removeEvent.emit(item);\n    }\n    selectTag() {\n        let tag;\n        if (isFunction(this.addTag)) {\n            tag = this.addTag(this.searchTerm);\n        }\n        else {\n            tag = this._primitive ? this.searchTerm : { [this.bindLabel]: this.searchTerm };\n        }\n        const handleTag = (item) => this._isTypeahead || !this.isOpen ? this.itemsList.mapItem(item, null) : this.itemsList.addItem(item);\n        if (isPromise(tag)) {\n            tag.then(item => this.select(handleTag(item))).catch(() => { });\n        }\n        else if (tag) {\n            this.select(handleTag(tag));\n        }\n    }\n    showClear() {\n        return this.clearable && (this.hasValue || this.searchTerm) && !this.disabled;\n    }\n    get showAddTag() {\n        if (!this._validTerm) {\n            return false;\n        }\n        const term = this.searchTerm.toLowerCase().trim();\n        return this.addTag &&\n            (!this.itemsList.filteredItems.some(x => x.label.toLowerCase() === term) &&\n                (!this.hideSelected && this.isOpen || !this.selectedItems.some(x => x.label.toLowerCase() === term))) &&\n            !this.loading;\n    }\n    showNoItemsFound() {\n        const empty = this.itemsList.filteredItems.length === 0;\n        return ((empty && !this._isTypeahead && !this.loading) ||\n            (empty && this._isTypeahead && this._validTerm && !this.loading)) &&\n            !this.showAddTag;\n    }\n    showTypeToSearch() {\n        const empty = this.itemsList.filteredItems.length === 0;\n        return empty && this._isTypeahead && !this._validTerm && !this.loading;\n    }\n    onCompositionStart() {\n        this._isComposing = true;\n    }\n    onCompositionEnd(term) {\n        this._isComposing = false;\n        if (this.searchWhileComposing) {\n            return;\n        }\n        this.filter(term);\n    }\n    filter(term) {\n        if (this._isComposing && !this.searchWhileComposing) {\n            return;\n        }\n        this.searchTerm = term;\n        if (this._isTypeahead && (this._validTerm || this.minTermLength === 0)) {\n            this.typeahead.next(term);\n        }\n        if (!this._isTypeahead) {\n            this.itemsList.filter(this.searchTerm);\n            if (this.isOpen) {\n                this.itemsList.markSelectedOrDefault(this.markFirst);\n            }\n        }\n        this.searchEvent.emit({ term, items: this.itemsList.filteredItems.map(x => x.value) });\n        this.open();\n    }\n    onInputFocus($event) {\n        if (this.focused) {\n            return;\n        }\n        if (this._editableSearchTerm) {\n            this._setSearchTermFromItems();\n        }\n        this.element.classList.add('ng-select-focused');\n        this.focusEvent.emit($event);\n        this.focused = true;\n    }\n    onInputBlur($event) {\n        this.element.classList.remove('ng-select-focused');\n        this.blurEvent.emit($event);\n        if (!this.isOpen && !this.disabled) {\n            this._onTouched();\n        }\n        if (this._editableSearchTerm) {\n            this._setSearchTermFromItems();\n        }\n        this.focused = false;\n    }\n    onItemHover(item) {\n        if (item.disabled) {\n            return;\n        }\n        this.itemsList.markItem(item);\n    }\n    detectChanges() {\n        if (!this._cd.destroyed) {\n            this._cd.detectChanges();\n        }\n    }\n    _setSearchTermFromItems() {\n        const selected = this.selectedItems && this.selectedItems[0];\n        this.searchTerm = (selected && selected.label) || null;\n    }\n    _setItems(items) {\n        const firstItem = items[0];\n        this.bindLabel = this.bindLabel || this._defaultLabel;\n        this._primitive = isDefined(firstItem) ? !isObject(firstItem) : this._primitive || this.bindLabel === this._defaultLabel;\n        this.itemsList.setItems(items);\n        if (items.length > 0 && this.hasValue) {\n            this.itemsList.mapSelectedItems();\n        }\n        if (this.isOpen && isDefined(this.searchTerm) && !this._isTypeahead) {\n            this.itemsList.filter(this.searchTerm);\n        }\n        if (this._isTypeahead || this.isOpen) {\n            this.itemsList.markSelectedOrDefault(this.markFirst);\n        }\n    }\n    _setItemsFromNgOptions() {\n        const mapNgOptions = (options) => {\n            this.items = options.map(option => ({\n                $ngOptionValue: option.value,\n                $ngOptionLabel: option.elementRef.nativeElement.innerHTML,\n                disabled: option.disabled\n            }));\n            this.itemsList.setItems(this.items);\n            if (this.hasValue) {\n                this.itemsList.mapSelectedItems();\n            }\n            this.detectChanges();\n        };\n        const handleOptionChange = () => {\n            const changedOrDestroyed = merge(this.ngOptions.changes, this._destroy$);\n            merge(...this.ngOptions.map(option => option.stateChange$))\n                .pipe(takeUntil(changedOrDestroyed))\n                .subscribe(option => {\n                const item = this.itemsList.findItem(option.value);\n                item.disabled = option.disabled;\n                item.label = option.label || item.label;\n                this._cd.detectChanges();\n            });\n        };\n        this.ngOptions.changes\n            .pipe(startWith(this.ngOptions), takeUntil(this._destroy$))\n            .subscribe(options => {\n            this.bindLabel = this._defaultLabel;\n            mapNgOptions(options);\n            handleOptionChange();\n        });\n    }\n    _isValidWriteValue(value) {\n        if (!isDefined(value) || (this.multiple && value === '') || Array.isArray(value) && value.length === 0) {\n            return false;\n        }\n        const validateBinding = (item) => {\n            if (!isDefined(this.compareWith) && isObject(item) && this.bindValue) {\n                this._console.warn(`Setting object(${JSON.stringify(item)}) as your model with bindValue is not allowed unless [compareWith] is used.`);\n                return false;\n            }\n            return true;\n        };\n        if (this.multiple) {\n            if (!Array.isArray(value)) {\n                this._console.warn('Multiple select ngModel should be array.');\n                return false;\n            }\n            return value.every(item => validateBinding(item));\n        }\n        else {\n            return validateBinding(value);\n        }\n    }\n    _handleWriteValue(ngModel) {\n        if (!this._isValidWriteValue(ngModel)) {\n            return;\n        }\n        const select = (val) => {\n            let item = this.itemsList.findItem(val);\n            if (item) {\n                this.itemsList.select(item);\n            }\n            else {\n                const isValObject = isObject(val);\n                const isPrimitive = !isValObject && !this.bindValue;\n                if ((isValObject || isPrimitive)) {\n                    this.itemsList.select(this.itemsList.mapItem(val, null));\n                }\n                else if (this.bindValue) {\n                    item = {\n                        [this.bindLabel]: null,\n                        [this.bindValue]: val\n                    };\n                    this.itemsList.select(this.itemsList.mapItem(item, null));\n                }\n            }\n        };\n        if (this.multiple) {\n            ngModel.forEach(item => select(item));\n        }\n        else {\n            select(ngModel);\n        }\n    }\n    _handleKeyPresses() {\n        if (this.searchable) {\n            return;\n        }\n        this._keyPress$\n            .pipe(takeUntil(this._destroy$), tap(letter => this._pressedKeys.push(letter)), debounceTime(200), filter(() => this._pressedKeys.length > 0), map(() => this._pressedKeys.join('')))\n            .subscribe(term => {\n            const item = this.itemsList.findByLabel(term);\n            if (item) {\n                if (this.isOpen) {\n                    this.itemsList.markItem(item);\n                    this._scrollToMarked();\n                    this._cd.markForCheck();\n                }\n                else {\n                    this.select(item);\n                }\n            }\n            this._pressedKeys = [];\n        });\n    }\n    _setInputAttributes() {\n        const input = this.searchInput.nativeElement;\n        const attributes = Object.assign({ type: 'text', autocorrect: 'off', autocapitalize: 'off', autocomplete: this.labelForId ? 'off' : this.dropdownId }, this.inputAttrs);\n        for (const key of Object.keys(attributes)) {\n            input.setAttribute(key, attributes[key]);\n        }\n    }\n    _updateNgModel() {\n        const model = [];\n        for (const item of this.selectedItems) {\n            if (this.bindValue) {\n                let value = null;\n                if (item.children) {\n                    const groupKey = this.groupValue ? this.bindValue : this.groupBy;\n                    value = item.value[groupKey || this.groupBy];\n                }\n                else {\n                    value = this.itemsList.resolveNested(item.value, this.bindValue);\n                }\n                model.push(value);\n            }\n            else {\n                model.push(item.value);\n            }\n        }\n        const selected = this.selectedItems.map(x => x.value);\n        if (this.multiple) {\n            this._onChange(model);\n            this.changeEvent.emit(selected);\n        }\n        else {\n            this._onChange(isDefined(model[0]) ? model[0] : null);\n            this.changeEvent.emit(selected[0]);\n        }\n        this._cd.markForCheck();\n    }\n    _clearSearch() {\n        if (!this.searchTerm) {\n            return;\n        }\n        this._changeSearch(null);\n        this.itemsList.resetFilteredItems();\n    }\n    _changeSearch(searchTerm) {\n        this.searchTerm = searchTerm;\n        if (this._isTypeahead) {\n            this.typeahead.next(searchTerm);\n        }\n    }\n    _scrollToMarked() {\n        if (!this.isOpen || !this.dropdownPanel) {\n            return;\n        }\n        this.dropdownPanel.scrollTo(this.itemsList.markedItem);\n    }\n    _scrollToTag() {\n        if (!this.isOpen || !this.dropdownPanel) {\n            return;\n        }\n        this.dropdownPanel.scrollToTag();\n    }\n    _onSelectionChanged() {\n        if (this.isOpen && this.multiple && this.appendTo) {\n            // Make sure items are rendered.\n            this._cd.detectChanges();\n            this.dropdownPanel.adjustPosition();\n        }\n    }\n    _handleTab($event) {\n        if (this.isOpen === false && !this.addTag) {\n            return;\n        }\n        if (this.selectOnTab) {\n            if (this.itemsList.markedItem) {\n                this.toggleItem(this.itemsList.markedItem);\n                $event.preventDefault();\n            }\n            else if (this.showAddTag) {\n                this.selectTag();\n                $event.preventDefault();\n            }\n            else {\n                this.close();\n            }\n        }\n        else {\n            this.close();\n        }\n    }\n    _handleEnter($event) {\n        if (this.isOpen || this._manualOpen) {\n            if (this.itemsList.markedItem) {\n                this.toggleItem(this.itemsList.markedItem);\n            }\n            else if (this.showAddTag) {\n                this.selectTag();\n            }\n        }\n        else if (this.openOnEnter) {\n            this.open();\n        }\n        else {\n            return;\n        }\n        $event.preventDefault();\n    }\n    _handleSpace($event) {\n        if (this.isOpen || this._manualOpen) {\n            return;\n        }\n        this.open();\n        $event.preventDefault();\n    }\n    _handleArrowDown($event) {\n        if (this._nextItemIsTag(+1)) {\n            this.itemsList.unmarkItem();\n            this._scrollToTag();\n        }\n        else {\n            this.itemsList.markNextItem();\n            this._scrollToMarked();\n        }\n        this.open();\n        $event.preventDefault();\n    }\n    _handleArrowUp($event) {\n        if (!this.isOpen) {\n            return;\n        }\n        if (this._nextItemIsTag(-1)) {\n            this.itemsList.unmarkItem();\n            this._scrollToTag();\n        }\n        else {\n            this.itemsList.markPreviousItem();\n            this._scrollToMarked();\n        }\n        $event.preventDefault();\n    }\n    _nextItemIsTag(nextStep) {\n        const nextIndex = this.itemsList.markedIndex + nextStep;\n        return this.addTag && this.searchTerm\n            && this.itemsList.markedItem\n            && (nextIndex < 0 || nextIndex === this.itemsList.filteredItems.length);\n    }\n    _handleBackspace() {\n        if (this.searchTerm || !this.clearable || !this.clearOnBackspace || !this.hasValue) {\n            return;\n        }\n        if (this.multiple) {\n            this.unselect(this.itemsList.lastSelectedItem);\n        }\n        else {\n            this.clearModel();\n        }\n    }\n    get _isTypeahead() {\n        return this.typeahead && this.typeahead.observers.length > 0;\n    }\n    get _validTerm() {\n        const term = this.searchTerm && this.searchTerm.trim();\n        return term && term.length >= this.minTermLength;\n    }\n    _mergeGlobalConfig(config) {\n        this.placeholder = this.placeholder || config.placeholder;\n        this.notFoundText = this.notFoundText || config.notFoundText;\n        this.typeToSearchText = this.typeToSearchText || config.typeToSearchText;\n        this.addTagText = this.addTagText || config.addTagText;\n        this.loadingText = this.loadingText || config.loadingText;\n        this.clearAllText = this.clearAllText || config.clearAllText;\n        this.virtualScroll = isDefined(this.virtualScroll)\n            ? this.virtualScroll\n            : isDefined(config.disableVirtualScroll) ? !config.disableVirtualScroll : false;\n        this.openOnEnter = isDefined(this.openOnEnter) ? this.openOnEnter : config.openOnEnter;\n        this.appendTo = this.appendTo || config.appendTo;\n        this.bindValue = this.bindValue || config.bindValue;\n        this.bindLabel = this.bindLabel || config.bindLabel;\n        this.appearance = this.appearance || config.appearance;\n    }\n}\nNgSelectComponent.ɵfac = function NgSelectComponent_Factory(t) { return new (t || NgSelectComponent)(ɵngcc0.ɵɵinjectAttribute('class'), ɵngcc0.ɵɵinjectAttribute('autofocus'), ɵngcc0.ɵɵdirectiveInject(NgSelectConfig), ɵngcc0.ɵɵdirectiveInject(SELECTION_MODEL_FACTORY), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ConsoleService)); };\nNgSelectComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgSelectComponent, selectors: [[\"ng-select\"]], contentQueries: function NgSelectComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgOptionTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgOptgroupTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgLabelTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgMultiLabelTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgHeaderTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgFooterTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgNotFoundTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgTypeToSearchTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgLoadingTextTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgTagTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgLoadingSpinnerTemplateDirective, true, TemplateRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgOptionComponent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optgroupTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.labelTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiLabelTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.notFoundTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.typeToSearchTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.loadingTextTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tagTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.loadingSpinnerTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ngOptions = _t);\n    } }, viewQuery: function NgSelectComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NgDropdownPanelComponent, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c5, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownPanel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchInput = _t.first);\n    } }, hostVars: 20, hostBindings: function NgSelectComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function NgSelectComponent_keydown_HostBindingHandler($event) { return ctx.handleKeyDown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-select\", ctx.useDefaultClass)(\"ng-select-single\", !ctx.multiple)(\"ng-select-multiple\", ctx.multiple)(\"ng-select-taggable\", ctx.addTag)(\"ng-select-searchable\", ctx.searchable)(\"ng-select-clearable\", ctx.clearable)(\"ng-select-opened\", ctx.isOpen)(\"ng-select-disabled\", ctx.disabled)(\"ng-select-filtered\", ctx.filtered)(\"ng-select-typeahead\", ctx.typeahead);\n    } }, inputs: { markFirst: \"markFirst\", dropdownPosition: \"dropdownPosition\", loading: \"loading\", closeOnSelect: \"closeOnSelect\", hideSelected: \"hideSelected\", selectOnTab: \"selectOnTab\", bufferAmount: \"bufferAmount\", selectableGroup: \"selectableGroup\", selectableGroupAsModel: \"selectableGroupAsModel\", searchFn: \"searchFn\", trackByFn: \"trackByFn\", clearOnBackspace: \"clearOnBackspace\", labelForId: \"labelForId\", inputAttrs: \"inputAttrs\", readonly: \"readonly\", searchWhileComposing: \"searchWhileComposing\", minTermLength: \"minTermLength\", editableSearchTerm: \"editableSearchTerm\", keyDownFn: \"keyDownFn\", multiple: \"multiple\", addTag: \"addTag\", searchable: \"searchable\", clearable: \"clearable\", isOpen: \"isOpen\", items: \"items\", compareWith: \"compareWith\", clearSearchOnAdd: \"clearSearchOnAdd\", bindLabel: \"bindLabel\", placeholder: \"placeholder\", notFoundText: \"notFoundText\", typeToSearchText: \"typeToSearchText\", addTagText: \"addTagText\", loadingText: \"loadingText\", clearAllText: \"clearAllText\", virtualScroll: \"virtualScroll\", openOnEnter: \"openOnEnter\", appendTo: \"appendTo\", bindValue: \"bindValue\", appearance: \"appearance\", maxSelectedItems: \"maxSelectedItems\", groupBy: \"groupBy\", groupValue: \"groupValue\", tabIndex: \"tabIndex\", typeahead: \"typeahead\" }, outputs: { blurEvent: \"blur\", focusEvent: \"focus\", changeEvent: \"change\", openEvent: \"open\", closeEvent: \"close\", searchEvent: \"search\", clearEvent: \"clear\", addEvent: \"add\", removeEvent: \"remove\", scroll: \"scroll\", scrollToEnd: \"scrollToEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NgSelectComponent),\n                multi: true\n            }, NgDropdownPanelService]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 14, vars: 19, consts: [[1, \"ng-select-container\", 3, \"mousedown\"], [1, \"ng-value-container\"], [1, \"ng-placeholder\"], [4, \"ngIf\"], [\"role\", \"combobox\", \"aria-haspopup\", \"listbox\", 1, \"ng-input\"], [\"aria-autocomplete\", \"list\", 3, \"readOnly\", \"disabled\", \"value\", \"input\", \"compositionstart\", \"compositionend\", \"focus\", \"blur\", \"change\"], [\"searchInput\", \"\"], [\"class\", \"ng-clear-wrapper\", 3, \"title\", 4, \"ngIf\"], [1, \"ng-arrow-wrapper\"], [1, \"ng-arrow\"], [\"class\", \"ng-dropdown-panel\", \"role\", \"listbox\", \"aria-label\", \"Options list\", 3, \"virtualScroll\", \"bufferAmount\", \"appendTo\", \"position\", \"headerTemplate\", \"footerTemplate\", \"filterValue\", \"items\", \"markedItem\", \"ng-select-multiple\", \"ngClass\", \"id\", \"update\", \"scroll\", \"scrollToEnd\", \"outsideClick\", 4, \"ngIf\"], [\"class\", \"ng-value\", 3, \"ng-value-disabled\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"ng-value\"], [\"defaultLabelTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-hidden\", \"true\", 1, \"ng-value-icon\", \"left\", 3, \"click\"], [1, \"ng-value-label\", 3, \"ngItemLabel\", \"escape\"], [\"defaultLoadingSpinnerTemplate\", \"\"], [3, \"ngTemplateOutlet\"], [1, \"ng-spinner-loader\"], [1, \"ng-clear-wrapper\", 3, \"title\"], [\"aria-hidden\", \"true\", 1, \"ng-clear\"], [\"role\", \"listbox\", \"aria-label\", \"Options list\", 1, \"ng-dropdown-panel\", 3, \"virtualScroll\", \"bufferAmount\", \"appendTo\", \"position\", \"headerTemplate\", \"footerTemplate\", \"filterValue\", \"items\", \"markedItem\", \"ngClass\", \"id\", \"update\", \"scroll\", \"scrollToEnd\", \"outsideClick\"], [\"class\", \"ng-option\", 3, \"ng-option-disabled\", \"ng-option-selected\", \"ng-optgroup\", \"ng-option\", \"ng-option-child\", \"ng-option-marked\", \"click\", \"mouseover\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"ng-option\", \"role\", \"option\", 3, \"ng-option-marked\", \"mouseover\", \"click\", 4, \"ngIf\"], [1, \"ng-option\", 3, \"click\", \"mouseover\"], [\"defaultOptionTemplate\", \"\"], [1, \"ng-option-label\", 3, \"ngItemLabel\", \"escape\"], [\"role\", \"option\", 1, \"ng-option\", 3, \"mouseover\", \"click\"], [\"defaultTagTemplate\", \"\"], [1, \"ng-tag-label\"], [\"defaultNotFoundTemplate\", \"\"], [1, \"ng-option\", \"ng-option-disabled\"], [\"defaultTypeToSearchTemplate\", \"\"], [\"defaultLoadingTextTemplate\", \"\"]], template: function NgSelectComponent_Template(rf, ctx) { if (rf & 1) {\n        const _r52 = ɵngcc0.ɵɵgetCurrentView();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NgSelectComponent_Template_div_mousedown_0_listener($event) { return ctx.handleMousedown($event); });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, NgSelectComponent_ng_container_4_Template, 2, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(5, NgSelectComponent_5_Template, 1, 5, undefined, 3);\n        ɵngcc0.ɵɵelementStart(6, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(7, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"input\", function NgSelectComponent_Template_input_input_7_listener() { ɵngcc0.ɵɵrestoreView(_r52); const _r2 = ɵngcc0.ɵɵreference(8); return ctx.filter(_r2.value); })(\"compositionstart\", function NgSelectComponent_Template_input_compositionstart_7_listener() { return ctx.onCompositionStart(); })(\"compositionend\", function NgSelectComponent_Template_input_compositionend_7_listener() { ɵngcc0.ɵɵrestoreView(_r52); const _r2 = ɵngcc0.ɵɵreference(8); return ctx.onCompositionEnd(_r2.value); })(\"focus\", function NgSelectComponent_Template_input_focus_7_listener($event) { return ctx.onInputFocus($event); })(\"blur\", function NgSelectComponent_Template_input_blur_7_listener($event) { return ctx.onInputBlur($event); })(\"change\", function NgSelectComponent_Template_input_change_7_listener($event) { return $event.stopPropagation(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(9, NgSelectComponent_ng_container_9_Template, 4, 1, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(10, NgSelectComponent_span_10_Template, 3, 1, \"span\", 7);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 8);\n        ɵngcc0.ɵɵelement(12, \"span\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, NgSelectComponent_ng_dropdown_panel_13_Template, 7, 19, \"ng-dropdown-panel\", 10);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-appearance-outline\", ctx.appearance === \"outline\")(\"ng-has-value\", ctx.hasValue);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate(ctx.placeholder);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", (!ctx.multiLabelTemplate || !ctx.multiple) && ctx.selectedItems.length > 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple && ctx.multiLabelTemplate && ctx.selectedValues.length > 0);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.isOpen)(\"aria-owns\", ctx.isOpen ? ctx.dropdownId : null);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"readOnly\", !ctx.searchable || ctx.itemsList.maxItemsSelected)(\"disabled\", ctx.disabled)(\"value\", ctx.searchTerm ? ctx.searchTerm : \"\");\n        ɵngcc0.ɵɵattribute(\"id\", ctx.labelForId)(\"tabindex\", ctx.tabIndex)(\"aria-activedescendant\", ctx.isOpen ? ctx.itemsList == null ? null : ctx.itemsList.markedItem == null ? null : ctx.itemsList.markedItem.htmlId : null)(\"aria-controls\", ctx.isOpen ? ctx.dropdownId : null);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showClear());\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet, NgItemLabelDirective, NgDropdownPanelComponent, ɵngcc1.NgClass], styles: [\".ng-select{display:block;position:relative}.ng-select,.ng-select div,.ng-select input,.ng-select span{box-sizing:border-box}.ng-select [hidden]{display:none}.ng-select.ng-select-searchable .ng-select-container .ng-value-container .ng-input{opacity:1}.ng-select.ng-select-opened .ng-select-container{z-index:1001}.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-placeholder,.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-value{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:default;user-select:none}.ng-select.ng-select-disabled .ng-arrow-wrapper{cursor:default}.ng-select.ng-select-filtered .ng-placeholder{display:none}.ng-select .ng-select-container{cursor:default;display:flex;outline:none;overflow:hidden;position:relative;width:100%}.ng-select .ng-select-container .ng-value-container{display:flex;flex:1}.ng-select .ng-select-container .ng-value-container .ng-input{opacity:0}.ng-select .ng-select-container .ng-value-container .ng-input>input{background:none transparent;border:0;box-shadow:none;box-sizing:content-box;cursor:default;outline:none;padding:0;width:100%}.ng-select .ng-select-container .ng-value-container .ng-input>input::-ms-clear{display:none}.ng-select .ng-select-container .ng-value-container .ng-input>input[readonly]{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;padding:0;user-select:none;width:0}.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value{visibility:hidden}.ng-select.ng-select-single .ng-select-container .ng-value-container,.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{left:0;position:absolute;width:100%}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{flex-wrap:wrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{position:absolute}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{white-space:nowrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{cursor:pointer}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{flex:1;z-index:2}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{z-index:1}.ng-select .ng-clear-wrapper{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;position:relative;user-select:none;width:17px}.ng-select .ng-clear-wrapper .ng-clear{display:inline-block;font-size:18px;line-height:1;pointer-events:none}.ng-select .ng-spinner-loader{-webkit-animation:load8 .8s linear infinite;animation:load8 .8s linear infinite;border:2px solid rgba(66,66,66,.2);border-left-color:#424242;border-radius:50%;font-size:10px;height:17px;margin-right:5px;position:relative;text-indent:-9999em;transform:translateZ(0);width:17px}.ng-select .ng-spinner-loader:after{border-radius:50%;height:17px;width:17px}@-webkit-keyframes load8{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes load8{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.ng-select .ng-arrow-wrapper{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;position:relative;text-align:center;user-select:none}.ng-select .ng-arrow-wrapper .ng-arrow{display:inline-block;height:0;pointer-events:none;position:relative;width:0}.ng-dropdown-panel{-webkit-overflow-scrolling:touch;box-sizing:border-box;opacity:0;position:absolute;width:100%;z-index:1050}.ng-dropdown-panel .ng-dropdown-panel-items{box-sizing:border-box;display:block;height:auto;max-height:240px;overflow-y:auto}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup,.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{box-sizing:border-box;cursor:pointer;display:block}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .ng-option-label:empty:before{content:\\\"\\\\200b\\\"}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .highlighted{font-weight:700;text-decoration:underline}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.disabled{cursor:default}.ng-dropdown-panel .scroll-host{-webkit-overflow-scrolling:touch;display:block;overflow:hidden;overflow-y:auto;position:relative}.ng-dropdown-panel .scrollable-content{height:100%;left:0;position:absolute;top:0;width:100%}.ng-dropdown-panel .total-padding{opacity:0;width:1px}\"], encapsulation: 2, changeDetection: 0 });\nNgSelectComponent.ctorParameters = () => [\n    { type: String, decorators: [{ type: Attribute, args: ['class',] }] },\n    { type: undefined, decorators: [{ type: Attribute, args: ['autofocus',] }] },\n    { type: NgSelectConfig },\n    { type: undefined, decorators: [{ type: Inject, args: [SELECTION_MODEL_FACTORY,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ConsoleService }\n];\nNgSelectComponent.propDecorators = {\n    bindLabel: [{ type: Input }],\n    bindValue: [{ type: Input }],\n    markFirst: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    notFoundText: [{ type: Input }],\n    typeToSearchText: [{ type: Input }],\n    addTagText: [{ type: Input }],\n    loadingText: [{ type: Input }],\n    clearAllText: [{ type: Input }],\n    appearance: [{ type: Input }],\n    dropdownPosition: [{ type: Input }],\n    appendTo: [{ type: Input }],\n    loading: [{ type: Input }],\n    closeOnSelect: [{ type: Input }],\n    hideSelected: [{ type: Input }],\n    selectOnTab: [{ type: Input }],\n    openOnEnter: [{ type: Input }],\n    maxSelectedItems: [{ type: Input }],\n    groupBy: [{ type: Input }],\n    groupValue: [{ type: Input }],\n    bufferAmount: [{ type: Input }],\n    virtualScroll: [{ type: Input }],\n    selectableGroup: [{ type: Input }],\n    selectableGroupAsModel: [{ type: Input }],\n    searchFn: [{ type: Input }],\n    trackByFn: [{ type: Input }],\n    clearOnBackspace: [{ type: Input }],\n    labelForId: [{ type: Input }],\n    inputAttrs: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    readonly: [{ type: Input }],\n    searchWhileComposing: [{ type: Input }],\n    minTermLength: [{ type: Input }],\n    editableSearchTerm: [{ type: Input }],\n    keyDownFn: [{ type: Input }],\n    typeahead: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-typeahead',] }],\n    multiple: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-multiple',] }],\n    addTag: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-taggable',] }],\n    searchable: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-searchable',] }],\n    clearable: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-clearable',] }],\n    isOpen: [{ type: Input }, { type: HostBinding, args: ['class.ng-select-opened',] }],\n    items: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    clearSearchOnAdd: [{ type: Input }],\n    blurEvent: [{ type: Output, args: ['blur',] }],\n    focusEvent: [{ type: Output, args: ['focus',] }],\n    changeEvent: [{ type: Output, args: ['change',] }],\n    openEvent: [{ type: Output, args: ['open',] }],\n    closeEvent: [{ type: Output, args: ['close',] }],\n    searchEvent: [{ type: Output, args: ['search',] }],\n    clearEvent: [{ type: Output, args: ['clear',] }],\n    addEvent: [{ type: Output, args: ['add',] }],\n    removeEvent: [{ type: Output, args: ['remove',] }],\n    scroll: [{ type: Output, args: ['scroll',] }],\n    scrollToEnd: [{ type: Output, args: ['scrollToEnd',] }],\n    optionTemplate: [{ type: ContentChild, args: [NgOptionTemplateDirective, { read: TemplateRef },] }],\n    optgroupTemplate: [{ type: ContentChild, args: [NgOptgroupTemplateDirective, { read: TemplateRef },] }],\n    labelTemplate: [{ type: ContentChild, args: [NgLabelTemplateDirective, { read: TemplateRef },] }],\n    multiLabelTemplate: [{ type: ContentChild, args: [NgMultiLabelTemplateDirective, { read: TemplateRef },] }],\n    headerTemplate: [{ type: ContentChild, args: [NgHeaderTemplateDirective, { read: TemplateRef },] }],\n    footerTemplate: [{ type: ContentChild, args: [NgFooterTemplateDirective, { read: TemplateRef },] }],\n    notFoundTemplate: [{ type: ContentChild, args: [NgNotFoundTemplateDirective, { read: TemplateRef },] }],\n    typeToSearchTemplate: [{ type: ContentChild, args: [NgTypeToSearchTemplateDirective, { read: TemplateRef },] }],\n    loadingTextTemplate: [{ type: ContentChild, args: [NgLoadingTextTemplateDirective, { read: TemplateRef },] }],\n    tagTemplate: [{ type: ContentChild, args: [NgTagTemplateDirective, { read: TemplateRef },] }],\n    loadingSpinnerTemplate: [{ type: ContentChild, args: [NgLoadingSpinnerTemplateDirective, { read: TemplateRef },] }],\n    dropdownPanel: [{ type: ViewChild, args: [forwardRef(() => NgDropdownPanelComponent),] }],\n    searchInput: [{ type: ViewChild, args: ['searchInput', { static: true },] }],\n    ngOptions: [{ type: ContentChildren, args: [NgOptionComponent, { descendants: true },] }],\n    disabled: [{ type: HostBinding, args: ['class.ng-select-disabled',] }],\n    filtered: [{ type: HostBinding, args: ['class.ng-select-filtered',] }],\n    handleKeyDown: [{ type: HostListener, args: ['keydown', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-select',\n                template: \"<div\\n    (mousedown)=\\\"handleMousedown($event)\\\"\\n    [class.ng-appearance-outline]=\\\"appearance === 'outline'\\\"\\n    [class.ng-has-value]=\\\"hasValue\\\"\\n    class=\\\"ng-select-container\\\">\\n\\n    <div class=\\\"ng-value-container\\\">\\n        <div class=\\\"ng-placeholder\\\">{{placeholder}}</div>\\n\\n        <ng-container *ngIf=\\\"(!multiLabelTemplate  || !multiple ) && selectedItems.length > 0\\\">\\n            <div [class.ng-value-disabled]=\\\"item.disabled\\\" class=\\\"ng-value\\\" *ngFor=\\\"let item of selectedItems; trackBy: trackByOption\\\">\\n                <ng-template #defaultLabelTemplate>\\n                    <span class=\\\"ng-value-icon left\\\" (click)=\\\"unselect(item);\\\" aria-hidden=\\\"true\\\">\\u00D7</span>\\n                    <span class=\\\"ng-value-label\\\" [ngItemLabel]=\\\"item.label\\\" [escape]=\\\"escapeHTML\\\"></span>\\n                </ng-template>\\n\\n                <ng-template\\n                    [ngTemplateOutlet]=\\\"labelTemplate || defaultLabelTemplate\\\"\\n                    [ngTemplateOutletContext]=\\\"{ item: item.value, clear: clearItem, label: item.label }\\\">\\n                </ng-template>\\n            </div>\\n        </ng-container>\\n\\n        <ng-template *ngIf=\\\"multiple && multiLabelTemplate && selectedValues.length > 0\\\"\\n                [ngTemplateOutlet]=\\\"multiLabelTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ items: selectedValues, clear: clearItem }\\\">\\n        </ng-template>\\n\\n        <div class=\\\"ng-input\\\"\\n            role=\\\"combobox\\\" \\n            [attr.aria-expanded]=\\\"isOpen\\\" \\n            [attr.aria-owns]=\\\"isOpen ? dropdownId : null\\\" \\n            aria-haspopup=\\\"listbox\\\">\\n\\n            <input #searchInput\\n                   [attr.id]=\\\"labelForId\\\"\\n                   [attr.tabindex]=\\\"tabIndex\\\"\\n                   [readOnly]=\\\"!searchable || itemsList.maxItemsSelected\\\"\\n                   [disabled]=\\\"disabled\\\"\\n                   [value]=\\\"searchTerm ? searchTerm : ''\\\"\\n                   (input)=\\\"filter(searchInput.value)\\\"\\n                   (compositionstart)=\\\"onCompositionStart()\\\"\\n                   (compositionend)=\\\"onCompositionEnd(searchInput.value)\\\"\\n                   (focus)=\\\"onInputFocus($event)\\\"\\n                   (blur)=\\\"onInputBlur($event)\\\"\\n                   (change)=\\\"$event.stopPropagation()\\\"\\n                   [attr.aria-activedescendant]=\\\"isOpen ? itemsList?.markedItem?.htmlId : null\\\"\\n                   aria-autocomplete=\\\"list\\\"\\n                   [attr.aria-controls]=\\\"isOpen ? dropdownId : null\\\">\\n        </div>\\n    </div>\\n\\n    <ng-container *ngIf=\\\"loading\\\">\\n        <ng-template #defaultLoadingSpinnerTemplate>\\n            <div class=\\\"ng-spinner-loader\\\"></div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"loadingSpinnerTemplate || defaultLoadingSpinnerTemplate\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <span *ngIf=\\\"showClear()\\\" class=\\\"ng-clear-wrapper\\\" title=\\\"{{clearAllText}}\\\">\\n        <span class=\\\"ng-clear\\\" aria-hidden=\\\"true\\\">\\u00D7</span>\\n    </span>\\n\\n    <span class=\\\"ng-arrow-wrapper\\\">\\n        <span class=\\\"ng-arrow\\\"></span>\\n    </span>\\n</div>\\n\\n<ng-dropdown-panel *ngIf=\\\"isOpen\\\"\\n                   class=\\\"ng-dropdown-panel\\\"\\n                   [virtualScroll]=\\\"virtualScroll\\\"\\n                   [bufferAmount]=\\\"bufferAmount\\\"\\n                   [appendTo]=\\\"appendTo\\\"\\n                   [position]=\\\"dropdownPosition\\\"\\n                   [headerTemplate]=\\\"headerTemplate\\\"\\n                   [footerTemplate]=\\\"footerTemplate\\\"\\n                   [filterValue]=\\\"searchTerm\\\"\\n                   [items]=\\\"itemsList.filteredItems\\\"\\n                   [markedItem]=\\\"itemsList.markedItem\\\"\\n                   (update)=\\\"viewPortItems = $event\\\"\\n                   (scroll)=\\\"scroll.emit($event)\\\"\\n                   (scrollToEnd)=\\\"scrollToEnd.emit($event)\\\"\\n                   (outsideClick)=\\\"close()\\\"\\n                   [class.ng-select-multiple]=\\\"multiple\\\"\\n                   [ngClass]=\\\"appendTo ? classes : null\\\"\\n                   [id]=\\\"dropdownId\\\"\\n                   role=\\\"listbox\\\"\\n                   aria-label=\\\"Options list\\\">\\n\\n    <ng-container>\\n        <div class=\\\"ng-option\\\" [attr.role]=\\\"item.children ? 'group' : 'option'\\\" (click)=\\\"toggleItem(item)\\\" (mouseover)=\\\"onItemHover(item)\\\"\\n                *ngFor=\\\"let item of viewPortItems; trackBy: trackByOption\\\"\\n                [class.ng-option-disabled]=\\\"item.disabled\\\"\\n                [class.ng-option-selected]=\\\"item.selected\\\"\\n                [class.ng-optgroup]=\\\"item.children\\\"\\n                [class.ng-option]=\\\"!item.children\\\"\\n                [class.ng-option-child]=\\\"!!item.parent\\\"\\n                [class.ng-option-marked]=\\\"item === itemsList.markedItem\\\"\\n                [attr.aria-selected]=\\\"item.selected\\\"\\n                [attr.id]=\\\"item?.htmlId\\\">\\n\\n            <ng-template #defaultOptionTemplate>\\n                <span class=\\\"ng-option-label\\\" [ngItemLabel]=\\\"item.label\\\" [escape]=\\\"escapeHTML\\\"></span>\\n            </ng-template>\\n\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"item.children ? (optgroupTemplate || defaultOptionTemplate) : (optionTemplate || defaultOptionTemplate)\\\"\\n                [ngTemplateOutletContext]=\\\"{ item: item.value, item$:item, index: item.index, searchTerm: searchTerm }\\\">\\n            </ng-template>\\n        </div>\\n\\n        <div class=\\\"ng-option\\\" [class.ng-option-marked]=\\\"!itemsList.markedItem\\\" (mouseover)=\\\"itemsList.unmarkItem()\\\" role=\\\"option\\\" (click)=\\\"selectTag()\\\" *ngIf=\\\"showAddTag\\\">\\n            <ng-template #defaultTagTemplate>\\n                <span><span class=\\\"ng-tag-label\\\">{{addTagText}}</span>\\\"{{searchTerm}}\\\"</span>\\n            </ng-template>\\n\\n            <ng-template\\n                [ngTemplateOutlet]=\\\"tagTemplate || defaultTagTemplate\\\"\\n                [ngTemplateOutletContext]=\\\"{ searchTerm: searchTerm }\\\">\\n            </ng-template>\\n        </div>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"showNoItemsFound()\\\">\\n        <ng-template #defaultNotFoundTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{notFoundText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"notFoundTemplate || defaultNotFoundTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{ searchTerm: searchTerm }\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"showTypeToSearch()\\\">\\n        <ng-template #defaultTypeToSearchTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{typeToSearchText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"typeToSearchTemplate || defaultTypeToSearchTemplate\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"loading && itemsList.filteredItems.length === 0\\\">\\n        <ng-template #defaultLoadingTextTemplate>\\n            <div class=\\\"ng-option ng-option-disabled\\\">{{loadingText}}</div>\\n        </ng-template>\\n\\n        <ng-template\\n            [ngTemplateOutlet]=\\\"loadingTextTemplate || defaultLoadingTextTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{ searchTerm: searchTerm }\\\">\\n        </ng-template>\\n    </ng-container>\\n\\n</ng-dropdown-panel>\\n\",\n                providers: [{\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => NgSelectComponent),\n                        multi: true\n                    }, NgDropdownPanelService],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    '[class.ng-select]': 'useDefaultClass',\n                    '[class.ng-select-single]': '!multiple'\n                },\n                styles: [\".ng-select{display:block;position:relative}.ng-select,.ng-select div,.ng-select input,.ng-select span{box-sizing:border-box}.ng-select [hidden]{display:none}.ng-select.ng-select-searchable .ng-select-container .ng-value-container .ng-input{opacity:1}.ng-select.ng-select-opened .ng-select-container{z-index:1001}.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-placeholder,.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-value{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:default;user-select:none}.ng-select.ng-select-disabled .ng-arrow-wrapper{cursor:default}.ng-select.ng-select-filtered .ng-placeholder{display:none}.ng-select .ng-select-container{cursor:default;display:flex;outline:none;overflow:hidden;position:relative;width:100%}.ng-select .ng-select-container .ng-value-container{display:flex;flex:1}.ng-select .ng-select-container .ng-value-container .ng-input{opacity:0}.ng-select .ng-select-container .ng-value-container .ng-input>input{background:none transparent;border:0;box-shadow:none;box-sizing:content-box;cursor:default;outline:none;padding:0;width:100%}.ng-select .ng-select-container .ng-value-container .ng-input>input::-ms-clear{display:none}.ng-select .ng-select-container .ng-value-container .ng-input>input[readonly]{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;padding:0;user-select:none;width:0}.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value{visibility:hidden}.ng-select.ng-select-single .ng-select-container .ng-value-container,.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{left:0;position:absolute;width:100%}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{flex-wrap:wrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{position:absolute}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{white-space:nowrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{cursor:pointer}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{flex:1;z-index:2}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{z-index:1}.ng-select .ng-clear-wrapper{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;position:relative;user-select:none;width:17px}.ng-select .ng-clear-wrapper .ng-clear{display:inline-block;font-size:18px;line-height:1;pointer-events:none}.ng-select .ng-spinner-loader{-webkit-animation:load8 .8s linear infinite;animation:load8 .8s linear infinite;border:2px solid rgba(66,66,66,.2);border-left-color:#424242;border-radius:50%;font-size:10px;height:17px;margin-right:5px;position:relative;text-indent:-9999em;transform:translateZ(0);width:17px}.ng-select .ng-spinner-loader:after{border-radius:50%;height:17px;width:17px}@-webkit-keyframes load8{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes load8{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.ng-select .ng-arrow-wrapper{-moz-user-select:none;-ms-user-select:none;-webkit-user-select:none;cursor:pointer;position:relative;text-align:center;user-select:none}.ng-select .ng-arrow-wrapper .ng-arrow{display:inline-block;height:0;pointer-events:none;position:relative;width:0}.ng-dropdown-panel{-webkit-overflow-scrolling:touch;box-sizing:border-box;opacity:0;position:absolute;width:100%;z-index:1050}.ng-dropdown-panel .ng-dropdown-panel-items{box-sizing:border-box;display:block;height:auto;max-height:240px;overflow-y:auto}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup,.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{box-sizing:border-box;cursor:pointer;display:block}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .ng-option-label:empty:before{content:\\\"\\\\200b\\\"}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .highlighted{font-weight:700;text-decoration:underline}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.disabled{cursor:default}.ng-dropdown-panel .scroll-host{-webkit-overflow-scrolling:touch;display:block;overflow:hidden;overflow-y:auto;position:relative}.ng-dropdown-panel .scrollable-content{height:100%;left:0;position:absolute;top:0;width:100%}.ng-dropdown-panel .total-padding{opacity:0;width:1px}\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Attribute,\n                args: ['class']\n            }] }, { type: undefined, decorators: [{\n                type: Attribute,\n                args: ['autofocus']\n            }] }, { type: NgSelectConfig }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [SELECTION_MODEL_FACTORY]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ConsoleService }]; }, { markFirst: [{\n            type: Input\n        }], dropdownPosition: [{\n            type: Input\n        }], loading: [{\n            type: Input\n        }], closeOnSelect: [{\n            type: Input\n        }], hideSelected: [{\n            type: Input\n        }], selectOnTab: [{\n            type: Input\n        }], bufferAmount: [{\n            type: Input\n        }], selectableGroup: [{\n            type: Input\n        }], selectableGroupAsModel: [{\n            type: Input\n        }], searchFn: [{\n            type: Input\n        }], trackByFn: [{\n            type: Input\n        }], clearOnBackspace: [{\n            type: Input\n        }], labelForId: [{\n            type: Input\n        }], inputAttrs: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], searchWhileComposing: [{\n            type: Input\n        }], minTermLength: [{\n            type: Input\n        }], editableSearchTerm: [{\n            type: Input\n        }], keyDownFn: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-multiple']\n        }], addTag: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-taggable']\n        }], searchable: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-searchable']\n        }], clearable: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-clearable']\n        }], isOpen: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-opened']\n        }], blurEvent: [{\n            type: Output,\n            args: ['blur']\n        }], focusEvent: [{\n            type: Output,\n            args: ['focus']\n        }], changeEvent: [{\n            type: Output,\n            args: ['change']\n        }], openEvent: [{\n            type: Output,\n            args: ['open']\n        }], closeEvent: [{\n            type: Output,\n            args: ['close']\n        }], searchEvent: [{\n            type: Output,\n            args: ['search']\n        }], clearEvent: [{\n            type: Output,\n            args: ['clear']\n        }], addEvent: [{\n            type: Output,\n            args: ['add']\n        }], removeEvent: [{\n            type: Output,\n            args: ['remove']\n        }], scroll: [{\n            type: Output,\n            args: ['scroll']\n        }], scrollToEnd: [{\n            type: Output,\n            args: ['scrollToEnd']\n        }], items: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], clearSearchOnAdd: [{\n            type: Input\n        }], disabled: [{\n            type: HostBinding,\n            args: ['class.ng-select-disabled']\n        }], filtered: [{\n            type: HostBinding,\n            args: ['class.ng-select-filtered']\n        }], handleKeyDown: [{\n            type: HostListener,\n            args: ['keydown', ['$event']]\n        }], bindLabel: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], notFoundText: [{\n            type: Input\n        }], typeToSearchText: [{\n            type: Input\n        }], addTagText: [{\n            type: Input\n        }], loadingText: [{\n            type: Input\n        }], clearAllText: [{\n            type: Input\n        }], virtualScroll: [{\n            type: Input\n        }], openOnEnter: [{\n            type: Input\n        }], appendTo: [{\n            type: Input\n        }], bindValue: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], maxSelectedItems: [{\n            type: Input\n        }], groupBy: [{\n            type: Input\n        }], groupValue: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], typeahead: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['class.ng-select-typeahead']\n        }], optionTemplate: [{\n            type: ContentChild,\n            args: [NgOptionTemplateDirective, { read: TemplateRef }]\n        }], optgroupTemplate: [{\n            type: ContentChild,\n            args: [NgOptgroupTemplateDirective, { read: TemplateRef }]\n        }], labelTemplate: [{\n            type: ContentChild,\n            args: [NgLabelTemplateDirective, { read: TemplateRef }]\n        }], multiLabelTemplate: [{\n            type: ContentChild,\n            args: [NgMultiLabelTemplateDirective, { read: TemplateRef }]\n        }], headerTemplate: [{\n            type: ContentChild,\n            args: [NgHeaderTemplateDirective, { read: TemplateRef }]\n        }], footerTemplate: [{\n            type: ContentChild,\n            args: [NgFooterTemplateDirective, { read: TemplateRef }]\n        }], notFoundTemplate: [{\n            type: ContentChild,\n            args: [NgNotFoundTemplateDirective, { read: TemplateRef }]\n        }], typeToSearchTemplate: [{\n            type: ContentChild,\n            args: [NgTypeToSearchTemplateDirective, { read: TemplateRef }]\n        }], loadingTextTemplate: [{\n            type: ContentChild,\n            args: [NgLoadingTextTemplateDirective, { read: TemplateRef }]\n        }], tagTemplate: [{\n            type: ContentChild,\n            args: [NgTagTemplateDirective, { read: TemplateRef }]\n        }], loadingSpinnerTemplate: [{\n            type: ContentChild,\n            args: [NgLoadingSpinnerTemplateDirective, { read: TemplateRef }]\n        }], dropdownPanel: [{\n            type: ViewChild,\n            args: [forwardRef(() => NgDropdownPanelComponent)]\n        }], searchInput: [{\n            type: ViewChild,\n            args: ['searchInput', { static: true }]\n        }], ngOptions: [{\n            type: ContentChildren,\n            args: [NgOptionComponent, { descendants: true }]\n        }] }); })();\n\nfunction DefaultSelectionModelFactory() {\n    return new DefaultSelectionModel();\n}\nclass DefaultSelectionModel {\n    constructor() {\n        this._selected = [];\n    }\n    get value() {\n        return this._selected;\n    }\n    select(item, multiple, groupAsModel) {\n        item.selected = true;\n        if (!item.children || (!multiple && groupAsModel)) {\n            this._selected.push(item);\n        }\n        if (multiple) {\n            if (item.parent) {\n                const childrenCount = item.parent.children.length;\n                const selectedCount = item.parent.children.filter(x => x.selected).length;\n                item.parent.selected = childrenCount === selectedCount;\n            }\n            else if (item.children) {\n                this._setChildrenSelectedState(item.children, true);\n                this._removeChildren(item);\n                if (groupAsModel && this._activeChildren(item)) {\n                    this._selected = [...this._selected.filter(x => x.parent !== item), item];\n                }\n                else {\n                    this._selected = [...this._selected, ...item.children.filter(x => !x.disabled)];\n                }\n            }\n        }\n    }\n    unselect(item, multiple) {\n        this._selected = this._selected.filter(x => x !== item);\n        item.selected = false;\n        if (multiple) {\n            if (item.parent && item.parent.selected) {\n                const children = item.parent.children;\n                this._removeParent(item.parent);\n                this._removeChildren(item.parent);\n                this._selected.push(...children.filter(x => x !== item && !x.disabled));\n                item.parent.selected = false;\n            }\n            else if (item.children) {\n                this._setChildrenSelectedState(item.children, false);\n                this._removeChildren(item);\n            }\n        }\n    }\n    clear(keepDisabled) {\n        this._selected = keepDisabled ? this._selected.filter(x => x.disabled) : [];\n    }\n    _setChildrenSelectedState(children, selected) {\n        for (const child of children) {\n            if (child.disabled) {\n                continue;\n            }\n            child.selected = selected;\n        }\n        ;\n    }\n    _removeChildren(parent) {\n        this._selected = [\n            ...this._selected.filter(x => x.parent !== parent),\n            ...parent.children.filter(x => x.parent === parent && x.disabled && x.selected)\n        ];\n    }\n    _removeParent(parent) {\n        this._selected = this._selected.filter(x => x !== parent);\n    }\n    _activeChildren(item) {\n        return item.children.every(x => !x.disabled || x.selected);\n    }\n}\n\nconst ɵ0 = DefaultSelectionModelFactory;\nclass NgSelectModule {\n}\nNgSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgSelectModule });\nNgSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgSelectModule_Factory(t) { return new (t || NgSelectModule)(); }, providers: [\n        { provide: SELECTION_MODEL_FACTORY, useValue: ɵ0 }\n    ], imports: [[\n            CommonModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgSelectModule, { declarations: function () { return [NgDropdownPanelComponent, NgOptionComponent, NgSelectComponent, NgOptgroupTemplateDirective, NgOptionTemplateDirective, NgLabelTemplateDirective, NgMultiLabelTemplateDirective, NgHeaderTemplateDirective, NgFooterTemplateDirective, NgNotFoundTemplateDirective, NgTypeToSearchTemplateDirective, NgLoadingTextTemplateDirective, NgTagTemplateDirective, NgLoadingSpinnerTemplateDirective, NgItemLabelDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgSelectComponent, NgOptionComponent, NgOptgroupTemplateDirective, NgOptionTemplateDirective, NgLabelTemplateDirective, NgMultiLabelTemplateDirective, NgHeaderTemplateDirective, NgFooterTemplateDirective, NgNotFoundTemplateDirective, NgTypeToSearchTemplateDirective, NgLoadingTextTemplateDirective, NgTagTemplateDirective, NgLoadingSpinnerTemplateDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgDropdownPanelComponent,\n                    NgOptionComponent,\n                    NgSelectComponent,\n                    NgOptgroupTemplateDirective,\n                    NgOptionTemplateDirective,\n                    NgLabelTemplateDirective,\n                    NgMultiLabelTemplateDirective,\n                    NgHeaderTemplateDirective,\n                    NgFooterTemplateDirective,\n                    NgNotFoundTemplateDirective,\n                    NgTypeToSearchTemplateDirective,\n                    NgLoadingTextTemplateDirective,\n                    NgTagTemplateDirective,\n                    NgLoadingSpinnerTemplateDirective,\n                    NgItemLabelDirective\n                ],\n                imports: [\n                    CommonModule\n                ],\n                exports: [\n                    NgSelectComponent,\n                    NgOptionComponent,\n                    NgOptgroupTemplateDirective,\n                    NgOptionTemplateDirective,\n                    NgLabelTemplateDirective,\n                    NgMultiLabelTemplateDirective,\n                    NgHeaderTemplateDirective,\n                    NgFooterTemplateDirective,\n                    NgNotFoundTemplateDirective,\n                    NgTypeToSearchTemplateDirective,\n                    NgLoadingTextTemplateDirective,\n                    NgTagTemplateDirective,\n                    NgLoadingSpinnerTemplateDirective\n                ],\n                providers: [\n                    { provide: SELECTION_MODEL_FACTORY, useValue: ɵ0 }\n                ]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ng-select\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgSelectComponent, NgSelectConfig, NgSelectModule, SELECTION_MODEL_FACTORY, DefaultSelectionModelFactory as ɵb, DefaultSelectionModel as ɵc, NgDropdownPanelService as ɵd, NgItemLabelDirective as ɵe, NgOptionTemplateDirective as ɵf, NgOptgroupTemplateDirective as ɵg, NgLabelTemplateDirective as ɵh, NgMultiLabelTemplateDirective as ɵi, NgHeaderTemplateDirective as ɵj, NgFooterTemplateDirective as ɵk, NgNotFoundTemplateDirective as ɵl, NgTypeToSearchTemplateDirective as ɵm, NgLoadingTextTemplateDirective as ɵn, NgTagTemplateDirective as ɵo, NgLoadingSpinnerTemplateDirective as ɵp, NgDropdownPanelComponent as ɵq, NgOptionComponent as ɵr, ConsoleService as ɵs };\n\n//# sourceMappingURL=ng-select-ng-select.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport {\r\n  Controllers,\r\n  Actions,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { OrderStatusCreateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-order-status-create',\r\n  templateUrl: './order-status-create.component.html',\r\n  styleUrls: ['./order-status-create.component.css'],\r\n})\r\nexport class OrderStatusCreateComponent implements OnInit {\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  ngOnInit(): void {\r\n    this.dynamicFormInput = new DynamicFormInput();\r\n    this.spinner.show();\r\n    this.getFieldsData();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    let formData = new FormData();\r\n    Object.entries(event.data).forEach((element) => {\r\n      var file;\r\n      if (element[0] == 'icon') {\r\n        file = element[1] as Blob;\r\n        formData.append(element[0], file);\r\n      } else {\r\n        formData.append(element[0], element[1] as string);\r\n      }\r\n    });\r\n    this.baseService\r\n      .postFormItem(Controllers.OrderStatus, Actions.PostItem, formData)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(res, 'success');\r\n          this.router.navigate(['/forms/order-status-list']);\r\n        },\r\n        (error) => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          } else {\r\n            this.notification.showNotification(\r\n              this.translate.instant('somethingWentWrong'),\r\n              'danger'\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n  public getFieldsData() {\r\n    this.dynamicFormInput = OrderStatusCreateForm;\r\n    this.isLoading = false;\r\n    this.spinner.hide();\r\n  }\r\n  public getTranslatableText(key: string) {\r\n    var textValue = '';\r\n    this.translate.get(key).subscribe((text: string) => {\r\n      textValue = text;\r\n    });\r\n    return textValue;\r\n  }\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'areasList'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'areasManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n                            <button routerLink=\\\"/forms/area-create\\\" class=\\\"btn btn-primary\\\" color=\\\"primary\\\"\\r\\n                                mat-raised-button type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' |\\r\\n                                translate}} \\r\\n                            </button>\\r\\n                        </div>\\r\\n\\r\\n                        <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\"\\r\\n                            [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\"\\r\\n                                (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\" [pageNumber]=\\\"pageNumber\\\"\\r\\n                                *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                            </app-dynamic-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'orderCreate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'ordersManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"/*\\r\\n * Design Reference – https://dribbble.com/shots/4580930-Toast-Messages\\r\\n */\\r\\n\\r\\n/* basic */\\r\\n\\r\\n*,\\r\\n*:before,\\r\\n*:after {\\r\\n\\tbox-sizing: border-box;\\r\\n}\\r\\n\\r\\nhtml,\\r\\nbody {\\r\\n\\theight: 100%;\\r\\n}\\r\\n\\r\\nbody {\\r\\n\\tfont: 16px/1.2 \\\"Roboto\\\", sans-serif;\\r\\n\\tcolor: #333;\\r\\n}\\r\\n\\r\\n.blog {\\r\\n\\tfont-size: 14px;\\r\\n\\tfont-weight: bold;\\r\\n\\ttext-align: center;\\r\\n\\tposition: absolute;\\r\\n\\tbottom: 15px;\\r\\n\\tleft: 50%;\\r\\n\\ttransform: translateX(-50%);\\r\\n\\tz-index: 1;\\r\\n}\\r\\n\\r\\n/* container */\\r\\n\\r\\n.container {\\r\\n\\tpadding: 8px;\\r\\n\\twidth: auto;\\r\\n\\theight: auto;\\r\\n\\tposition: absolute;\\r\\n\\ttop: 50%;\\r\\n\\tleft: 50%;\\r\\n\\ttransform: translate(-50%, -50%);\\r\\n\\tz-index: 1;\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n\\r\\n/* flash_msg */\\r\\n\\r\\n.flash_msg .msg {\\r\\n\\tdisplay: flex;\\r\\n\\talign-items: center;\\r\\n\\tpadding: 12px;\\r\\n\\tborder-radius: 10px;\\r\\n\\tbox-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\\r\\n\\tposition: relative;\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n\\r\\n.flash_msg .msg:before {\\r\\n\\tcontent: \\\"\\\";\\r\\n\\tdisplay: block;\\r\\n\\twidth: 5px;\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tleft: 0;\\r\\n\\tbottom: 0;\\r\\n}\\r\\n\\r\\n.flash_msg .msg + .msg {\\r\\n\\tmargin-top: 24px;\\r\\n}\\r\\n\\r\\n.msg .text {\\r\\n\\tflex-grow: 1;\\r\\n\\tpadding: 0 8px;\\r\\n}\\r\\n\\r\\n.msg .text .title {\\r\\n\\tfont-size: 20px;\\r\\n\\tfont-weight: bold;\\r\\n\\tmargin-bottom: 8px;\\r\\n}\\r\\n\\r\\n.msg .text .content {\\r\\n\\tcolor: #a9a9a9;\\r\\n}\\r\\n\\r\\n.msg i {\\r\\n\\tdisplay: flex;\\r\\n\\talign-items: center;\\r\\n\\tjustify-content: center;\\r\\n\\twidth: 30px;\\r\\n\\theight: 30px;\\r\\n\\tfont-size: 16px;\\r\\n\\tborder-radius: 50%;\\r\\n}\\r\\n\\r\\n.icon-circle{\\r\\n    color: white;\\r\\n\\tbackground: #037cc0;\\r\\n    width: 40px;\\r\\n    height: 40px;\\r\\n    border-radius: 50%;\\r\\n    padding: 8px;\\r\\n}\\r\\n\\r\\n.s_base mat-icon {\\r\\n\\tcolor: white;\\r\\n\\tbackground: #037cc0;\\r\\n}\\r\\n\\r\\n.s_base:before {\\r\\n\\tbackground: #037cc0;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9mb3Jtcy1tb2R1bGUvbGlzdC9tZXNzYWdlcy1saXN0L21lc3NhZ2VzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRTs7QUFFRixVQUFVOztBQUNWOzs7Q0FHQyxzQkFBc0I7QUFDdkI7O0FBQ0E7O0NBRUMsWUFBWTtBQUNiOztBQUNBO0NBQ0MsbUNBQW1DO0NBQ25DLFdBQVc7QUFDWjs7QUFDQTtDQUNDLGVBQWU7Q0FDZixpQkFBaUI7Q0FDakIsa0JBQWtCO0NBQ2xCLGtCQUFrQjtDQUNsQixZQUFZO0NBQ1osU0FBUztDQUNULDJCQUEyQjtDQUMzQixVQUFVO0FBQ1g7O0FBR0EsY0FBYzs7QUFDZDtDQUNDLFlBQVk7Q0FDWixXQUFXO0NBQ1gsWUFBWTtDQUNaLGtCQUFrQjtDQUNsQixRQUFRO0NBQ1IsU0FBUztDQUNULGdDQUFnQztDQUNoQyxVQUFVO0NBQ1YsZ0JBQWdCO0FBQ2pCOztBQUVBLGNBQWM7O0FBQ2Q7Q0FDQyxhQUFhO0NBQ2IsbUJBQW1CO0NBQ25CLGFBQWE7Q0FDYixtQkFBbUI7Q0FDbkIsMkNBQTJDO0NBQzNDLGtCQUFrQjtDQUNsQixnQkFBZ0I7QUFDakI7O0FBQ0E7Q0FDQyxXQUFXO0NBQ1gsY0FBYztDQUNkLFVBQVU7Q0FDVixrQkFBa0I7Q0FDbEIsTUFBTTtDQUNOLE9BQU87Q0FDUCxTQUFTO0FBQ1Y7O0FBQ0E7Q0FDQyxnQkFBZ0I7QUFDakI7O0FBQ0E7Q0FDQyxZQUFZO0NBQ1osY0FBYztBQUNmOztBQUNBO0NBQ0MsZUFBZTtDQUNmLGlCQUFpQjtDQUNqQixrQkFBa0I7QUFDbkI7O0FBQ0E7Q0FDQyxjQUFjO0FBQ2Y7O0FBRUE7Q0FDQyxhQUFhO0NBQ2IsbUJBQW1CO0NBQ25CLHVCQUF1QjtDQUN2QixXQUFXO0NBQ1gsWUFBWTtDQUNaLGVBQWU7Q0FDZixrQkFBa0I7QUFDbkI7O0FBQ0E7SUFDSSxZQUFZO0NBQ2YsbUJBQW1CO0lBQ2hCLFdBQVc7SUFDWCxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFlBQVk7QUFDaEI7O0FBQ0E7Q0FDQyxZQUFZO0NBQ1osbUJBQW1CO0FBQ3BCOztBQUNBO0NBQ0MsbUJBQW1CO0FBQ3BCIiwiZmlsZSI6InNyYy9mb3Jtcy1tb2R1bGUvbGlzdC9tZXNzYWdlcy1saXN0L21lc3NhZ2VzLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIERlc2lnbiBSZWZlcmVuY2Ug4oCTIGh0dHBzOi8vZHJpYmJibGUuY29tL3Nob3RzLzQ1ODA5MzAtVG9hc3QtTWVzc2FnZXNcclxuICovXHJcblxyXG4vKiBiYXNpYyAqL1xyXG4qLFxyXG4qOmJlZm9yZSxcclxuKjphZnRlciB7XHJcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5odG1sLFxyXG5ib2R5IHtcclxuXHRoZWlnaHQ6IDEwMCU7XHJcbn1cclxuYm9keSB7XHJcblx0Zm9udDogMTZweC8xLjIgXCJSb2JvdG9cIiwgc2Fucy1zZXJpZjtcclxuXHRjb2xvcjogIzMzMztcclxufVxyXG4uYmxvZyB7XHJcblx0Zm9udC1zaXplOiAxNHB4O1xyXG5cdGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0Ym90dG9tOiAxNXB4O1xyXG5cdGxlZnQ6IDUwJTtcclxuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcblx0ei1pbmRleDogMTtcclxufVxyXG5cclxuXHJcbi8qIGNvbnRhaW5lciAqL1xyXG4uY29udGFpbmVyIHtcclxuXHRwYWRkaW5nOiA4cHg7XHJcblx0d2lkdGg6IGF1dG87XHJcblx0aGVpZ2h0OiBhdXRvO1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR0b3A6IDUwJTtcclxuXHRsZWZ0OiA1MCU7XHJcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcblx0ei1pbmRleDogMTtcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4vKiBmbGFzaF9tc2cgKi9cclxuLmZsYXNoX21zZyAubXNnIHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0cGFkZGluZzogMTJweDtcclxuXHRib3JkZXItcmFkaXVzOiAxMHB4O1xyXG5cdGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4xNikgMHB4IDFweCA0cHg7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuLmZsYXNoX21zZyAubXNnOmJlZm9yZSB7XHJcblx0Y29udGVudDogXCJcIjtcclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHR3aWR0aDogNXB4O1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR0b3A6IDA7XHJcblx0bGVmdDogMDtcclxuXHRib3R0b206IDA7XHJcbn1cclxuLmZsYXNoX21zZyAubXNnICsgLm1zZyB7XHJcblx0bWFyZ2luLXRvcDogMjRweDtcclxufVxyXG4ubXNnIC50ZXh0IHtcclxuXHRmbGV4LWdyb3c6IDE7XHJcblx0cGFkZGluZzogMCA4cHg7XHJcbn1cclxuLm1zZyAudGV4dCAudGl0bGUge1xyXG5cdGZvbnQtc2l6ZTogMjBweDtcclxuXHRmb250LXdlaWdodDogYm9sZDtcclxuXHRtYXJnaW4tYm90dG9tOiA4cHg7XHJcbn1cclxuLm1zZyAudGV4dCAuY29udGVudCB7XHJcblx0Y29sb3I6ICNhOWE5YTk7XHJcbn1cclxuXHJcbi5tc2cgaSB7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdHdpZHRoOiAzMHB4O1xyXG5cdGhlaWdodDogMzBweDtcclxuXHRmb250LXNpemU6IDE2cHg7XHJcblx0Ym9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcbi5pY29uLWNpcmNsZXtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuXHRiYWNrZ3JvdW5kOiAjMDM3Y2MwO1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbn1cclxuLnNfYmFzZSBtYXQtaWNvbiB7XHJcblx0Y29sb3I6IHdoaXRlO1xyXG5cdGJhY2tncm91bmQ6ICMwMzdjYzA7XHJcbn1cclxuLnNfYmFzZTpiZWZvcmUge1xyXG5cdGJhY2tncm91bmQ6ICMwMzdjYzA7XHJcbn1cclxuIl19 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { Controllers, Actions } from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { AreaGroupForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-areagroup-create',\r\n  templateUrl: './areagroup-create.component.html',\r\n  styleUrls: ['./areagroup-create.component.css']\r\n})\r\nexport class AreaGroupCreateComponent implements OnInit {\r\n\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router : Router\r\n  ) { }\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFieldsData();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    this.baseService.postItemTextReponse(Controllers.AreaGroup, Actions.PostItem, event.data).subscribe(res => {\r\n      this.spinner.hide();\r\n      this.notification.showOriginalNotification(res, 'success');\r\n      this.router.navigate(['/forms/areagroup-list']);\r\n    }, error => {\r\n      \r\n      if (error.status === 400) {\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n      else {\r\n        this.notification.showNotification(this.translate.instant('somethingWentWrong'), 'danger');\r\n      }\r\n      this.spinner.hide();\r\n    })\r\n  }\r\n\r\n  public getFieldsData() {\r\n    this.dynamicFormInput = AreaGroupForm;\r\n    this.isLoading = false;\r\n    this.spinner.hide();\r\n  }\r\n  public getTranslatableText(key: string) {\r\n    var textValue = \"\";\r\n    this.translate.get(key).subscribe((text: string) => {\r\n      textValue = text;\r\n    });\r\n    return textValue;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NvbXBhbnktcmV2ZW51ZS9jb21wYW55LXJldmVudWUuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionTypeEnum } from '../../../shared/enums/enums';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { OrderStatusList, OrderStatusSearchForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-order-status-list',\r\n  templateUrl: './order-status-list.component.html',\r\n  styleUrls: ['./order-status-list.component.css'],\r\n})\r\nexport class OrderStatusListComponent implements OnInit {\r\n  public orderStatuses: FieldListData[] = [];\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public cities: FieldListData[] = [];\r\n  public areasList: any[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFormData();\r\n    this.getListSettings();\r\n  }\r\n  public getFormData() {\r\n    this.dynamicFormInput = OrderStatusSearchForm;\r\n  }\r\n  public getListSettings() {\r\n    this.baseService.getAllForList(Controllers.OrderStatus).subscribe((res) => {\r\n      this.cities = res;\r\n\r\n      this.dynamicListInput.columns = OrderStatusList;\r\n      this.getListData();\r\n    });\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.OrderStatus, Actions.GetList, request)\r\n      .subscribe((res) => {\r\n        this.cities = res.entities;\r\n        this.dynamicListInput.data = this.cities;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    this.baseService\r\n      .postItem(Controllers.OrderStatus, Actions.GetList, event.data)\r\n      .subscribe((res) => {\r\n        this.areasList = res.entities;\r\n        this.dynamicListInput.data = this.areasList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n          width: '400px',\r\n          data: {\r\n            title: 'confirm',\r\n            content: 'confirmDeleteMessage',\r\n          },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((res) => {\r\n          if (res) {\r\n            this.spinner.show();\r\n\r\n            this.baseService\r\n              .removeItemById(Controllers.OrderStatus, event.entityId)\r\n              .subscribe(\r\n                (res) => {\r\n                  this.getListData(this.pageSize, this.pageNumber);\r\n                  this.isLoading = false;\r\n                  this.spinner.hide();\r\n                  console.log(res);\r\n                  this.notification.showNotification(res, 'success');\r\n                },\r\n                (error) => {\r\n                  if (error.status === 400) {\r\n                    this.notification.showNotification(error.error, 'danger');\r\n                  } else {\r\n                    this.notification.showNotification(\r\n                      'somethingWentWrong',\r\n                      'danger'\r\n                    );\r\n                  }\r\n                  this.spinner.hide();\r\n                }\r\n              );\r\n          }\r\n        });\r\n\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([`/forms/order-status-update/${event.entityId}`]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/order-status-details/${event.entityId}`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3VwZGF0ZS9wb3N0cG9uZWQtb3JkZXItdXBkYXRlL3Bvc3Rwb25lZC1vcmRlci11cGRhdGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3JlcG9ydHMtc2VhcmNoL3JlcG9ydHMtc2VhcmNoLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3VwZGF0ZS9hcmVhZ3JvdXAtdXBkYXRlL2FyZWFncm91cC11cGRhdGUuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionTypeEnum, RoleTypes } from '../../../shared/enums/enums';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { OrderList, OrderSearchForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-order-list',\r\n  templateUrl: './order-list.component.html',\r\n  styleUrls: ['./order-list.component.css'],\r\n})\r\nexport class OrderListComponent implements OnInit {\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n\r\n  public orderStatuses: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  @ViewChild('excelImporterInput') excelImporterInput: ElementRef;\r\n  dataSource: MatTableDataSource<any>;\r\n  public pageNumber = 1;\r\n  public cities: FieldListData[] = [];\r\n  public drivers: FieldListData[] = [];\r\n  public clients: FieldListData[] = [];\r\n  public areas: FieldListData[] = [];\r\n  public clientBrands: FieldListData[] = [];\r\n  public orders: any[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFormData();\r\n  }\r\n  public getFormData() {\r\n    this.baseService.getAllForList(Controllers.Order).subscribe((res) => {\r\n      this.orders = res;\r\n      this.baseService\r\n        .getAllForList(Controllers.ClientBrand)\r\n        .subscribe((res) => {\r\n          this.clientBrands = res;\r\n          this.dynamicFormInput = OrderSearchForm;\r\n\r\n          var storedForm = JSON.parse(sessionStorage.getItem('searchForm'));\r\n          if (storedForm) {\r\n            this.dynamicFormInput.formFields.find(\r\n              (x) => x.fieldId == 'fromDate'\r\n            ).value = storedForm.fromDate;\r\n            this.dynamicFormInput.formFields.find(\r\n              (x) => x.fieldId == 'toDate'\r\n            ).value = storedForm.toDate;\r\n          }\r\n          this.baseService.getAllForList(Controllers.Area).subscribe((res) => {\r\n            this.areas = res;\r\n            this.baseService\r\n              .getItemsByKey(\r\n                Controllers.User,\r\n                Actions.GetAllItems,\r\n                'role',\r\n                this.userRolesEnum.Merchant\r\n              )\r\n              .subscribe((res) => {\r\n                this.clients = res;\r\n                this.baseService\r\n                  .getItemsByKey(\r\n                    Controllers.User,\r\n                    Actions.GetAllItems,\r\n                    'role',\r\n                    this.userRolesEnum.Driver\r\n                  )\r\n                  .subscribe((res) => {\r\n                    this.drivers = res;\r\n                    this.baseService\r\n                      .getAllForList(Controllers.OrderStatus)\r\n                      .subscribe((res) => {\r\n                        this.orderStatuses = res;\r\n                        let areaIdField = this.dynamicFormInput.formFields.find(\r\n                          (x) => x.fieldId == 'areaId'\r\n                        );\r\n                        areaIdField.data = this.areas;\r\n                        let clientIdField =\r\n                          this.dynamicFormInput.formFields.find(\r\n                            (x) => x.fieldId == 'clientId'\r\n                          );\r\n                        clientIdField.data = this.clients;\r\n                        let driverIdField =\r\n                          this.dynamicFormInput.formFields.find(\r\n                            (x) => x.fieldId == 'driverId'\r\n                          );\r\n                        driverIdField.data = this.drivers;\r\n                        let orderStatusIdField =\r\n                          this.dynamicFormInput.formFields.find(\r\n                            (x) => x.fieldId == 'orderStatusId'\r\n                          );\r\n                        orderStatusIdField.data = this.orderStatuses;\r\n                        let clientBrandIdField =\r\n                          this.dynamicFormInput.formFields.find(\r\n                            (x) => x.fieldId == 'clientBrandId'\r\n                          );\r\n                        clientBrandIdField.data = this.clientBrands;\r\n                        this.getListSettings();\r\n                      });\r\n                  });\r\n              });\r\n          });\r\n        });\r\n    });\r\n  }\r\n  public getListSettings() {\r\n    this.dynamicListInput.columns = OrderList;\r\n    this.getListData();\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.Order, Actions.List, request)\r\n      .subscribe((res) => {\r\n        this.orders = res.entities;\r\n        this.dynamicListInput.data = this.orders;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    console.log(event.data);\r\n    sessionStorage.setItem('searchForm', JSON.stringify(event.data));\r\n    this.baseService\r\n      .postItem(Controllers.Order, Actions.GetList, event.data)\r\n      .subscribe((res) => {\r\n        this.orders = res.entities;\r\n        this.dynamicListInput.data = this.orders;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n          width: '400px',\r\n          data: {\r\n            title: 'confirm',\r\n            content: 'confirmDeleteMessage',\r\n          },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((res) => {\r\n          if (res) {\r\n            this.spinner.show();\r\n            this.baseService\r\n              .removeItemById(Controllers.Order, event.entityId)\r\n              .subscribe(\r\n                (res) => {\r\n                  this.getListData(this.pageSize, this.pageNumber);\r\n                  this.isLoading = false;\r\n                  this.spinner.hide();\r\n                  this.notification.showNotification(res, 'success');\r\n                },\r\n                (error) => {\r\n                  if (error.status === 400) {\r\n                    this.notification.showNotification(error.error, 'danger');\r\n                  } else {\r\n                    this.notification.showNotification(\r\n                      'somethingWentWrong',\r\n                      'danger'\r\n                    );\r\n                  }\r\n                  this.spinner.hide();\r\n                }\r\n              );\r\n          }\r\n        });\r\n\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([`/forms/order-update/${event.entityId}`]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/order-details/${event.entityId}`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  public readUrl(event: any) {\r\n    this.spinner.show();\r\n    if (event.target.files && event.target.files[0]) {\r\n      var reader = new FileReader();\r\n      reader.onload = (event: ProgressEvent) => {};\r\n      const formData: FormData = new FormData();\r\n      formData.append('postedFile', event.target.files[0]);\r\n      this.baseService.importFromExcel(formData).subscribe(\r\n        (res) => {\r\n          this.excelImporterInput.nativeElement.value = '';\r\n          this.notification.showNotification(res, 'success');\r\n          this.getListData(this.pageSize, this.pageNumber);\r\n          this.spinner.hide();\r\n        },\r\n        (error) => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          } else {\r\n            this.notification.showNotification('somethingWentWrong', 'danger');\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n    }\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { FieldListData } from \"../../../shared/models/dynamic-form-field\";\r\nimport { DynamicDataService } from \"../../../shared/services/dynamic-form.service\";\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from \"../../../shared/global-variables/api-config\";\r\nimport { BaseService } from \"../../../shared/services/base.service\";\r\nimport { DynamicFormInput } from \"../../../shared/models/dynamic-form-input\";\r\nimport { DynamicFormOutput } from \"../../../shared/models/dynamic-form-output.model\";\r\nimport { NotificationService } from \"../../../shared/services/notification.service\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { RoleTypes } from \"../../../shared/enums/enums\";\r\nimport { OrderUpdateForm } from \"../../dynamic-data\";\r\n\r\n@Component({\r\n  selector: \"app-order-update\",\r\n  templateUrl: \"./order-update.component.html\",\r\n  styleUrls: [\"./order-update.component.css\"],\r\n})\r\nexport class OrderUpdateComponent implements OnInit {\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dynamicService: DynamicDataService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public Id: number;\r\n  public baseStatuses = [];\r\n  public isLoading = true;\r\n  public areas: FieldListData[] = [];\r\n  public orderStatuses: FieldListData[] = [];\r\n  public clients: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public orderTasks: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public deliveryFeesOn: FieldListData[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe((params) => {\r\n      this.Id = params.id;\r\n      this.orderTasks = [\r\n        {\r\n          value: 0,\r\n          viewValueEn: \"Get From Merchant\",\r\n          viewValueAr: \"احضار من التاجر\",\r\n        },\r\n        {\r\n          value: 1,\r\n          viewValueEn: \"Deliver To Merchant\",\r\n          viewValueAr: \"توصيل للتاجر\",\r\n        },\r\n        {\r\n          value: 2,\r\n          viewValueEn: \"Get And Submit\",\r\n          viewValueAr: \"احضار وتأكيد\",\r\n        },\r\n      ];\r\n      this.deliveryFeesOn = [\r\n        {\r\n          value: 1,\r\n          viewValueEn: \"Delivery on Merchant\",\r\n          viewValueAr: \"توصيل على التاجر\",\r\n        },\r\n        {\r\n          value: 2,\r\n          viewValueEn: \"Delivery on recipient\",\r\n          viewValueAr: \"توصيل على المستلم\",\r\n        },\r\n      ];\r\n      this.getAsync(this.Id);\r\n    });\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getForUpdate(Controllers.Order, id).subscribe((res) => {\r\n      this.getFieldsData(res);\r\n    });\r\n  }\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  public getFieldsData(client: any) {\r\n    this.dynamicFormInput = OrderUpdateForm;\r\n    this.dynamicFormInput.formFields.forEach((field) => {\r\n      field.value = client[field.fieldId];\r\n    });\r\n    this.baseService.getAllForList(Controllers.Area).subscribe((res) => {\r\n      this.areas = res;\r\n      this.baseService\r\n        .getItemsByKey(\r\n          Controllers.User,\r\n          Actions.GetAllItems,\r\n          \"role\",\r\n          this.userRolesEnum.Merchant\r\n        )\r\n        .subscribe((res) => {\r\n          this.clients = res;\r\n          this.baseService\r\n            .getAllForList(Controllers.OrderStatus)\r\n            .subscribe((res) => {\r\n              this.orderStatuses = res;\r\n              let areaIdField = this.dynamicFormInput.formFields.find(\r\n                (x) => x.fieldId == \"areaId\"\r\n              );\r\n              areaIdField.data = this.areas;\r\n              let clientIdField = this.dynamicFormInput.formFields.find(\r\n                (x) => x.fieldId == \"clientId\"\r\n              );\r\n              clientIdField.data = this.clients;\r\n              let orderStatusIdField = this.dynamicFormInput.formFields.find(\r\n                (x) => x.fieldId == \"orderStatusId\"\r\n              );\r\n              orderStatusIdField.data = this.orderStatuses;\r\n              let taskIdField = this.dynamicFormInput.formFields.find(\r\n                (x) => x.fieldId == \"orderTaskId\"\r\n              );\r\n              let deliveryFeesOn = this.dynamicFormInput.formFields.find(\r\n                (x) => x.fieldId == \"deliveryFeesOn\"\r\n              );\r\n\r\n              deliveryFeesOn.data = this.deliveryFeesOn;\r\n\r\n              taskIdField.data = this.orderTasks;\r\n              this.isLoading = false;\r\n              this.spinner.hide();\r\n            });\r\n        });\r\n    });\r\n  }\r\n\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.Id);\r\n    console.log(event.data);\r\n    this.baseService.editItem(Controllers.Order, event.data).subscribe(\r\n      (res) => {\r\n        this.spinner.hide();\r\n\r\n        this.notification.showNotification(res, \"success\");\r\n        this.router.navigate([\"/forms/order-list\"]);\r\n      },\r\n      (error) => {\r\n        if (error.status === 400) {\r\n          this.notification.showNotification(error.error, \"danger\");\r\n        } else {\r\n          this.notification.showNotification(\"somethingWentWrong\", \"danger\");\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PromoCodeUpdateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-promo-code-update',\r\n  templateUrl: './promo-code-update.component.html',\r\n  styleUrls: ['./promo-code-update.component.css']\r\n})\r\nexport class PromoCodeUpdateComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dynamicService: DynamicDataService,\r\n    private notification: NotificationService,\r\n    private router : Router\r\n  ) { }\r\n  public expiryTypes: FieldListData[] = [\r\n    { value: 1, viewValueEn: 'Date',viewValueAr:'التاريخ' },\r\n    { value: 2, viewValueEn: 'Orders Limit',viewValueAr:'عدد الطلبات' },\r\n  ];\r\n\r\n  public promoCodeId: number;\r\n  public isLoading = true;\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe(params => {\r\n      this.promoCodeId = params.id;\r\n      this.getAsync(this.promoCodeId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getByIdForUpdate(Controllers.PromoCode, id).subscribe(res => {\r\n      this.getFieldsData(res);\r\n    })\r\n  }\r\n  public getFieldsData(promoCode: any) {\r\n    this.dynamicFormInput = PromoCodeUpdateForm;\r\n    let expiryTypeField = this.dynamicFormInput.formFields.find(x => x.fieldId == 'expiryType');\r\n    expiryTypeField.data = this.expiryTypes;\r\n    let expiryDateField = this.dynamicFormInput.formFields.find(x => x.fieldId == 'expiryDate');\r\n    let ordersLimitField = this.dynamicFormInput.formFields.find(x => x.fieldId == 'ordersLimit');\r\n    this.dynamicFormInput.formFields.forEach(field => {\r\n      field.value = promoCode[field.fieldId];\r\n    });\r\n    this.isLoading = false;\r\n    this.spinner.hide();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.promoCodeId);\r\n    this.baseService.editItem(Controllers.PromoCode, event.data).subscribe(res => {\r\n      this.spinner.hide();\r\n\r\n      this.notification.showNotification(res, 'success');\r\n      this.router.navigate(['/forms/promo-code-list']);\r\n    }, error => {\r\n      if (error.status === 400) {\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n      else {\r\n        this.notification.showNotification('somethingWentWrong', 'danger');\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'areagroupUpdate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'areagroupManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [isUpdate]=\\\"true\\\" [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9jbGllbnQtYnJhbmQtY3JlYXRlL2NsaWVudC1icmFuZC1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3QvcHJvbW8tY29kZS1saXN0L3Byb21vLWNvZGUtbGlzdC5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3VwZGF0ZS9hcmVhLXVwZGF0ZS9hcmVhLXVwZGF0ZS5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3QvZHJpdmVyLWxpc3QvZHJpdmVyLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'orderstatusList'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'orderstatusManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n                            <button routerLink=\\\"/forms/order-status-create\\\" class=\\\"btn btn-primary\\\" color=\\\"primary\\\"\\r\\n                                mat-raised-button type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' |\\r\\n                                translate}} \\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                            (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\"\\r\\n                                [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                            </app-dynamic-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header card-header-primary\\\">\\r\\n            <h3 class=\\\"card-title \\\">{{'sendNotification' | translate}}</h3>\\r\\n            <p class=\\\"card-category\\\"> {{'pushNotifications' | translate}}</p>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-radio-group [(ngModel)]=\\\"tergetedAudience\\\" aria-label=\\\"Select an option\\\">\\r\\n                  <mat-radio-button [value]=\\\"1\\\">{{'specificUsers' |translate}} </mat-radio-button>\\r\\n                  <mat-radio-button style=\\\"margin-left: 10px;\\\" [value]=\\\"2\\\">{{'allUsers' |translate}}</mat-radio-button>\\r\\n                  <mat-radio-button style=\\\"margin-left: 10px;\\\" [value]=\\\"3\\\">{{'specificTypeOfUsers' |translate}}</mat-radio-button>\\r\\n                </mat-radio-group>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <form [formGroup]=\\\"pushNotificationForm\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\" *ngIf=\\\"tergetedAudience==1\\\">\\r\\n                      <ng-select appearance=\\\"outline\\\" placeholder=\\\"{{'selectUser'|translate}}\\\"\\r\\n                        (change)=\\\"userSelectionChange($event)\\\" [multiple]=\\\"true\\\" [(ngModel)]=\\\"mappedUser\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\">\\r\\n                        <ng-option *ngFor=\\\"let option of usersList\\\" [value]=\\\"option.value\\\">\\r\\n                          {{languageService.getCurrentLanguage()=='ar'? (option.viewValueAr |translate) :\\r\\n                          (option.viewValueEn\\r\\n                          |translate)}}</ng-option>\\r\\n                      </ng-select>\\r\\n                    </div> \\r\\n                    <div class=\\\"col\\\" *ngIf=\\\"tergetedAudience==3\\\">\\r\\n                      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>{{ 'roles' | translate }}</mat-label>\\r\\n                        <mat-select formControlName=\\\"role\\\" [placeholder]=\\\"'chooseRole' | translate\\\">\\r\\n                            <mat-option *ngFor=\\\"let option of rolesList\\\" [value]=\\\"option.viewValueEn\\\">\\r\\n                                {{languageService.getCurrentLanguage()=='ar'? (option.viewValueAr |translate) :\\r\\n                                (option.viewValueEn |translate)}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                      <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>{{'title' | translate}}</mat-label>\\r\\n                        <input type=\\\"text\\\" matInput formControlName=\\\"title\\\">\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                      <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label>{{'body' |translate}}</mat-label>\\r\\n                        <textarea rows=\\\"5\\\" type=\\\"text\\\" matInput formControlName=\\\"body\\\"></textarea>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col d-flex justify-content-end\\\" style=\\\"margin-top: 20px;\\\">\\r\\n                      <button [disabled]=\\\"pushNotificationForm.invalid\\\" *ngIf=\\\"tergetedAudience == 1\\\" (click)=\\\"submitMultiUserNotification()\\\" mat-raised-button\\r\\n                        class=\\\"btn btn-primary btn-start\\\">\\r\\n                        {{'sendNotification' |translate}}\\r\\n                      </button>\\r\\n                      <button [disabled]=\\\"pushNotificationForm.invalid\\\" *ngIf=\\\"tergetedAudience == 2\\\" (click)=\\\"submitAllUsersNotifications()\\\" mat-raised-button\\r\\n                        class=\\\"btn btn-primary btn-start\\\">\\r\\n                        {{'sendNotification' |translate}}\\r\\n                      </button>\\r\\n                      <button [disabled]=\\\"pushNotificationForm.invalid\\\" *ngIf=\\\"tergetedAudience == 3\\\" (click)=\\\"submitSpecificRoleNotifications()\\\" mat-raised-button\\r\\n                        class=\\\"btn btn-primary btn-start\\\">\\r\\n                        {{'sendNotification' |translate}}\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\nimport { AvailableDriversDialogComponent } from '../../../shared/shared-components/available-drivers-dialog/available-drivers-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-record-details',\r\n  templateUrl: './record-details.component.html',\r\n  styleUrls: ['./record-details.component.css']\r\n})\r\nexport class RecordDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService,\r\n    private dialog: MatDialog,\r\n  ) { }\r\n  public recordId: number;\r\n  public record: any;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.recordId = params.id;\r\n      this.getAsync(this.recordId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.Record, id).subscribe(res => {\r\n      console.log(res);\r\n      this.record = res;\r\n      this.detailsInput.dataObject = this.record;\r\n      this.isLoading = false;\r\n    }) \r\n  }\r\n  public openAvailableDriversDialog() {\r\n    const dialogRef = this.dialog.open(AvailableDriversDialogComponent, {\r\n      width: '700px',\r\n      data: {\r\n        title: 'choose',\r\n        content: 'chooseYourDriver'\r\n      },\r\n      autoFocus: false\r\n    })\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      if (res) {\r\n        this.spinner.show();\r\n        let request = {\r\n          DriverId: res,\r\n          RecordId: this.recordId\r\n        }\r\n        console.log('Assign Record',request);\r\n        this.baseService.postItemTextReponse(Controllers.Record, Actions.AssignRecordToDriver, request).subscribe(res => {\r\n         console.log(res);\r\n          this.spinner.hide();\r\n          this.getAsync(this.recordId)\r\n          this.notification.showNotification(res, 'success')\r\n        }, error => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          }\r\n          else {\r\n            this.notification.showNotification('somethingWentWrong', 'danger');\r\n          }\r\n          this.spinner.hide();\r\n        });\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionTypeEnum, RoleTypes } from '../../../shared/enums/enums';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DatePipe } from '@angular/common';\r\nimport { OrderList, PostponedOrdersSearchForm } from '../../dynamic-data';\r\n@Component({\r\n  selector: 'app-postponed-orders',\r\n  templateUrl: './postponed-orders.component.html',\r\n  styleUrls: ['./postponed-orders.component.css'],\r\n})\r\nexport class PostponedOrdersComponent implements OnInit {\r\n  constructor(\r\n    public datepipe: DatePipe,\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public dateNow = new Date();\r\n  public threeDaysAgo = new Date();\r\n  dataSource: MatTableDataSource<any>;\r\n  public pageNumber = 1;\r\n  public statusId = 7;\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n\r\n    this.dateNow.setDate(this.dateNow.getDate());\r\n    this.threeDaysAgo.setDate(this.threeDaysAgo.getDate() - 3);\r\n    this.getFormData();\r\n  }\r\n  public drivers: FieldListData[] = [];\r\n  public clients: FieldListData[] = [];\r\n  public areas: FieldListData[] = [];\r\n  public clientBrands: FieldListData[] = [];\r\n  public orders: any[] = [];\r\n  public orderStatuses: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public getFormData() {\r\n    this.baseService.getAllForList(Controllers.Order).subscribe((res) => {\r\n      this.orders = res;\r\n      this.baseService\r\n        .getAllForList(Controllers.ClientBrand)\r\n        .subscribe((res) => {\r\n          this.clientBrands = res;\r\n          this.dynamicFormInput = PostponedOrdersSearchForm;\r\n\r\n          var storedForm = JSON.parse(sessionStorage.getItem('searchForm'));\r\n          if (storedForm) {\r\n            this.dynamicFormInput.formFields.find(\r\n              (x) => x.fieldId == 'fromDate'\r\n            ).value = storedForm.fromDate;\r\n            this.dynamicFormInput.formFields.find(\r\n              (x) => x.fieldId == 'toDate'\r\n            ).value = storedForm.toDate;\r\n          }\r\n          console.log(this.dynamicFormInput.formFields);\r\n          this.baseService.getAllForList(Controllers.Area).subscribe((res) => {\r\n            this.areas = res;\r\n            this.baseService\r\n              .getItemsByKey(\r\n                Controllers.User,\r\n                Actions.GetAllItems,\r\n                'role',\r\n                this.userRolesEnum.Merchant\r\n              )\r\n              .subscribe((res) => {\r\n                this.clients = res;\r\n                this.baseService\r\n                  .getItemsByKey(\r\n                    Controllers.User,\r\n                    Actions.GetAllItems,\r\n                    'role',\r\n                    this.userRolesEnum.Driver\r\n                  )\r\n                  .subscribe((res) => {\r\n                    this.drivers = res;\r\n                    this.baseService\r\n                      .getAllForList(Controllers.OrderStatus)\r\n                      .subscribe((res) => {\r\n                        this.orderStatuses = res;\r\n                        let areaIdField = this.dynamicFormInput.formFields.find(\r\n                          (x) => x.fieldId == 'areaId'\r\n                        );\r\n                        areaIdField.data = this.areas;\r\n                        let clientIdField =\r\n                          this.dynamicFormInput.formFields.find(\r\n                            (x) => x.fieldId == 'clientId'\r\n                          );\r\n                        clientIdField.data = this.clients;\r\n                        let driverIdField =\r\n                          this.dynamicFormInput.formFields.find(\r\n                            (x) => x.fieldId == 'driverId'\r\n                          );\r\n                        driverIdField.data = this.drivers;\r\n                        let orderStatusIdField =\r\n                          this.dynamicFormInput.formFields.find(\r\n                            (x) => x.fieldId == 'orderStatusId'\r\n                          );\r\n                        orderStatusIdField.data = this.orderStatuses;\r\n                        let clientBrandIdField =\r\n                          this.dynamicFormInput.formFields.find(\r\n                            (x) => x.fieldId == 'clientBrandId'\r\n                          );\r\n                        clientBrandIdField.data = this.clientBrands;\r\n                        this.getListSettings();\r\n                      });\r\n                  });\r\n              });\r\n          });\r\n        });\r\n    });\r\n  }\r\n  public getListSettings() {\r\n    this.dynamicListInput.columns = OrderList;\r\n    this.getListData();\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n      fromDate: this.threeDaysAgo,\r\n      toDate: this.dateNow,\r\n      orderStatusId: this.statusId,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.Order, Actions.List, request)\r\n      .subscribe((res) => {\r\n        this.orders = res.entities;\r\n        this.dynamicListInput.data = this.orders;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public ReactivateAll() {\r\n    this.spinner.show();\r\n    this.baseService\r\n      .postItem(Controllers.Order, Actions.ReactivateAll, null)\r\n      .subscribe((res) => {\r\n        this.spinner.hide();\r\n        this.notification.showNotification(res, 'success');\r\n        this.getListData();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    if (event === null) {\r\n      this.ReactivateAll();\r\n    } else {\r\n      event.data.pageSize = this.pageSize;\r\n      event.data.pageNumber = this.pageNumber;\r\n      console.log(event.data);\r\n      this.baseService\r\n        .postItem(Controllers.Order, Actions.GetList, event.data)\r\n        .subscribe((res) => {\r\n          this.orders = res.entities;\r\n          this.dynamicListInput.data = this.orders;\r\n          this.dynamicListInput.totalCount = res.totalCount;\r\n          this.isLoading = false;\r\n          this.spinner.hide();\r\n        });\r\n    }\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n          width: '400px',\r\n          data: {\r\n            title: 'confirm',\r\n            content: 'confirmDeleteMessage',\r\n          },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((res) => {\r\n          if (res) {\r\n            this.spinner.show();\r\n\r\n            this.baseService\r\n              .removeItemById(Controllers.Order, event.entityId)\r\n              .subscribe(\r\n                (res) => {\r\n                  this.getListData(this.pageSize, this.pageNumber);\r\n                  this.isLoading = false;\r\n                  this.spinner.hide();\r\n                  this.notification.showNotification(res, 'success');\r\n                },\r\n                (error) => {\r\n                  if (error.status === 400) {\r\n                    this.notification.showNotification(error.error, 'danger');\r\n                  } else {\r\n                    this.notification.showNotification(\r\n                      'somethingWentWrong',\r\n                      'danger'\r\n                    );\r\n                  }\r\n                  this.spinner.hide();\r\n                }\r\n              );\r\n          }\r\n        });\r\n\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([\r\n          `/forms/postponed-order-update/${event.entityId}`,\r\n        ]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Reactivate: {\r\n        this.baseService\r\n          .reactivate(Controllers.Order, Actions.Reactivate, event.entityId)\r\n          .subscribe(\r\n            (res) => {\r\n              this.notification.showNotification(res, 'success');\r\n            },\r\n            (error) => {\r\n              if (error.status === 400) {\r\n                this.notification.showNotification(error.error, 'danger');\r\n              } else {\r\n                this.notification.showNotification(\r\n                  'somethingWentWrong',\r\n                  'danger'\r\n                );\r\n              }\r\n              this.spinner.hide();\r\n            }\r\n          );\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/order-details/${event.entityId}`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3B1c2gtbm90aWZpY2F0aW9ucy9wdXNoLW5vdGlmaWNhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\r\\n<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'promoCodeDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'promoCodesManagement' | translate}}</p>\\r\\n                    </div> \\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-details [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\n\r\n@Component({\r\n  selector: 'app-employee-details',\r\n  templateUrl: './employee-details.component.html',\r\n  styleUrls: ['./employee-details.component.css']\r\n})\r\nexport class EmployeeDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) { }\r\n  public employeeId: number;\r\n  public employee: any;\r\n  public activeTab=0;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.employeeId = params.id;\r\n      this.getAsync(this.employeeId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.User, id).subscribe(res => {\r\n      console.log(res);\r\n      this.employee = res;\r\n      this.detailsInput.dataObject = this.employee;\r\n      this.isLoading = false;\r\n    }) \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3VwZGF0ZS9jbGllbnQtdXBkYXRlL2NsaWVudC11cGRhdGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3VwZGF0ZS9jaXR5LXVwZGF0ZS9jaXR5LXVwZGF0ZS5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvYXJlYWdyb3VwLWRldGFpbHMvYXJlYWdyb3VwLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\n\r\n@Component({\r\n  selector: 'app-city-details',\r\n  templateUrl: './city-details.component.html',\r\n  styleUrls: ['./city-details.component.css']\r\n})\r\nexport class CityDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) { }\r\n  public cityId: number;\r\n  public area: any;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe(params => {\r\n      this.cityId = params.id;\r\n      this.getAsync(this.cityId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.City, id).subscribe(res => {\r\n      this.area = res;\r\n      this.detailsInput.dataObject = this.area;\r\n      this.isLoading = false;this.spinner.hide();\r\n    }) \r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.cityId);\r\n    this.baseService.editItem(Controllers.Area, event.data).subscribe(res => {\r\n      this.spinner.hide();\r\n\r\n      this.notification.showNotification('cityUpdatedSuccess', 'success');\r\n    }, error => {\r\n      if (error.status === 400) {\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n      else {\r\n        this.notification.showNotification('somethingWentWrong', 'danger');\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9hcmVhZ3JvdXAtY3JlYXRlL2FyZWFncm91cC1jcmVhdGUuY29tcG9uZW50LmNzcyJ9 */\";","import { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport * as _moment from 'moment';\r\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\r\nimport { BaseService } from '../../../src/shared/services/base.service';\r\nimport { Controllers } from '../../../src/shared/global-variables/api-config';\r\nimport { LanguageService } from '../../shared/services/language.service';\r\n\r\n\r\nconst moment = _moment;\r\n\r\n// See the Moment.js docs for the meaning of these formats:\r\n// https://momentjs.com/docs/#/displaying/format/\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'LL',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'YYYY',\r\n  },\r\n};\r\n@Component({\r\n  selector: 'app-move-orders-dialog',\r\n  templateUrl: './move-orders-dialog.component.html',\r\n  styleUrls: ['./move-orders-dialog.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE] },\r\n\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class MoveOrdersDialogComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    areaGroupId: new FormControl('', Validators.required),\r\n    recordId: new FormControl('', Validators.required),\r\n    recordDate: new FormControl('', Validators.required),\r\n    type: new FormControl()\r\n  })\r\n\r\n  get recordDate() {\r\n    return this.form.get('recordDate') as FormControl;\r\n  }\r\n  get type() {\r\n    return this.form.get('type') as FormControl;\r\n  }\r\n\r\n  get recordId() {\r\n    return this.form.get('recordId') as FormControl;\r\n  }\r\n  get areaGroupId() {\r\n    return this.form.get('areaGroupId') as FormControl;\r\n  }\r\n\r\n\r\n  getRecords() {\r\n    console.log(this.form.value)\r\n    if (this.recordDate.value && this.areaGroupId.value) {\r\n      this.getAllRecords();\r\n    }\r\n  }\r\n  convertToUTC(date: Date): Date {\r\n    if (date) {\r\n      date = new Date(date);\r\n      return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    } else { return null; }\r\n  }\r\n  recordList = [];\r\n  getAllRecords() {\r\n    this.baseService.getAll(Controllers.Record).subscribe(res => {\r\n      console.log('Records', res);\r\n\r\n      this.recordList = res;\r\n\r\n    }, error => {\r\n    });\r\n  }\r\n\r\n\r\n  changeRadio() {\r\n    this.getAllRecords();\r\n    console.log(this.type.value)\r\n    if (this.type.value == 1) {\r\n      this.recordId.setValue(-1);\r\n    }\r\n\r\n  }\r\n\r\n  constructor(\r\n    private baseService: BaseService,\r\n    public dialogRef: MatDialogRef<MoveOrdersDialogComponent>,\r\n    public languageService: LanguageService,\r\n\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllAreaGroups();\r\n  }\r\n  areaGroups: any;\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  getAllAreaGroups() {\r\n    this.baseService.getAllItems(Controllers.AreaGroup).subscribe(res => {\r\n      console.log('Area Groups', res);\r\n      this.areaGroups = res;\r\n    });\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\nimport { AvailableDriversDialogComponent } from '../../../shared/shared-components/available-drivers-dialog/available-drivers-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-round-details',\r\n  templateUrl: './round-details.component.html',\r\n  styleUrls: ['./round-details.component.css']\r\n})\r\nexport class RoundDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService,\r\n    private dialog: MatDialog,\r\n  ) { }\r\n  public recordId: number;\r\n  public record: any;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.recordId = params.id;\r\n      this.getAsync(this.recordId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.FinancialRound, id).subscribe(res => {\r\n      console.log(res);\r\n      this.record = res;\r\n      this.detailsInput.dataObject = this.record;\r\n      this.isLoading = false;\r\n    }) \r\n  }\r\n  \r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-header card-header-primary\\\">\\r\\n                      <h3 class=\\\"card-title \\\">{{'postponedOrdersList'|translate}}</h3>\\r\\n                      <p class=\\\"card-category\\\"> {{'postponedOrdersManagemet' | translate}}</p>\\r\\n                  </div>\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                      <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                          (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        \\r\\n                      <div class=\\\"table-responsive\\\">\\r\\n                          <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\"\\r\\n                              [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                          </app-dynamic-list>\\r\\n                      </div>\\r\\n                  </div>\\r\\n              </div>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'clientDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'clientsManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div  class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <mat-tab-group   color=\\\"primary\\\" [(selectedIndex)]=\\\"activeTab\\\">\\r\\n                            <mat-tab   label=\\\"{{'clientInformation' | translate}}\\\">\\r\\n                                <ng-template style=\\\"overflow: hidden;\\\" matTabContent>\\r\\n                                <app-dynamic-details  [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n                                \\r\\n                            </ng-template>\\r\\n                            </mat-tab>\\r\\n                            <mat-tab label=\\\"{{'areaGroupPrices'| translate}}\\\">\\r\\n                                <ng-template matTabContent>\\r\\n                                    <app-area-group-prices [clientId]=\\\"clientId\\\"></app-area-group-prices>\\r\\n                                </ng-template>\\r\\n                            </mat-tab>  \\r\\n                             <mat-tab label=\\\"{{'clientBrands'| translate}}\\\">\\r\\n                                <ng-template matTabContent>\\r\\n                                    <app-client-brand-list [clientId]=\\\"clientId\\\"></app-client-brand-list>\\r\\n                                </ng-template>\\r\\n                            </mat-tab>\\r\\n                        </mat-tab-group> \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'recordDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'recordsManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-12\\\">\\r\\n                                <button (click)=\\\"openAvailableDriversDialog()\\\" mat-raised-button class=\\\"btn btn-primary\\\"\\r\\n                                    type=\\\"button\\\">\\r\\n                                    {{'assignDriverToRecord' |translate}}\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <app-dynamic-details [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvY2l0eS1kZXRhaWxzL2NpdHktZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'msgCreate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'msgManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\n\r\n@Component({\r\n  selector: 'app-areagroup-details',\r\n  templateUrl: './areagroup-details.component.html',\r\n  styleUrls: ['./areagroup-details.component.css']\r\n})\r\nexport class AreaGroupDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dynamicService: DynamicDataService,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) { }\r\n  public areagroupId: number;\r\n  public area: any;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe(params => {\r\n      this.areagroupId = params.id;\r\n      this.getAsync(this.areagroupId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.AreaGroup, id).subscribe(res => {\r\n    \r\n      this.area = res;\r\n      this.detailsInput.dataObject = this.area;\r\n      this.isLoading = false;    this.spinner.hide();\r\n    }) \r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.areagroupId);\r\n    this.baseService.editItem(Controllers.AreaGroup, event.data).subscribe(res => {\r\n      this.spinner.hide();\r\n      console.log(this.translate.getDefaultLang());\r\n\r\n      this.notification.showNotification('areagroupUpdatedSuccess', 'success');\r\n    }, error => {\r\n      if (error.status === 400) {\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n      else {\r\n        this.notification.showNotification('somethingWentWrong', 'danger');\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvb3JkZXItc3RhdHVzLWRldGFpbHMvb3JkZXItc3RhdHVzLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvZW5kdXNlci1kZXRhaWxzL2VuZHVzZXItZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'endUsersList'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'endUsersManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n                            <button routerLink=\\\"/forms/enduser-create\\\" class=\\\"btn btn-primary\\\" color=\\\"primary\\\"\\r\\n                                mat-raised-button type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' |\\r\\n                                translate}} \\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                            (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\"\\r\\n                                [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                            </app-dynamic-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'orderstatusUpdate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'orderstatusManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [isUpdate]=\\\"true\\\" [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport {\r\n  Controllers,\r\n  Actions,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { PromoCodeCreateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-promo-code-create',\r\n  templateUrl: './promo-code-create.component.html',\r\n  styleUrls: ['./promo-code-create.component.css'],\r\n})\r\nexport class PromoCodeCreateComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public expiryTypes: FieldListData[] = [\r\n    { value: 1, viewValueEn: 'Date', viewValueAr: 'التاريخ' },\r\n    { value: 2, viewValueEn: 'Orders Limit', viewValueAr: 'عدد الطلبات' },\r\n  ];\r\n\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFieldsData();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    this.baseService\r\n      .postItemTextReponse(Controllers.PromoCode, Actions.PostItem, event.data)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(res, 'success');\r\n          this.router.navigate(['/forms/promo-code-list']);\r\n        },\r\n        (error) => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          } else {\r\n            this.notification.showNotification(\r\n              this.translate.instant('somethingWentWrong'),\r\n              'danger'\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  public getFieldsData() {\r\n    this.dynamicFormInput = PromoCodeCreateForm;\r\n    let expiryTypeField = this.dynamicFormInput.formFields.find(\r\n      (x) => x.fieldId == 'expiryType'\r\n    );\r\n    expiryTypeField.data = this.expiryTypes;\r\n    let expiryDateField = this.dynamicFormInput.formFields.find(\r\n      (x) => x.fieldId == 'expiryDate'\r\n    );\r\n    let ordersLimitField = this.dynamicFormInput.formFields.find(\r\n      (x) => x.fieldId == 'ordersLimit'\r\n    );\r\n    expiryDateField.data = this.expiryTypes;\r\n    this.isLoading = false;\r\n    this.spinner.hide();\r\n  }\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header card-header-primary\\\">\\r\\n            <h3 class=\\\"card-title \\\">{{'adminOrderList'|translate}}</h3>\\r\\n            <p class=\\\"card-category\\\"> {{'ordersManagement' | translate}}</p>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n\\r\\n              <button (click)=\\\"createOrder()\\\" class=\\\"btn btn-primary btn-start\\\" color=\\\"primary\\\" mat-raised-button\\r\\n                type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' | translate}} </button>\\r\\n              <button (click)=\\\"openDialog()\\\" [disabled]=\\\"!selection.selected.length\\\" class=\\\"btn btn-primary btn-start\\\"\\r\\n                color=\\\"primary\\\" mat-raised-button>\\r\\n                {{'moveOrder'| translate}}\\r\\n              </button>\\r\\n            </div>\\r\\n            <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n              (actionSubmitted)=\\\"serveAction($event)\\\">\\r\\n            </app-dynamic-form>\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n              <div class=\\\"mat-elevation-z8 w-100\\\">\\r\\n                <table [dataSource]=\\\"dataSource\\\" class=\\\"w-100\\\" mat-table matSort>\\r\\n                  <ng-container matColumnDef=\\\"select\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef>\\r\\n                      <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                        [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n                        [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\" [aria-label]=\\\"checkboxLabel()\\\">\\r\\n                      </mat-checkbox>\\r\\n                    </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                      <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\"\\r\\n                        [checked]=\\\"selection.isSelected(row)\\\" [aria-label]=\\\"checkboxLabel(row)\\\">\\r\\n                      </mat-checkbox>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <ng-container matColumnDef=\\\"orderDate\\\">\\r\\n                    <th *matHeaderCellDef mat-header-cell>{{'orderDate' | translate}} </th>\\r\\n                    <td *matCellDef=\\\"let row\\\" mat-cell>\\r\\n                      {{row?.orderDate}}\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <!-- merchantName Column -->\\r\\n                  <ng-container matColumnDef=\\\"merchantName\\\">\\r\\n                    <th *matHeaderCellDef mat-header-cell>{{'merchantName' | translate}}</th>\\r\\n                    <td *matCellDef=\\\"let row\\\" mat-cell>\\r\\n                      <a *ngIf=\\\"row.clientId\\\" routerLink=\\\"/forms/client-details/{{row?.clientId}}/0\\\">\\r\\n                        {{ row?.merchantName}}\\r\\n                      </a>\\r\\n                      <p *ngIf=\\\"!row?.clientId\\\">{{'unspecified' | translate}}</p>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <!-- driverName Column -->\\r\\n                  <ng-container matColumnDef=\\\"driverName\\\">\\r\\n                    <th *matHeaderCellDef mat-header-cell>{{'driverName' | translate}}</th>\\r\\n                    <td *matCellDef=\\\"let row\\\" mat-cell>\\r\\n                      <a *ngIf=\\\"row.driverId\\\" routerLink=\\\"/forms/driver-details/{{row?.driverId}}\\\">\\r\\n                        {{ row?.driverName}}\\r\\n                      </a>\\r\\n                      <p *ngIf=\\\"!row?.driverId\\\">{{'unspecified' | translate}}</p>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n                  <!-- area Column -->\\r\\n                  <ng-container matColumnDef=\\\"area\\\">\\r\\n                    <th *matHeaderCellDef mat-header-cell>{{'area' | translate}}</th>\\r\\n                    <td *matCellDef=\\\"let row\\\" mat-cell>\\r\\n                      {{row?.areaName}}\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n                  <ng-container matColumnDef=\\\"driverRevenue\\\">\\r\\n                    <th *matHeaderCellDef mat-header-cell>{{'addedPrice' | translate}}</th>\\r\\n                    <td *matCellDef=\\\"let row\\\" mat-cell>\\r\\n                      {{ row?.addedPrice}}\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n                  <ng-container matColumnDef=\\\"status\\\">\\r\\n                    <th *matHeaderCellDef mat-header-cell>{{'orderStatus' | translate}}</th>\\r\\n                    <td *matCellDef=\\\"let row\\\" mat-cell>\\r\\n                      <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-select [(value)]=\\\"row.orderStatusId\\\" aria-placeholder=\\\"Status\\\"\\r\\n                          (selectionChange)=\\\"changeOrderStatus($event.value,row.id)\\\">\\r\\n                          <mat-option *ngFor=\\\"let orderStatus of orderStatuses\\\" [value]=\\\"orderStatus.value\\\">\\r\\n                            {{languageService.getCurrentLanguage()=='ar'? (orderStatus.viewValueAr |translate) :\\r\\n                            (orderStatus.viewValueEn |translate)}}</mat-option>\\r\\n                        </mat-select>\\r\\n\\r\\n                      </mat-form-field>\\r\\n                      <mat-error *ngIf=\\\"orderStatusId.hasError('required')\\\">\\r\\n                        {{'requiredField' | translate}}\\r\\n                      </mat-error>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <!-- orderPrice Column -->\\r\\n                  <ng-container matColumnDef=\\\"orderTotalPrice\\\">\\r\\n                    <th *matHeaderCellDef mat-header-cell>{{'orderPrice' | translate}}</th>\\r\\n                    <td *matCellDef=\\\"let row\\\" mat-cell>\\r\\n                      <mat-form-field appearance=\\\"outline\\\">\\r\\n                          <input type=\\\"number\\\" placeholder=\\\"{{'orderPrice' | translate}}\\\" matInput\\r\\n                            value=\\\"{{row.orderTotalPrice}}\\\" (change)=\\\"changeOrderPrice($event, row.id)\\\">\\r\\n                      </mat-form-field>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n                  <!-- driverRevenue Column -->\\r\\n\\r\\n                  <!--  <ng-container matColumnDef=\\\"orderItemTypeDescription\\\">\\r\\n                <th *matHeaderCellDef mat-header-cell>{{'notes' | translate}}</th>\\r\\n                <td *matCellDef=\\\"let row\\\" class=\\\"w-8 min-w-8 pr-0\\\"  mat-cell>\\r\\n                  <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 50px;\\\">\\r\\n                    <div class=\\\"my-form\\\">\\r\\n                      <input type=\\\"text\\\" placeholder=\\\"{{'notes' | translate}}\\\" matInput\\r\\n                      value=\\\"{{row.orderItemTypeDescription}}\\\"\\r\\n                        (change)=\\\"changeOrderItemDescription($event, row.id)\\\">\\r\\n                    </div>\\r\\n\\r\\n                  </mat-form-field>\\r\\n\\r\\n                </td>\\r\\n              </ng-container> -->\\r\\n                  <!-- Action Column -->\\r\\n                  <ng-container matColumnDef=\\\"actions\\\">\\r\\n                    <th *matHeaderCellDef mat-header-cell mat-sort-header>{{'actions' | translate}}</th>\\r\\n                    <td *matCellDef=\\\"let row\\\" mat-cell>\\r\\n                      <ng-container>\\r\\n                        <button style=\\\"flex-grow: 1;\\\" mat-mini-fab (click)=\\\"viewOrder(row.id)\\\"\\r\\n                          class=\\\"btn btn-primary m-2\\\">\\r\\n                          <mat-icon>visibility</mat-icon>\\r\\n                        </button>\\r\\n                      </ng-container>\\r\\n                      <ng-container>\\r\\n                        <button style=\\\"flex-grow: 1;\\\" mat-mini-fab (click)=\\\"updateOrder(row.id)\\\"\\r\\n                          class=\\\"btn btn-primary m-2\\\">\\r\\n                          <mat-icon>edit</mat-icon>\\r\\n                        </button>\\r\\n                      </ng-container>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n\\r\\n\\r\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                  <tr class=\\\"hover:bg-hover trans-ease-out cursor-pointer\\\" mat-row\\r\\n                    *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n                  </tr>\\r\\n                </table>\\r\\n                <mat-paginator (page)=\\\"pageChanged($event)\\\" [length]=\\\"totalRows\\\" [pageIndex]=\\\"pageNumber-1\\\"\\r\\n                  [pageSize]=\\\"pageSize\\\">\\r\\n                </mat-paginator>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3VwZGF0ZS9kcml2ZXItdXBkYXRlL2RyaXZlci11cGRhdGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\r\\n<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'orderDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'ordersManagement' | translate}}</p>\\r\\n                    </div> \\r\\n                 \\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <mat-tab-group color=\\\"primary\\\">\\r\\n                            <mat-tab label=\\\"{{'orderInformation' | translate}}\\\">\\r\\n                                <app-dynamic-details [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n                            </mat-tab>\\r\\n                            <mat-tab label=\\\"{{'orderNotes'| translate}}\\\">\\r\\n                              \\r\\n                                    <ng-template matTabContent>\\r\\n                                        <app-order-notes [orderNotesId]=\\\"orderNoteId\\\"></app-order-notes>\\r\\n                                    </ng-template>\\r\\n                          \\r\\n                            </mat-tab>\\r\\n                        </mat-tab-group>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","import { Component, OnInit } from \"@angular/core\";\r\nimport { DynamicFormOutput } from \"../../../shared/models/dynamic-form-output.model\";\r\nimport { DynamicFormInput } from \"../../../shared/models/dynamic-form-input\";\r\nimport { DynamicDataService } from \"../../../shared/services/dynamic-form.service\";\r\nimport { BaseService } from \"../../../shared/services/base.service\";\r\nimport {\r\n  Controllers,\r\n  Actions,\r\n} from \"../../../shared/global-variables/api-config\";\r\nimport { FieldListData } from \"../../../shared/models/dynamic-form-field\";\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { NotificationService } from \"../../../shared/services/notification.service\";\r\nimport { RoleTypes } from \"../../../shared/enums/enums\";\r\nimport { Router } from \"@angular/router\";\r\nimport { UserCreateForm } from \"../../dynamic-data\";\r\n\r\n@Component({\r\n  selector: \"app-driver-create\",\r\n  templateUrl: \"./driver-create.component.html\",\r\n  styleUrls: [\"./driver-create.component.css\"],\r\n})\r\nexport class DriverCreateComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public roles: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFieldsData();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data[\"role\"] = this.userRolesEnum.Driver;\r\n    this.baseService\r\n      .postItemTextReponse(Controllers.User, Actions.CreateUser, event.data)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(res, \"success\");\r\n          this.router.navigate([\"/forms/driver-list\"]);\r\n        },\r\n        (error) => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, \"danger\");\r\n          } else {\r\n            this.notification.showNotification(\r\n              this.translate.instant(\"somethingWentWrong\"),\r\n              \"danger\"\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  public getFieldsData() {\r\n    this.baseService.getAllForList(Controllers.AreaGroup).subscribe((res) => {\r\n      this.areaGroups = res;\r\n      this.dynamicFormInput = UserCreateForm;\r\n      // let areaGroupIdField = this.dynamicFormInput.formFields.find(\r\n      //   (x) => x.fieldId == \"areaRegionId\"\r\n      // );\r\n      // areaGroupIdField.data = this.areaGroups;\r\n      this.isLoading = false;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvcm91bmQtZGV0YWlscy9yb3VuZC1kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'cityUpdate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'citiesManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [isUpdate]=\\\"true\\\" [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { CityUpdateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-city-update',\r\n  templateUrl: './city-update.component.html',\r\n  styleUrls: ['./city-update.component.css'],\r\n})\r\nexport class CityUpdateComponent implements OnInit {\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public cityId: number;\r\n  public isLoading = true;\r\n  public cities: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe((params) => {\r\n      this.cityId = params.id;\r\n\r\n      this.getAsync(this.cityId);\r\n    });\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.City, id).subscribe((res) => {\r\n      this.getFieldsData(res);\r\n    });\r\n  }\r\n\r\n  public getFieldsData(city: any) {\r\n    this.dynamicFormInput = CityUpdateForm;\r\n    this.dynamicFormInput.formFields.forEach((field) => {\r\n      field.value = city[field.fieldId];\r\n    });\r\n    this.spinner.hide();\r\n    this.isLoading = false;\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.cityId);\r\n    this.baseService.editItem(Controllers.City, event.data).subscribe(\r\n      (res) => {\r\n        this.spinner.hide();\r\n        this.notification.showNotification(res, 'success');\r\n        this.router.navigate(['/forms/city-list']);\r\n      },\r\n      (error) => {\r\n        if (error.status === 400) {\r\n          this.notification.showNotification(error.error, 'danger');\r\n        } else {\r\n          this.notification.showNotification('somethingWentWrong', 'danger');\r\n        }\r\n        this.spinner.hide();\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport {\r\n  ActionTypeEnum,\r\n  FieldTypeEnum,\r\n  RoleTypes,\r\n} from '../../../shared/enums/enums';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-client-update',\r\n  templateUrl: './client-update.component.html',\r\n  styleUrls: ['./client-update.component.css'],\r\n})\r\nexport class ClientUpdateComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public roles: FieldListData[] = [];\r\n  public clientId: number;\r\n  public baseStatuses = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.route.params.subscribe((params) => {\r\n      this.clientId = params.id;\r\n      this.baseStatuses = [\r\n        { value: true, viewValueEn: 'Active', viewValueAr: 'نشط' },\r\n        { value: false, viewValueEn: 'Not Active', viewValueAr: 'غير نشط' },\r\n      ];\r\n      this.getAsync(this.clientId);\r\n    });\r\n    this.spinner.show();\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getClientById(Controllers.User, id).subscribe((res) => {\r\n      console.log(res);\r\n      this.getFieldsData(res);\r\n    });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data['role'] = this.userRolesEnum.Merchant;\r\n    event.data.id = Number(this.clientId);\r\n    let formData = new FormData();\r\n    Object.entries(event.data).forEach((element) => {\r\n      var file;\r\n      if (element[0] == 'bankVerifecationAttachment') {\r\n        file = element[1] as Blob;\r\n        formData.append(element[0], file);\r\n      } else {\r\n        if (element[1] == null) {\r\n          element[1] = '';\r\n        }\r\n        formData.append(element[0], element[1] as string);\r\n      }\r\n    });\r\n    this.baseService\r\n      .postFormItem(Controllers.User, Actions.UpdateMerchant, formData)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(res, 'success');\r\n          this.router.navigate(['/forms/client-list']);\r\n        },\r\n        (error) => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(error.error, 'danger');\r\n        }\r\n      );\r\n  }\r\n\r\n  public getFieldsData(client: any) {\r\n    this.dynamicFormInput = this.dynamicFormInput = {\r\n      actions: [\r\n        {\r\n          actionName: 'update',\r\n          actionType: ActionTypeEnum.Submit,\r\n          isDisableAllowed: false,\r\n        },\r\n      ],\r\n      formFields: [\r\n        {\r\n          fieldId: 'fullName',\r\n          fieldType: FieldTypeEnum.Input,\r\n          label: 'FullName',\r\n          fieldOrder: 1,\r\n          placeholder: 'FullName',\r\n          options: { disabled: false, required: true, size: 3 },\r\n        },\r\n        {\r\n          fieldId: 'email',\r\n          fieldType: FieldTypeEnum.Email,\r\n          label: 'Email',\r\n          fieldOrder: 1,\r\n          placeholder: 'Email',\r\n          options: { disabled: false, required: true, size: 3 },\r\n        },\r\n        {\r\n          fieldId: 'phoneNumber',\r\n          fieldType: FieldTypeEnum.Input,\r\n          label: 'PhoneNumber',\r\n          fieldOrder: 1,\r\n          placeholder: 'PhoneNumber',\r\n          options: { disabled: false, required: true, size: 3 },\r\n        },\r\n        {\r\n          fieldId: 'address',\r\n          fieldType: FieldTypeEnum.Input,\r\n          label: 'Address',\r\n          fieldOrder: 1,\r\n          placeholder: 'Address',\r\n          options: { disabled: false, required: true, size: 3 },\r\n        },\r\n        {\r\n          fieldId: 'isActive',\r\n          fieldType: FieldTypeEnum.DropDownList,\r\n          label: 'isActive',\r\n          fieldOrder: 1,\r\n          placeholder: 'isActive',\r\n          options: { disabled: false, required: true, size: 3 },\r\n        },\r\n        {\r\n          fieldId: 'cardHolderName',\r\n          fieldType: FieldTypeEnum.Input,\r\n          label: 'cardHolderName',\r\n          fieldOrder: 1,\r\n          placeholder: 'cardHolderName',\r\n          options: { disabled: false, required: true, size: 3 },\r\n        },\r\n        {\r\n          fieldId: 'bankName',\r\n          fieldType: FieldTypeEnum.Input,\r\n          label: 'bankName',\r\n          fieldOrder: 1,\r\n          placeholder: 'bankName',\r\n          options: { disabled: false, required: true, size: 3 },\r\n        },\r\n        {\r\n          fieldId: 'iban',\r\n          fieldType: FieldTypeEnum.Input,\r\n          label: 'iban',\r\n          fieldOrder: 1,\r\n          placeholder: 'iban',\r\n          options: { disabled: false, required: true, size: 3 },\r\n        },\r\n        {\r\n          fieldId: 'accountNumber',\r\n          fieldType: FieldTypeEnum.Number,\r\n          label: 'accountNumber',\r\n          fieldOrder: 1,\r\n          placeholder: 'accountNumber',\r\n          options: { disabled: false, required: true, size: 3 },\r\n        },\r\n        {\r\n          fieldId: 'bankVerifecationAttachment',\r\n          fieldType: FieldTypeEnum.File,\r\n          label: 'bankVerifecationAttachment',\r\n          fieldOrder: 1,\r\n          placeholder: 'bankVerifecationAttachment',\r\n          options: { disabled: false, required: true, size: 3 },\r\n        },\r\n      ],\r\n    };\r\n    this.dynamicFormInput.formFields.forEach((field) => {\r\n      field.value = client[field.fieldId];\r\n    });\r\n    let statusField = this.dynamicFormInput.formFields.find(\r\n      (x) => x.fieldId == 'isActive'\r\n    );\r\n\r\n    statusField.data = this.baseStatuses;\r\n    this.isLoading = false;\r\n    this.spinner.hide();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9lbmR1c2VyLWNyZWF0ZS9lbmR1c2VyLWNyZWF0ZS5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\r\\n<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'orderstatusDetails' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'orderstatusManagement' | translate}}</p>\\r\\n                    </div> \\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-details [detailsInput]=\\\"detailsInput\\\"></app-dynamic-details>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvZHJpdmVyLWRldGFpbHMvZHJpdmVyLWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport {\r\n  Controllers,\r\n  Actions,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { RoleTypes } from '../../../shared/enums/enums';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeeCreateForm, UserCreateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-employee-create',\r\n  templateUrl: './employee-create.component.html',\r\n  styleUrls: ['./employee-create.component.css'],\r\n})\r\nexport class EmployeeCreateComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public roles: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFieldsData();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    this.baseService\r\n      .postItemTextReponse(Controllers.User, Actions.CreateUser, event.data)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner.hide();\r\n          this.notification.showNotification(res, 'success');\r\n          this.router.navigate(['/forms/employee-list']);\r\n        },\r\n        (error) => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          } else {\r\n            this.notification.showNotification(\r\n              this.translate.instant('somethingWentWrong'),\r\n              'danger'\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  public getFieldsData() {\r\n    this.baseService.getEmployeeRoles().subscribe((res) => {\r\n      this.roles = res;\r\n\r\n      this.dynamicFormInput = EmployeeCreateForm;\r\n      let roleField = this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == 'role'\r\n      );\r\n      roleField.data = this.roles;\r\n      this.isLoading = false;\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3QvYXJlYWdyb3VwLWxpc3QvYXJlYWdyb3VwLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9wcm9tby1jb2RlLWNyZWF0ZS9wcm9tby1jb2RlLWNyZWF0ZS5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'promoCodeUpdate' | translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\">  {{'promoCodesManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"!isLoading\\\">\\r\\n                        <app-dynamic-form [isUpdate]=\\\"true\\\" [formInput]=\\\"dynamicFormInput\\\" (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'driversList'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'driversManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n                            <button routerLink=\\\"/forms/driver-create\\\" class=\\\"btn btn-primary\\\" color=\\\"primary\\\"\\r\\n                                mat-raised-button type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' |\\r\\n                                translate}} \\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                            (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\"\\r\\n                                [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                            </app-dynamic-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { Actions, Controllers } from '../../../shared/global-variables/api-config';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DynamicDetailPageModel } from '../../../shared/models/dynamic-details.model';\r\n\r\n@Component({\r\n  selector: 'app-promo-code-details',\r\n  templateUrl: './promo-code-details.component.html',\r\n  styleUrls: ['./promo-code-details.component.css']\r\n})\r\nexport class PromoCodeDetailsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private notification: NotificationService,\r\n    private translate: TranslateService\r\n  ) { }\r\n  public promoCodeId: number;\r\n  public promoCode: any;\r\n  public detailsInput = new DynamicDetailPageModel();\r\n  public isLoading = true;\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.promoCodeId = params.id;\r\n      this.getAsync(this.promoCodeId);\r\n    })\r\n  }\r\n  public getAsync(id: number) {\r\n    this.baseService.getById(Controllers.PromoCode, id).subscribe(res => {\r\n      console.log(res);\r\n      this.promoCode = res;\r\n      this.detailsInput.dataObject = this.promoCode;\r\n      this.isLoading = false;\r\n    })\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.id = Number(this.promoCodeId);\r\n    this.baseService.editItem(Controllers.PromoCode, event.data).subscribe(res => {\r\n      this.spinner.hide();\r\n      console.log(this.translate.getDefaultLang());\r\n\r\n      this.notification.showNotification('promoCodeUpdatedSuccess', 'success');\r\n    }, error => {\r\n      if (error.status === 400) {\r\n        this.notification.showNotification(error.error, 'danger');\r\n      }\r\n      else {\r\n        this.notification.showNotification('somethingWentWrong', 'danger');\r\n      }\r\n      this.spinner.hide();\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2xpc3Qvcm91bmRzLWxpc3Qvcm91bmRzLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ListActionTypeEnum } from '../../../shared/enums/enums';\r\nimport { ListActionClickedOutput } from '../../../shared/models/list-action-clicked-output';\r\nimport { YesNoDialogComponent } from '../../../shared/shared-components/yes-no-dialog/yes-no-dialog.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { AreaGroupList, AreaGroupSearchForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-areagroup-list',\r\n  templateUrl: './areagroup-list.component.html',\r\n  styleUrls: ['./areagroup-list.component.css'],\r\n})\r\nexport class AreaGroupListComponent implements OnInit {\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  public pageNumber = 1;\r\n  public cities: FieldListData[] = [];\r\n  public areasList: any[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFormData();\r\n    this.getListSettings();\r\n  }\r\n  public getFormData() {\r\n    this.baseService.getAllForList(Controllers.AreaGroup).subscribe((res) => {\r\n      this.cities = res;\r\n      this.dynamicFormInput = AreaGroupSearchForm;\r\n    });\r\n  }\r\n  public getListSettings() {\r\n    this.baseService.getAllForList(Controllers.AreaGroup).subscribe((res) => {\r\n      this.cities = res;\r\n\r\n      this.dynamicListInput.columns = AreaGroupList;\r\n      this.getListData();\r\n    });\r\n  }\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.AreaGroup, Actions.GetList, request)\r\n      .subscribe((res) => {\r\n        this.cities = res.entities;\r\n        this.dynamicListInput.data = this.cities;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    this.baseService\r\n      .postItem(Controllers.AreaGroup, Actions.GetList, event.data)\r\n      .subscribe((res) => {\r\n        this.areasList = res.entities;\r\n        this.dynamicListInput.data = this.areasList;\r\n        this.dynamicListInput.totalCount = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveListAction(event: ListActionClickedOutput) {\r\n    switch (event.action) {\r\n      case ListActionTypeEnum.Delete: {\r\n        const dialogRef = this.dialog.open(YesNoDialogComponent, {\r\n          width: '400px',\r\n          data: {\r\n            title: 'confirm',\r\n            content: 'confirmDeleteMessage',\r\n          },\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe((res) => {\r\n          if (res) {\r\n            this.spinner.show();\r\n            this.baseService\r\n              .removeItemById(Controllers.AreaGroup, event.entityId)\r\n              .subscribe(\r\n                (res) => {\r\n                  this.getListData(this.pageSize, this.pageNumber);\r\n                  this.isLoading = false;\r\n                  this.spinner.hide();\r\n                  this.notification.showNotification(res, 'success');\r\n                },\r\n                (error) => {\r\n                  if (error.status === 400) {\r\n                    this.notification.showNotification(error.error, 'danger');\r\n                  } else {\r\n                    this.notification.showNotification(\r\n                      'somethingWentWrong',\r\n                      'danger'\r\n                    );\r\n                  }\r\n                  this.spinner.hide();\r\n                }\r\n              );\r\n          }\r\n        });\r\n\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.Edit: {\r\n        this.router.navigate([`/forms/areagroup-update/${event.entityId}`]);\r\n        break;\r\n      }\r\n      case ListActionTypeEnum.View: {\r\n        this.router.navigate([`/forms/areagroup-details/${event.entityId}`]);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  public pageChanged(event: PageEvent) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-header card-header-primary\\\">\\r\\n                        <h3 class=\\\"card-title \\\">{{'clientsList'|translate}}</h3>\\r\\n                        <p class=\\\"card-category\\\"> {{'clientsManagement' | translate}}</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <div class=\\\"row w-100 d-flex justify-content-end\\\">\\r\\n                            <button routerLink=\\\"/forms/client-create\\\" class=\\\"btn btn-primary\\\" color=\\\"primary\\\"\\r\\n                                mat-raised-button type=\\\"button\\\" style=\\\"margin-left: 2px; margin-right: 2px;\\\">{{'add' |\\r\\n                                translate}} \\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <app-dynamic-form [isList]=\\\"true\\\" [isUpdate]=\\\"true\\\" *ngIf=\\\"!isLoading\\\" [formInput]=\\\"dynamicFormInput\\\"\\r\\n                            (actionSubmitted)=\\\"serveAction($event)\\\"></app-dynamic-form>\\r\\n                        <div class=\\\"table-responsive\\\">\\r\\n                            <app-dynamic-list (listActionClickedEvent)=\\\"serveListAction($event)\\\" (pageChangedEvent)=\\\"pageChanged($event)\\\" [pageSize]=\\\"pageSize\\\"\\r\\n                                [pageNumber]=\\\"pageNumber\\\" *ngIf=\\\"!isLoading\\\" [listInput]=\\\"dynamicListInput\\\">\\r\\n                            </app-dynamic-list>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport {\r\n  Actions,\r\n  Controllers,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicListInput } from '../../../shared/models/dynamic-list.model';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { RoleTypes } from '../../../shared/enums/enums';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { Observable } from 'rxjs';\r\nimport { MoveOrdersDialogComponent } from '../../../forms-module/move-orders-dialog/move-orders-dialog.component';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LanguageService } from '../../../shared/services/language.service';\r\nimport { OrderSearchForm } from '../../dynamic-data';\r\n@Component({\r\n  selector: 'app-order-list-admin',\r\n  templateUrl: './order-list-admin.component.html',\r\n  styleUrls: ['./order-list-admin.component.css'],\r\n})\r\nexport class OrderListAdminComponent implements OnInit {\r\n  public drivers: FieldListData[] = [];\r\n  public clients: FieldListData[] = [];\r\n  public areas: FieldListData[] = [];\r\n  constructor(\r\n    private dynamicService: DynamicDataService,\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private dialog: MatDialog,\r\n    private notification: NotificationService,\r\n    private router: Router,\r\n    private translate: TranslateService,\r\n    public languageService: LanguageService\r\n  ) {}\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public dynamicListInput = new DynamicListInput();\r\n  public isLoading = true;\r\n  public pageSize = 10;\r\n  dataSource: MatTableDataSource<any>;\r\n  public pageNumber = 1;\r\n  public cities: FieldListData[] = [];\r\n  public clientBrands: FieldListData[] = [];\r\n  public areasList: any[] = [];\r\n\r\n  selection = new SelectionModel<any>(true, []);\r\n  searchCtrl = new FormControl();\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFormData();\r\n  }\r\n  public getFormData() {\r\n    this.dynamicFormInput = OrderSearchForm;\r\n    var storedForm = JSON.parse(sessionStorage.getItem('searchForm'));\r\n    if (storedForm) {\r\n      this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == 'fromDate'\r\n      ).value = storedForm.fromDate;\r\n      this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == 'toDate'\r\n      ).value = storedForm.toDate;\r\n    }\r\n    this.getAllStatuses();\r\n    // this.dynamicService.getFormSettings('OrderSearchForm').subscribe((res) => {\r\n    // });\r\n  }\r\n\r\n  public getListData(pageSize?: number, pageNumber?: number) {\r\n    let request = {\r\n      pageSize: pageSize ? pageSize : this.pageSize,\r\n      pageNumber: pageNumber ? pageNumber : this.pageNumber,\r\n    };\r\n    this.baseService\r\n      .postItem(Controllers.Order, Actions.ListWithRevenue, request)\r\n      .subscribe((res) => {\r\n        this.dataSource = new MatTableDataSource(res.entities);\r\n        this.dataSource.sort = this.sort;\r\n        this.totalRows = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data.pageSize = this.pageSize;\r\n    event.data.pageNumber = this.pageNumber;\r\n    sessionStorage.setItem('searchForm', JSON.stringify(this.filterForm.value));\r\n    this.baseService\r\n      .postItem(Controllers.Order, Actions.ListWithRevenue, event.data)\r\n      .subscribe((res) => {\r\n        console.log(res.entities);\r\n        this.dataSource = new MatTableDataSource(res.entities);\r\n        this.dataSource.sort = this.sort;\r\n        this.totalRows = res.totalCount;\r\n        this.isLoading = false;\r\n        this.spinner.hide();\r\n      });\r\n  }\r\n  get clientId() {\r\n    return this.filterForm.get('clientId') as FormControl;\r\n  }\r\n  get driverId() {\r\n    return this.filterForm.get('driverId') as FormControl;\r\n  }\r\n  get areaId() {\r\n    return this.filterForm.get('areaId') as FormControl;\r\n  }\r\n  get areaGroupId() {\r\n    return this.filterForm.get('areaGroupId') as FormControl;\r\n  }\r\n  get orderStatusId() {\r\n    return this.filterForm.get('orderStatusId') as FormControl;\r\n  }\r\n  get from() {\r\n    return this.filterForm.get('from') as FormControl;\r\n  }\r\n  get to() {\r\n    return this.filterForm.get('to') as FormControl;\r\n  }\r\n  get PageSize() {\r\n    return this.filterForm.get('pageSize') as FormControl;\r\n  }\r\n  get PageNumber() {\r\n    return this.filterForm.get('pageNumber') as FormControl;\r\n  }\r\n  public revenueAuth = ['Admin', 'Manager', 'Accountant'];\r\n  layoutCtrl = new FormControl('fullWidth');\r\n  orders: any;\r\n  selectedClient: any;\r\n  selectedDriverId: any;\r\n  selectedDriver: any;\r\n  client: any;\r\n  area: any;\r\n  driver: any;\r\n  areaGroups: any;\r\n  orderStatuses: any;\r\n  clientsControl = new FormControl();\r\n  driversControl = new FormControl();\r\n  areasControl = new FormControl();\r\n  areaGroupControl = new FormControl();\r\n  filteredDriversOptions: Observable<any>;\r\n  filteredClientsOptions: Observable<any>;\r\n  filteredAreasOptions: Observable<any>;\r\n  filteredAreaGroupsOptions: Observable<any>;\r\n\r\n  totalRows: any;\r\n  services: any;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n  @Input()\r\n  displayedColumns: string[] = [\r\n    'select',\r\n    'orderDate',\r\n    'merchantName',\r\n    'driverName',\r\n    'area',\r\n    'status',\r\n    'driverRevenue',\r\n    'orderTotalPrice',\r\n    'actions',\r\n  ];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n\r\n  isAllSelected() {\r\n    if (this.dataSource) {\r\n      const numSelected = this.selection.selected.length;\r\n      const numRows = this.dataSource.data.length;\r\n      return numSelected === numRows;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.data.forEach((row) => this.selection.select(row));\r\n    console.log(this.selection.selected);\r\n  }\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(MoveOrdersDialogComponent, {\r\n      width: '600px',\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result) {\r\n        const dialogResult = result;\r\n        dialogResult.orders = this.selection.selected;\r\n        dialogResult.recordDate = this.convertToUTC(dialogResult.recordDate);\r\n        console.log(dialogResult);\r\n        this.baseService\r\n          .postItem(Controllers.Record, Actions.MoveOrders, dialogResult)\r\n          .subscribe((res) => {\r\n            this.notification.showNotification(\r\n              this.translate.instant('ordersMovedSuccess'),\r\n              'success'\r\n            );\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  convertToUTC(date: Date): Date {\r\n    if (date) {\r\n      date = new Date(date);\r\n      return new Date(\r\n        Date.UTC(date.getFullYear(), date.getMonth(), date.getDate())\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row?: any): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${\r\n      row.position + 1\r\n    }`;\r\n  }\r\n  inputType = 'password';\r\n  countries: any;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  stateCtrl = new FormControl();\r\n  filterForm = new FormGroup({\r\n    clientId: new FormControl(),\r\n    driverId: new FormControl(),\r\n    areaId: new FormControl(),\r\n    areaGroupId: new FormControl(),\r\n    orderStatusId: new FormControl(),\r\n    from: new FormControl(),\r\n    notes: new FormControl(),\r\n    to: new FormControl(),\r\n    pageSize: new FormControl(),\r\n    pageNumber: new FormControl(),\r\n  });\r\n  public selectionList = [];\r\n  public loggedInUserRoles;\r\n  isAuth = false;\r\n\r\n  onPageChanged(page: PageEvent) {\r\n    this.pageSize = page.pageSize;\r\n    this.pageNumber = page.pageIndex + 1;\r\n    this.paginator.pageSize = page.pageSize;\r\n    this.getListData(page.pageSize, page.pageIndex + 1);\r\n  }\r\n  filterOrders() {\r\n    this.getListData(this.pageSize, this.pageNumber);\r\n  }\r\n\r\n  getALlClients() {\r\n    this.baseService\r\n      .getItemsByKey(\r\n        Controllers.User,\r\n        Actions.GetAllItems,\r\n        'role',\r\n        this.userRolesEnum.Merchant\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.clients = res;\r\n          this.getAllDrivers();\r\n        },\r\n        (error) => {\r\n          this.notification.showNotification(error.error, 'Failed');\r\n        }\r\n      );\r\n  }\r\n\r\n  getALlAreas() {\r\n    this.baseService.getAllForList(Controllers.Area).subscribe(\r\n      (res) => {\r\n        this.areas = res;\r\n        this.getAllBrands();\r\n      },\r\n      (error) => {\r\n        this.notification.showNotification(error.error, 'Failed');\r\n      }\r\n    );\r\n  }\r\n  getAllDrivers() {\r\n    this.baseService\r\n      .getItemsByKey(\r\n        Controllers.User,\r\n        Actions.GetAllItems,\r\n        'role',\r\n        this.userRolesEnum.Driver\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          this.drivers = res;\r\n          this.getALlAreas();\r\n        },\r\n        (error) => {\r\n          this.notification.showNotification(error.error, 'Failed');\r\n        }\r\n      );\r\n  }\r\n  getAllBrands() {\r\n    this.baseService.getAllForList(Controllers.ClientBrand).subscribe((res) => {\r\n      this.clientBrands = res;\r\n      let areaIdField = this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == 'areaId'\r\n      );\r\n      areaIdField.data = this.areas;\r\n      let clientIdField = this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == 'clientId'\r\n      );\r\n      clientIdField.data = this.clients;\r\n      let driverIdField = this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == 'driverId'\r\n      );\r\n      driverIdField.data = this.drivers;\r\n      let orderStatusIdField = this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == 'orderStatusId'\r\n      );\r\n      orderStatusIdField.data = this.orderStatuses;\r\n      let clientBrandIdField = this.dynamicFormInput.formFields.find(\r\n        (x) => x.fieldId == 'clientBrandId'\r\n      );\r\n      clientBrandIdField.data = this.clientBrands;\r\n      this.getListData();\r\n    });\r\n  }\r\n  getAllStatuses() {\r\n    this.baseService.getAllForList(Controllers.OrderStatus).subscribe(\r\n      (res) => {\r\n        this.orderStatuses = res;\r\n        this.getALlClients();\r\n      },\r\n      (error) => {\r\n        this.notification.showNotification(error.error, 'Failed');\r\n      }\r\n    );\r\n  }\r\n\r\n  clientSelected(event) {\r\n    this.selectedClient = this.clients.find(\r\n      (x) => x.viewValueEn == event.option.value\r\n    ).value;\r\n    this.clientId.setValue(this.selectedClient);\r\n  }\r\n  driverSelected(event) {\r\n    this.selectedDriver = this.drivers.find(\r\n      (x) => x.viewValueEn == event.option.value\r\n    ).value;\r\n    this.driverId.setValue(this.selectedDriver);\r\n  }\r\n  areaGroupSelected(event) {\r\n    const selectedAreaGroup = this.areaGroups.find(\r\n      (x) => x.groupName == event.option.value\r\n    ).id;\r\n    this.areaGroupId.setValue(selectedAreaGroup);\r\n  }\r\n  areaSelected(event) {\r\n    const selectedArea = this.areas.find(\r\n      (x) => x.viewValueEn == event.option.value\r\n    ).value;\r\n    this.areaId.setValue(selectedArea);\r\n  }\r\n  changeOrderStatus(event, id) {\r\n    console.log(event, id);\r\n    let request = { orderStatusId: event, id: id };\r\n    this.baseService\r\n      .postItemTextReponse(Controllers.Order, Actions.UpdateDetails, request)\r\n      .subscribe(\r\n        (response) => {\r\n          this.notification.showNotification(response, 'success');\r\n        },\r\n        (error) => {\r\n          this.notification.showNotification('somethingWentWrong', 'failed');\r\n        }\r\n      );\r\n  }\r\n  changeOrderPrice(event, id) {\r\n    console.log(event, id);\r\n    let request = {\r\n      id: id,\r\n      orderTotalPrice: event.target.value,\r\n    };\r\n    this.baseService\r\n      .postItemTextReponse(Controllers.Order, Actions.UpdateDetails, request)\r\n      .subscribe(\r\n        (response) => {\r\n          this.notification.showNotification(response, 'success');\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          this.notification.showNotification('somethingWentWrong', 'failed');\r\n        }\r\n      );\r\n  }\r\n  changeOrderItemDescription(event, id) {\r\n    console.log(event, id);\r\n    let request = {\r\n      id: id,\r\n      orderItemTypeDescription: event.target.value,\r\n    };\r\n    this.baseService\r\n      .postItemTextReponse(Controllers.Order, Actions.UpdateDetails, request)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n          this.notification.showNotification(response, 'success');\r\n        },\r\n        (error) => {\r\n          this.notification.showNotification('somethingWentWrong', 'failed');\r\n        }\r\n      );\r\n  }\r\n\r\n  navigateToDetails(id) {\r\n    this.router.navigate([`/order-management/order-admin-details/${id}`]);\r\n  }\r\n  navigateToUpdate(id) {\r\n    this.router.navigate([`/order-management/update/${id}`]);\r\n  }\r\n  navigateToCreate() {\r\n    this.router.navigate([`/order-management/create`]);\r\n  }\r\n  navigateToMerchant(id) {\r\n    this.router.navigate(['/forms/client-details/' + id]);\r\n  }\r\n  ngOnDestroy() {}\r\n  public updateOrder(orderId) {\r\n    this.router.navigate([`/forms/order-update/` + orderId]);\r\n  }\r\n  public viewOrder(orderId) {\r\n    this.router.navigate([`/forms/order-details/` + orderId]);\r\n  }\r\n  public createOrder() {\r\n    this.router.navigate([`/forms/order-create/`]);\r\n  }\r\n  public pageChanged(event: any) {\r\n    this.getListData(event.pageSize, event.pageIndex + 1);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL3ZpZXcvcHJvbW8tY29kZS1kZXRhaWxzL3Byb21vLWNvZGUtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvZm9ybXMtbW9kdWxlL2NyZWF0ZS9vcmRlci1jcmVhdGUvb3JkZXItY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { DynamicFormOutput } from '../../../shared/models/dynamic-form-output.model';\r\nimport { DynamicFormInput } from '../../../shared/models/dynamic-form-input';\r\nimport { DynamicDataService } from '../../../shared/services/dynamic-form.service';\r\nimport { BaseService } from '../../../shared/services/base.service';\r\nimport {\r\n  Controllers,\r\n  Actions,\r\n} from '../../../shared/global-variables/api-config';\r\nimport { FieldListData } from '../../../shared/models/dynamic-form-field';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NotificationService } from '../../../shared/services/notification.service';\r\nimport {\r\n  ActionTypeEnum,\r\n  FieldTypeEnum,\r\n  RoleTypes,\r\n} from '../../../shared/enums/enums';\r\nimport { Router } from '@angular/router';\r\nimport { UserCreateForm } from '../../dynamic-data';\r\n\r\n@Component({\r\n  selector: 'app-client-create',\r\n  templateUrl: './client-create.component.html',\r\n  styleUrls: ['./client-create.component.css'],\r\n})\r\nexport class ClientCreateComponent implements OnInit {\r\n  public dynamicFormInput = new DynamicFormInput();\r\n  public isLoading = true;\r\n  public roles: FieldListData[] = [];\r\n  public areaGroups: FieldListData[] = [];\r\n  public get userRolesEnum(): typeof RoleTypes {\r\n    return RoleTypes;\r\n  }\r\n  constructor(\r\n    private baseService: BaseService,\r\n    private spinner: NgxSpinnerService,\r\n    private translate: TranslateService,\r\n    private notification: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.spinner.show();\r\n    this.getFieldsData();\r\n  }\r\n  public serveAction(event: DynamicFormOutput) {\r\n    event.data['role'] = this.userRolesEnum.Merchant;\r\n    let formData = new FormData();\r\n    Object.entries(event.data).forEach((element) => {\r\n      var file;\r\n      if (element[0] == 'bankVerifecationAttachment') {\r\n        file = element[1] as Blob;\r\n        formData.append(element[0], file);\r\n      } else {\r\n        if (element[0] == null) {\r\n          element[0] = '';\r\n        }\r\n        formData.append(element[0], element[1] as string);\r\n      }\r\n    });\r\n    this.baseService\r\n      .postFormItem(Controllers.User, Actions.CreateClient, formData)\r\n      .subscribe(\r\n        (res) => {\r\n          this.spinner.hide();\r\n          console.log(this.translate.getDefaultLang());\r\n          this.notification.showNotification(res, 'success');\r\n          this.router.navigate(['/forms/client-list']);\r\n        },\r\n        (error) => {\r\n          if (error.status === 400) {\r\n            this.notification.showNotification(error.error, 'danger');\r\n          } else {\r\n            this.notification.showNotification(\r\n              this.translate.instant('somethingWentWrong'),\r\n              'danger'\r\n            );\r\n          }\r\n          this.spinner.hide();\r\n        }\r\n      );\r\n  }\r\n\r\n  public getFieldsData() {\r\n    this.dynamicFormInput = UserCreateForm;\r\n    this.isLoading = false;\r\n    this.spinner.hide();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}